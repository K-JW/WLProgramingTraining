(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1792340,      35322]
NotebookOptionsPosition[   1677479,      33260]
NotebookOutlinePosition[   1716077,      34067]
CellTagsIndexPosition[   1715939,      34060]
WindowTitle->\:6A21\:5757 1\:FF1A\:57FA\:672C\:6982\:5FF5\:4E0E\:51FD\:6570
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ae861ed8-5fa1-4088-84fd-2651cc7b368a"],

Cell[BoxData[
 StyleBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
/w/qQILY
     "], {{0, 100}, {450, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{268.015625, Automatic},
   ImageSizeRaw->{450, 100},
   PlotRange->{{0, 450}, {0, 100}}], "Title"]], "Title",
 CellChangeTimes->{3.785141470231607*^9, 
  3.785141924332955*^9},ExpressionUUID->"059f49ae-49fc-4f44-80e6-\
ab700841b96e"],

Cell["Wolfram \:8bed\:8a00\:7f16\:7a0b\:ff1a\:6982\:5ff5\:5230\:5e94\:7528", \
"Title",
 CellChangeTimes->{{3.720193284509671*^9, 3.720193288595942*^9}, {
   3.726941915180914*^9, 3.726941915962871*^9}, 3.72805557420755*^9, {
   3.730591596400971*^9, 3.7305915992067432`*^9}, {3.785144430726679*^9, 
   3.7851444313967543`*^9}, 3.7893874390714083`*^9, {3.7900038876665955`*^9, 
   3.79000390745925*^9}},ExpressionUUID->"1243965a-40ce-482a-9c91-\
36878f955d76"],

Cell["\:57fa\:672c\:6982\:5ff5\:548c\:51fd\:6570", "Subtitle",
 CellChangeTimes->{{3.7201933391803827`*^9, 3.720193342066636*^9}, {
   3.726941908757318*^9, 3.7269419228992167`*^9}, {3.727530497787223*^9, 
   3.72753049862645*^9}, 3.728055577046837*^9, {3.730591604782598*^9, 
   3.73059161531714*^9}, 3.7893874524544635`*^9, {3.7900039143492794`*^9, 
   3.790003926412358*^9}},ExpressionUUID->"abd2714b-c40b-491d-9b98-\
1f3d249655e3"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQeUHMd57zs7sznP5pxzALARC2CRAwEGAEQGkXPOOedMEIEAEUgQzAnM
USRNMUqUJVFWtCRfS5Z97SeHY+va9/paksP/VVdXdVdVV/f0LPmO7/MFzvnQ
PT2zk6d/3/9LVbl4w5TlwUAgsCWR/Ddl0Y6Rmzcv2jU1k1yYvn7LqhXrly2d
sH7rshXLNvcsDpGD62MCgd8TiyX7P/3pTx8ihtt2227bbbttt+22/Zez24y/
bbfttt2223bb/i+wzJLe23bbbtt/gmUUD/m/3v6zP4Pbdtv+K9ptzt+22/Z/
tv1ns/c2z2/bbfv/t93m/G27bbfttt222/Zf11TOxybXmJbCTL2cUm9aqrFf
bR5LZUb3a8nWsDq6H2dYmmF1ZL+OXW5EbFoT268nW2ZpwjatQTD1ciMzch/p
zMR9wzKaLYvPaCXWz7RMbv29LcxtgG1ZfL+N7KvWTqyDPEZ/+tziyfOk95PV
ya5TrUNjnbJl8/0ust+l7HchgWwT+Fa1nG5iPbblGjaIvB8DyPNrFY75s3if
t0skj2E8TqJoecZ2MNkOtvdFyxvsPEath92HcLu8IdFb/hD2vHTPV97aNkiz
HWS9Pn+meY/yXPaFx0oUHk9rOcwiPH6ieNscftn8Pkiv1+27kKNc5/g+Cfel
Xud2W+Gy4z3XPbevyHT36f7Zu91O/z1N0B1n3+mEPJ/fC+33IYK5fTZen4N1
eaDTcge635f6N9nd5jlG3CoWT47HG9vsgcy6LOPnLfEYPbcJlqBs1evk450R
THe+9bAwt3Z/xs/r1rE2DxvgtExubebjGvuEJZZl9pcvu1o/dvs26bjK+UBc
MbESBGLZVrJi0+LLEUioJNtScrnIvt64TI8Zl0sRE29bIL4MMQnl5mXytzGJ
NWRLjsUbxypMM44nsG2iYAlVZCtYUjXZVptby8j9JYtWSy1I/I1gss7qiTWQ
60VrZNaEYKppIcPSDGsm1sKslVownWyp9TONMNQ4HkNef0yokD5GKLPDPM6N
vP+hjDZ7S/fbqcUat2VG98P8cifZ7yLWyfY7EUsux4a7TcsaaFp4oL2f3cOO
8duw24XN5xObPZAdE22gp8Vl9VAz7181cl1EG+S0HM0xYsbziTOM3mawbbmD
5cuRruPHcocQ641gQ52Wp1i+5pj2enJ/+b3yNk+8HOG+xMfXPS9fFun1/h9i
/H1xXDfEtDxmxmeZN8Q+/lU8rnE/OaoN1hwb4ut7q96G/g6N73NOj7nPt47f
j8Yi/B6t37xo4m9e/O3TfX47frlLspBy2Wm6+2TXZfJtp2Ad9Hgo0zweYhYr
nOO4medJsp9hbkWLFY7HZrTbZpw3M5ilt5lG99vJubnNPpY+QNjnl20LMpOO
pwnbtP5kvz/dBtPIeZ6YuuX76mVzn7CCM8Pab7EsyC21md0HeUyyH0ohl1P4
tsUyfty8jh9vNtmVSu4/tb99mbAsRMyd8yXKfikzg+ec9dXmljM+rozynG9j
uCUwsy4TlifWMu6XM7ZX2Iy3OF8lbKsY7znja0xLrBEYX6tYncn5FM51Yimc
740aazLfF+P9Nt7nNNFsvlumct4wwu9gEnns2CLqT5icFjivMD7IWS9+b8n1
seF2i/k267udv2HJlN9llvL7NH6b2dwHUBnfjZDKeuFcIzFe4Xxkvrsw3tWM
2w9057kf5vu6ve4cL3JkiM2VPOW4l3EmRXM/bs9FfE7a677M6/fxHkb7Hvf1
vnI9bpMrHmeMzR1k7/t4jFhfz1FheA5ntT/f1I8Pa3A+ZHHeB++jZb0b/znn
rb/jrI6G88JtMgW2qz6AYZnkfGI8Ht12CpzvYLpG0DMi9zWsly/LnLd5zxne
rlibbPx8q3JdZ4S3Qc55i/Wc3Qbz+0tb7gfoWB8UGG9ai9Mod/rTx6T7BtNT
jeM244196xi9vcl9yv7UftRCCuODXpw3trFunC9lur7MZD3V9mXm9Qb3qdms
Dxg8TzB5bun6xDqT2wnlAt9VznM9L7A+UdTytcwY45NkzlPdnlJvM55yXtXu
Og2v8r3F5LnI9zQN46mmb6fvvaHpg+Q50O801fEK661tm+WTWn5u2DTb/zV8
4m5q5m9W9J+Zv+zif4eyBMaLlu1Dx2fbfJcZ78HzHGGbE6WWt87hmvN1NLxx
+9tcgZkqY1UeR2R7bx/+pg981zFdx8S++jy5mn31WF9Z/lX4CJ7PZZDGvsRj
q/5EH1nuehvLb+gRzJ3xIb6f42R+SPUBvDgv6nnrevG8EJnvDu2QqWp3bvy2
auyg2+EnmOctW+Nzbpssl32AUEaH5jY6Xc8sQ+F8Rpue+Tq+Zyi6XuC4zXKb
8UHl+pBW44tanpvJd4sxBrvT2kz/gjK81bwPqtFb6fU24819U8+3mo9h3IZx
3dKsbpyPLbbj87Ei43lsXozPMz8gvoJp+wqJ77aVCzyvMI9RztewmD3hd3yl
zfgEjZa3rMbW8kmChk9StTzT7gbTeXxeitUrnJfi880C61ts3e6l46n1N+M/
5HsSk1hB4wghFicPWlw3v4NBQaerMS36ewl32jpe8oU7Zc6rv0HLXPiuNfcY
vYPzkfR7jouW1zHdwfg+MNyXaXRxNCzWxYlprDlKzrtpcx3vdcz1YrGrCc9L
Z7rrPN+Dr5Db0foIuvfDlflRfJe8XhPX4VHFoxS/NUf/vXdwPkfDeA/WOzjv
qeXF3J1wPKvbwWLfZrFe0Pf8/ESvl89fsSzfSHOQTLdw7RJSH986FzL9b3Gd
636F9ZTrHSxmr9HzKueZ5gpaMX2B8Rka1qcPEDivct2d82r8XjSJ+5Z2bDfv
g3K8VWC8zXmZ9f3MGEBqixDnd7LeqefFfDzT8JzrCcJ+vJK7t+L4lTbnuY63
OM9ZX8bi9rUsL69yXtTu6rbam/MpIuMF1uvy8IZ+51uR8Q4tr8TstYw3OU+N
fC+DtDagkeXUzThV0PredyjG8/PtUkzLyXmR7x5x+q+S8dmc8T0+c/B9yM/3
RStGvM4l9v1l+d6Xv/eTH/BktQ9z43i+y75lg53mdX9u/kA0n5kbr718ADc+
R6Px/X6f3I5nD3Z+d/vCfyE/ZfymHEyPNpYf1lzW5u29+G/u+4ndO3LyussO
/dIpHaPMl+qQOpVzmxn7l41cl9HJzMl6Gtd3xO3b5Xi9lS+1WR4UuO+q9dMU
bZ+uxutFbc/Zzi4zPgTT5Ly+nONnzDf8FEHDc8ab+4qWN+6fxul5fp4bYzzL
Pxvm4Hy8EJsXLaGMWami63k+nsXsKbOrzXg9rbkz+c7j+Sbny03GJ9bLsfoE
Vb9XK6ZqeWYS4yNxXtbwwdRGO16vY7xUeydoe5HtGfy7wuJF5LtKYynGZ0F9
Vx5X0tffWWbk5MN6xtv1LPz35OZ/K7/dbP+M5zx3aPlsYftV8j3amrqI5/4I
LPUbU/dVExYF3720scVpD35rn6PK7t7Iml17P7rH9Lmfp/EHInH/qzS3mIfK
/NwI8fyovmvydzhW1O195H2sTtt/mby9jvOu5lJX56jx8eC8ehsxhi/yPSxz
3uJ/2I7RxzK9Y2v5Tvt8Z/Ge6H9iEv+N86PFeVm/B9XzrmWKfs9og1cOn+bN
0+VYvTZuny5vg5zz6QLX09W6vVZ2u3ZBv9tmc97Mw1Ofw9hy7gv5e8r61Gar
zkzPeSU2L3Fe3ZZZcfqAkXu3NLuRd6+2Y/SM7RbnqYavZpxX4vVaLV/t1O+i
STH7OrveLsWO04es2rsmRz6evydOPS/G7WWuO78zbQLL25l/1swYr9bY83o7
1VhMiubn5d9DSMjHS36vWEuTJRyLyPnIcXrO9lgvxue47LvF7r9y7T5E2Lqw
PSKXxfprtQbcJ9Nzhcf2FTsY7MPfcHktfvT1/ycmctXFT1HjApE0upem9stf
r/oCh8bvK9/F+9XE5qNluyNvZdaeRsV6He/5cU8dP5DFygXOi6yPNmcvaQwx
hm/H8u24vc13m/Mm661+IqlGr92O22eacfuQ5Ecw1huvh2yDzEJUF7H74udl
HdelGL3N+aAud69qeovzYl2++Df9Tb8g3WR90FPTt7J4cJvM+TSZ86FUI6bP
Gc+vk2P5Fs9Sbd5rOc9j9hbny5x8lxgv6vVyxvZKU7NbtXbl5rF4oa6ecr5K
w3iNnnfE6uuELbd6aqEUJ+cp25PVnHyjpefVunrT5xI+twzdtr9sGdwHELeK
ds9od+G8rOFtviucV+Njaow+QrzeUVNPGT/Qqd3FvLzvPHyPfP7zG5/vc853
iNP88JLrc5Xrar9VX02Xr/fS5a7Pc7A33/v0/MTYhFvPmea2vl+3hrci8yN9
7pG+C36ud61tUHgfjS/hZV8qds+fj/mbMvvuouS8wTgd79X6PC9dz2vwfffw
qDqex9pVLdLlqEGS4vhh+ZjuNrp6fLHe3uq9E86VsnULZj6fYAbP+6usF5hv
8F5bg98fao9eMF3Xn2cy3uSDnd8NauL2Zq6ec77FrsHj9XoGz1mNns12O7Zv
x/M541ssLa/lvCNmXwYpP58g6vtym/O0ll7Mw3ONz3rfpPp5kfM1crw+oUrR
9C75eEvLi4xvUOL1Qsw+ucHup2P9CEGpFsLul7DjLtx30+XieX29yHfVV1T0
u5bxvLbOWbNi73v40Lzmzku7a2vreYzeW8tHHa/X1h19ifO2F9tV7eyHf7pe
bemYHz/BjZ+90TPYwXmRUV+C65H8Cj/590iP6/s5qbznsfRBMmv7lKvxyfy+
XB/NY/mtxXfV/s7fklqb58l6Pz14Xvl667IH6yMx3q0u2IvzqrZ3NaHfnvfb
afrwYzPaneddSz91Cazvkp5PKEPcF2IA6VzPiTV5Qj6AsV7H+WC6qgUZM0TG
p9v5eet+qda0+W8yyPQvnDl7uUaPs95f3F7U8aWKjlc0PWV8uaXppXq7RHIs
sZzxuo5tK+w6+qR6dtwjJ6/2zin98bKWr2NavoFpd16LILw3Gj9K7HMw6xvs
+QWyvlfq7Qx/Tct4Z8+cpOV1Gj5sx6Ok/FWYz8jxiJX5qrezOR+R633OyfvU
7306h/dRv7ppVgfvI3DQwTYvHRwtG1Xd6YftCqe8bh+B47Hc8pmJxwibpcu5
OhMYbrHc5TlIz1/In+dGqNfw812JVPPnVf/XV99Td9tI2l3Le32szBfn3eL4
2RrGc/2vq8/3w3qR316Md+Ty7bp8Vb/HhiMwPqxwXum1Cwnc55eDFqvbyb7I
flV76eqhuqGLAUj5f5cZOw79L8TuRdZbfOcxfYM/GeZ8n2CayKk2amZtXosj
Z6+L3Yc0rNfW4Tk4LzJd3Lpp+XKWq69gXK9gDK+Ttb2hxQ2zuC/MtnPU04t1
d2r8voHl3Vm9oeXr9BNiGmIdAzfeS9ekqbkTzaWunvt5CuPF2TdBle0azkt1
qWF136eWl/S6O+cj8l13nS8dr+H8l6154nrdKy7vyjfd7DMfbNbq2Eiz1aLl
uxdzIt2HyFOX5yjV5LHL6kw+32beB+e85Bd4cD82Uk0hf370dQ+STeR+n+M9
Ppnv5/sZTX1B7mD3vJUn+91zYl9ZfZ5an+9ak6/jvMnykKoxtOzXG68jDkXi
egQ9L87OUY+pM3W8zDo3a7WZ4SsYbNfF/gX+09vY7A+KGlDJ63pdphynfsQA
xqD+JuON++V6X4rTy7o+JMXuWxz6Xs/5MiEnL8Tn1ePx5ZKe13Oex+v5fh0z
Nvs2qU5hvDAHxzHH1mR6TEoj2TaRbTOxFmpBaf6f2D8o5+MNptuc19XUa+bh
pNnxFisPr2W8OudOX28Xq2h5NUcl1qs6OJ8lbIV4fEjHeSVeH5et0fIq41Ud
71Vb5zYHJ9pzo9c5Oyr97jbb1Ef9vEO/fwVsZxZPH4ezRfB/tIz34XvoXpP0
/PvKdKX+0HFfQ4StJi6g433eYHfu88dwfO4q730w3y3+o2O+rnYgWs3u1/zk
5t1i9268FzR+nC6fr4vjq9reK1+v8j5LZr2rjvfJed2MHW3c3uEPiPF5Hmvv
cPUB9Ez3qJGS4q66Obm2DxCyfAAhD5DBzMj/8/o/K3Yv1NyrMWHOfMO3YDN4
gmntLFZv55StPDPTsCE2G0dlv26mjivnNRy3TdTxFVLMPsDi9TLjeY0dv1zL
WF9rMz+pyjQeqxeZntLErFmwJsb7RpZ7F2vv1Nm2vJ9Q7in01vCc8/0EPa/U
3aVrGJ/pVU+vct4tZyXU22W6/I4i9sSLGn5gZN3upt8dc+1c+B9pHplaEx1R
j2n0ux/d7pfPftnuYKq7Vo8XuB5vXRaYZr0Hymvkx3zlyXWaXcN4N/1uHDfm
6hew+fpeJnFfjRf0Ks95sG3sfdBpfNH85ce/TGxf8z57afu+fmcjPicful7V
9C6mMt085qL5/Wr7iNwXa/L1jA/5qc/34LxvTR+2OR/LY+kK50NaTS8c0+ZQ
5WOWX+CYn6uLzwv8p4zvoibVAzC/xMohpPN+u/5snZT+pp6ncfp21qsnMp71
3kmxamefvV2nL2t6B+cTSoXaOtUqNJdNi7H66ioE3lfKsXtrv9Ksv0syON3M
uF7PLjcxrd5EGW5ag5V/j0mpM/vkU+qEHroGhKheV/rjk5vM4z45L+XqHXH6
foKO99bysr/YoeG8reO9tLxjDoWub86zZ05gvF/zFZ9X/QCXXPyXOSe78d0t
P+7GI5HPfdXuHvX38TpT/ZGIs3H88F3V94OV3nk3pgtWEInvgh/gOKb4Dm4+
lJVb0L1fTtZL3Peca6PG9X3y1fHdipL1X5n5qbvvkc0X611i+9HG7z3r8ZX4
Pb2tD66r+sShX8h5LsvW7a61eGEX1rP6OXUdHN2MfK1xza1jvch5HpcXNb50
O3v2TtDK3fYXcrjtrF6g09b8PB5Bj7ex5zPQfDzXdXBYTRntqRM534/12fWz
e/HS5Di+U8+7afgK5TqZ8TFq7N7KybM5Nkl1Qsye1d8ZdXgp/QmvW022G5el
Xnh1DTqD8fWWSfNvDManOtekkfnuxnlVx0fIx+tmJPpiPJ9f78zH232kbnn4
SBpeU29H9bvPeno3xlvz6gc5zz9ejI+kfXIHQ46t+tHuQ9x5ro1l63Rvr8zG
KOLzbkynJuh5z/y62lvuynfBB1D9gHxx64PvrjbUg/06P0FzTH0/RZ2v+jqW
b2Nz2sH7HNZbHrH/TeG9ymktt5XvmhvvXWP5Q1zuNwrz7K1TY/iD3H1rge1a
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
xnr32KvEeXYsGFHfizFesba+HY6a7XQ2Pz+T+QFsHRtem0dn7fF5OQLr+bp5
Vnw/XWS/yHt7rqu23p6argavws7RC+vFB5R1aAKuOr6W6fhGe54tzbu3sL46
cY6tvS4NNarljT65ZnvtPbHuzsrHcy0v8r25b/H6dIXzhmVGysnrTKPhxV4T
v5x3xO1VxuvXjnfV8PyyI++us2jOWRrtHk3+va981/R9Odmu0eyGrnWYyXtH
fNwtJ6Ct/dOxXacRxesVv8J4Htld5LfVRPhZTX53jcgceB9KNzyOmtMfo2jb
a8gcvQHZQ+Yia9gSZA1fgpwxq1G27BwqtzyKqh1PoWrb4yhfdhb5k7Yhe9Qq
YiuRe+cG5N29WbZ7ttBtztg15H6WIZvcT/HcI6jccA1V258k9/cYKjfdQOH0
fcgesYw83mJkk8cLD7oP2bPOo+rkp6g6/C7ypx8gn30/07dIGYZR+17FxDNf
Qwxdb6Xbfp9yma+jzg6il3uczHcxqy8v0sxdz55FD12fo7mdW86e384rZh9x
36M2L0LPnd9YftRr3Gq1vjpDR6zP85mT9+sHhLuEWib32L20jr1Se++b82Gd
rlcuZ2pYb7AhswPivByb70qNHucI5Xy32XNvxYzF+D7X8Izx1qxdzUy9dJX1
/SzOOfPzap19pcL7Sssca8o6tDzP27M6/CTWD0/r7mrsNWWpVm9UND1nfCOL
2TeweH0947o460/R8al2Pp6vQWfX2CuM18XrM1z0vMV5QcNbtRvtcOR+NIwP
iYz3E693jdmL9XYRtHykWH1f+O5HD/nR8F717w6GDhXMg/MOpg9lZnCdcbyA
mRff3XyIaLnu4LvKIZXvTLuT9zMQT77HeaMQN2AuUoevQuPBZ9F48nXU7r2F
hgvfRfO17xOOP4aC6XtQvPA0anY9jc4Xfo7uV36Jnjd+hc6nf4B+D32Ktsd/
gJaLHyFx2cPIXnEVxTMPIjx8ObJGr0buPduQM2ETwsOWIWf8BpQuPY/EpQ8j
Z/PT6HfpEwx47I/Q/th3MPDVX6DzuZ9g0Du/Rv+H/xBlKx9E4Yz9KJ5/HE0X
PkLTtR+i9vjXUX/wFlrPv4Oi+w4itnMJaja/hYZ1ryOQTvwVI89g6HxeK2jp
ezVmJGp7jc73iKnLM3g8mK/GS0T2W99Jzm1Br7tqe00sIJJP7BrHH+zC+r4z
PqpafLc8vXA8pOO8dX7yx27fZt2XjvWKZhLm6EfmvB9Nb5/fpdr9MK/fa7M1
OWe2qu0z5do9K3/POU/r8vgaOQPY+ntd5mMp6+TY/oBmhq4Q1xf77Zycr5Q0
u3RZOlYVgfN8nTrG+aR6lm9vYDV3Zi4+SLbWrNpklfMNAuPNWTh07k0yj9eL
s+xbFc7bMYtgGl/nTzO3XorZK3V3EfvjvWvudDPvHD6tEKOKpq5e4ruozf3w
nV7m2kCorYtGwzvyqHzfB9v9msRXoa/Ld2ye8T1P4HiBy76D7x7+hI7xUl8Z
ZzvnhvK+OHwBUb8PpTMvjdi3EU/PGL4GuaufQMf1LzDy4/+B0n1vI7n+TpSs
ewIlB76J6iPvEOZ+E63XvoWWCx+g/YnvoeHIyyhfdZH4A2+gYOpeFNy7C0XL
LqJo9Q1s+ORX6CW+QnjqQZQsfQC5d29DxqAFCI9YgcLZh1G89ByyZx7D8pe+
h5mv/DHS77sfpYtOI2/idlRvfxyVG6+jfMV5tF76CP2vfoYWww+4+T00X/wA
JTveRNX9P0B48AKkj1iPjtf/DiNe/VPkrX8KKbMfRGL1neR15RDLo7+7OOK7
2rH8XkHLK98/R0zfB+8lFmu+h2qNo1g/mOfyXc3pFfxXr8eMkvdevzGv+L06
y0LN0fudteO3tz7i/Dy1Ft9Dr7uufReB82ocVJy5w5mvqdv35ryG+WE3H8A+
FrTO/8bMu4HCdZp6fHbZ4jxfE9fwEYw6RnIsljA+lvXU0XV3rXk/7Yzl+vVy
JO6niay36/U8Oc947jwmxOnp9Zp6esvYunS0tl6M15vbIGF+iK8/Y1wWY/WU
8zbjg5zzUn98I1uXR5wP5MzJBx39c5oeOtd5d26z7mTWB13ZLubjvRgfmfPa
OL0X391m1Vs9SBEYHynfqNNM2ji9h273reEF7ioxdQff84YRbjMr8KvfXR7L
LY6gmxNnsZ2/Xi+dz32EofT2NKcerEVyzXgaFy+afRBFc08ie/o+3Pv+f8ek
b/4OqdPOoXjxBZStvoSqrY+iYu0VVG5+FI2n3ka/K99A/bHXiY4+jIJpe2ns
3uB8etcclG1/GsmzL+HVv/53bHjpWwj0rED+1H2oP/oGavc+j7pDr6Bi/XWk
jFqHvNnH8f4//SsWP/FtxC29ibKl9yO5YRJKFp5C2fJzKFl8GkVzjqHftc8J
7z9F7f5b5PhF1Ox4EpWbHqH+Q9b0M6g/+Q0s/BnQcugZ5JHnUzL3OPInbkVG
2zTyWzfqCDIQiKmAMd+Mfo+seIyok1Xeu3DVsy5isPw9dGO9Lp7PP0uHCbzX
5esdrP8SvNfl7iPF7iNcL61zb/G9J/L8nGjm5vG6PGtWLj/3ufTj9SWPL2l5
lfOCplf7mf1wPqxyvtPS8TTfT/sMzLiGrevFWIDSg6fM26O1q7QHa6C5n2Fz
nmt6MZ4Q1Mxw0a6Dq6nRc+W8oNvpvniZc51aNa3DN2PzboznnG+Q6uop14mF
jBn1Rlydct6cZRuy+K7OwNHU2/E+ecp4/hpbhdy82ywcNRcfaaatz/456zui
1N2psaxotHy2jvE+YvVKPY4zTj84ei1vnXcjsd2F87pYvVYvu3HXNKl2zsq5
DxMY78Z2lfH8/oeZJs2EUea9W/1jvUKPmcp7fzrfiMsHU9vNurlQDVKb7kEh
4WHN9sdQt/9ZlK28giqioRse/T4Kdn0dqYPXI2fYQtTsvYXSJWdRseFhwvib
qCa8rzv0EgpmHELO3dvR7+rnhNlXqf7OHrMGCeVjUTL/BMq2PImS+86h/wMf
oub4W6jZdws5d22lsyQTK8agfM0V1Bx5Hc3nvo7mPS8ie+pxFC87j4yehUio
vAPlhm+xhTzW4ZeJf/A6MoetJM/hEdTuew6V668Rxj+KUuJbVO94mmr+lOYp
yJxyHlVX/hh1D32TvB7j72+i/uCL9PrsUSuQUDjI5H2gkPyu+wnfT67z3TS6
Yvwz4T384vdRYreG127aPk/5/qq+KvfjLF/CxffwYr0vP5px3jFb5yuK4Vuz
8zw476fXzjErj5vTBwj5Wcs2kqmaPlPQUsIa8/w8S9f3zvSqydPV44usb2fH
BL5bsXvvOr5YwezLA9hzHmjuC5y3eG/Nxu2AY75+RhvkdXbsdXDV+L2z3r7K
Yrml5ePVeL1RZ29zXmZ8jZ2Xp7X1TWZuXtXyyZzpBucNjreafKfH+Prx6vwb
PeMt/c7i9WZfgdmTIM4D9GQ8j9M7Ztp6aXmPWL04u55/99xmQvrgvN0X/yXz
8Tqe5wqsV2OmUt7dg/FfNgevjZn7ZTyLz1v6fZgH220z2c3ZzrbWrDjNPLh8
ketD7Z4zKZfgohFpr9pQs/Y8UEqsnP7GE8tHIXv4UlRtvIrms++i8cQbKJp5
EIVT96Bu39OovfBtFDzwz0gcdxJZhOG1u55AxbqrKJiyi+r4mt3PE82+Hxm9
S5E7eQ/R+ER/r7qMsrXXUHfwFgpnHjL5f8cmejl72WVkTNyLvDu3In/aAeTd
uxdpRF8bsfvC2UeRN3EXcu/ZheSJB1FO7rtizWVkEY1v6HejHq/2wIvIm7KP
8r6E+ADh0evI9auJnn+Q8P0pVKy9iqJZB4m2f4Icu4DkoauQtuIbKL8Jou9f
I/f3IPLv3kb9gtZLH6Pp1FtE5x9FasOd5DzXj/I+ECgiVoc48huOpzp/KJz5
DyEmL/Ycin6YeJx/FurMIU9fU4nDuNaLKto+T3luOtbnKhyPVtdLs6siaHpr
roY+DhCry9t/qd563e10/Xdumt5D73tyvkuKmYYcep+zX7CIOl88pxt9zD0m
4z3y+vL6eS6Mz2R6nvs9lPPsOsb5WDVPz2vwrTy+XbMfFPjvm/OWVcuXuZZX
a+xUzluMb2aM5zX2NWztGdXqTS3O1p2jGj5ZN+euUc94Gre3a+1ss+cImea2
7pzb3Po2Od7iWOfIRctLGt5lnq2O8WqtnXU5Sra7ct6tZ46fRzR8l2qQBca7
aXdRN6naR3deFWPm+QLX8518l/rerNo6ln8viKDhxWOc7ZzvKtsL2DGrR1yZ
Byv2kIt+iKTr7WNGL7lxHjVy7imFI9A+YxuKZuxD4YJTaDr+Krpu/QzlKx9E
7h0bkDlwAfIn7SDs3oPC6btQsuZxVB79LsrnH0LehHUo3/gorX8rIX9bvvoh
wuQdSGmdjWSinY3cef2xN5HSbwbKiS9Qd+xtVGx7GqUryO2XXUTN/pdQsvgM
EqsnkL+ZjvTOeajc8jhqDr6Gql3PEubvQ0rLNCTV3YPwsOWoP/wKKrY8geJF
D5AteR7bn0XDya8Rrq9B9rgNaLn4MXImbCSPPR0p/WfT+r3KjY+geO4xVGy+
SR7rLPLHLUX1zluoOPwdFM8/SV7XbuJ7HED2iJUID16M3Alb0Hz/19D13E9Q
RfyIrOn70DTvIDpm7UMgpo72GBi/D5nXvc7vm9qn4Bkf4r6AwnvtbdX71viu
3CfQaXtx9lGkmnxf9TBRaHqR6ZSdnfZ5QDkvRKzP07E/4jr24mUxb69yXKzT
9+jRc6vtc6nD0/YyhVXOdynxV1v329q9R4jPd7H8LK8HlOv0Y1XOZ8pr61jG
8vP0dRrPUfQDhPk2VNdndLEYPu+/kznPNb1+vq6p77057+S9ts7O2nKrNftq
E9n6NXSGfa3VNyfyPUTXkK2z146nl0Utz2ruFMaHhPVoLB0v1NTL/fL9EJLi
HB6c18XqdWsZ+aq5E7S8jvHZXQrTBzp4b9fa+czHZ7vw3aED/MbpNYz3zIW6
6B5X3aTT7jLj41UT+a4yXmvsehbTt/heqDLeZS6s6Au4zorXHCf3b8ynCgSK
yXe6BWnjtmLii3+MG78F2h7+LvLXPoJKom8rVl+kfWzx5PbF804Q7r1L9PDj
hP0XUbn6PHKGzkZS7QQUzT6ChuNvEL5fphzOHLYCOUSXJzVOQekyoqeJls+d
tBvV+16mfXAFRJ+XrLiMgllHkTFkCXIn7qF+QO7Encgauwnlax9G6cL7kUgY
nTJ8LaqID1E07wzSuheiautjqNn3ItH5S8ht16Nk+SXkzzpGfYy6Y2+gcP5Z
GiuoP/gSeR6rkdY5FwUzjyKzdykKpu1D3ZFXCN+fIr7EHKTUjEbRxLWoXPcQ
KlZdIq/hddTtfx5hclvj+2LUCdbteYrGANKXP4INP/49bv4eKN/zIhKq77Li
+sZvzJw5MMTW+CrXxbl8bjOBpRl+bj5Br+N76KntLR9W9HXF3L3yO3FbT8dP
3auk68XcvRfzB5lcMuYYST6A/XeePXdunI/a3HS9S26/T/F7J+dDCueDFs8F
TS/5AAMZ33sY3zvlc7w058xeQ0+n6W22q/vt5nticV7Q/xLrmaanfOL9+HwG
rqzr5blu9tr2/jhf5cF5Nsc+qcbeGuvDGzl5Q9cbvE+ul3rmZM4Tjicxzhs1
8RbnbdaHJL7bs+5CVMfbjA8JcwGkuUBUw7ey2DxfO6CN5eP76bV8phvnPfgu
+oXG1k3La2L1cZzxAucj5uJV3mcrx6LivE7LK/rDb5w+Yh/8kAh8N83Bd871
XK7LBYaLur1AjN/bjLf1u8H4oabp1nPJ53Nih0VnjPHxxSPJ97GN5t0Tywnj
Zh1A2dKzaLr0Ebqe+RmaT32KsrWPEr38MuHeBZQvP4+arY+i4egbaHv8ezSX
bmj6zCGLEV8yEtmjVtOcfdP971GGpjTfi7T22cgauRrhkWsIb4+g5fI3UTT/
fuTcsxNFC+5H9d4XiGafhtQBswiT70fpqitUcxeQ27Ze+w4aTn0NpUseIPp9
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
1WU6vCbUs1pFj6TZLDffb0wF64uvzqhgffv5GstWq8+x2USuqfMQMaYc7fL2
0+N3kXT4O3gPqYF1mwmsDo7lx+l894nGS8dkmXw5zW9alvVKGdYb1ceY4HxD
4/UNYL2tXKzeBMdlffoKU6xvZC6elpXm2GtGf+t84CZthgbaDqZ8+OJrmfek
qz9g5+1ETQ6XhhV8XJHxPQCqNoPQaVQe2g/LhU+LfgLvbVqy77rhrJfvsSPl
fOHVN7H6ra+w+uHX8Gvdl82pMvDXa2vlDHrUy82jkWO8jH5309fLGa52Gs63
F/W3NfTVW0sZ72lcPyeeK2u85OoPxZzXxkkEzhvl20l99FJfvZyON8n4GNFv
ShqDj5P/rZriu6/M+cFSzxu5ejkDzicaMl7qexfH3A2ek2SG85JtGOXoa19f
8ndRjxJ7taauya8HrT50ux9d92T+cM8JWxBA2tIxciRc+xcgaOpmNF9yAi1W
nYF/ZhU8us6GOn0Vq6nz6rmQ9a7hz/18HbZy6Eo2T51rnY2STSf/EVu0l//8
8R8cP3MHc1cfQPDU7eDCSae3zYZ7nyVw6jIDKmIPzzx+eXRfCKeEOVDmHEPU
jk/Qru59KMbWwqNPMTx7FcCRdLEHaV+frANwGXsU6rI3wPWtRtWhaxb3o/LY
TXCefYnxw+DUeRrxfJrA+Q6ThOuOWXCKnsF8DHw9H9d2OgauO2dxuw8efgTb
rGfhufAe3MYeIHulBk7tJpJGXwiPHgXwIPskaM5RdNr9FUJXvwSPoWvhEjsN
PiPKETB7H9TTdsBzwDI4xsyG99AycE1GgOu2GHa9l2L4zEpsP3QFH33w9H/6
Ds5efwUcfd6qrE30XdM+pc4lTb+GzQLgZw6Gzd0JD9LxfD/ikJwdiFx3GeGz
d8J3Ui3s2o2DR8xUBJScg237bHBOneAQQLakmuxKdbxhLp72t6aSY7JcfE3k
vxf78A3i9qZYL/qtm9L2vvrX0fkSZOvuTHBerhavoZw30vRa9mnr6kzoe1PM
lOOzmP8m/emm/1fev2+K6yI7RdybV8J0ca2B/tzfRf+daDgvML4JXAO6YkzV
YSy7/xhVj39C5Qc/YMndRxhethsOtD+cdVPN59UYXS+K13sbc7742kMUXH0D
G78Bei+sZf57lpMn7l0rnRnfKM5LGO8mYjvT7GLOd9bE6DX19DK9cKwbEJPX
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
7xhJP9tOmjy8Tvre9eI+ONr+vt4xrK+glXNbRA2ZQ/bYRgxasgUd0xcyu4DF
PXw0eRIa/W4r0vC23l2MWS7HeHGuXWP8XEoJ46X5dqZ+m5Zi8jr/nrl4vKW6
OZkcejHj1WK2p0h89cJij2uXDOPFbNc/Rpz31875Fh7n/XXWntFQ9c1Hy9LT
cO2UBf/RpWh15ivUv/09jt5/H/6zjqP5poeIKDkL9x6VcB95CN79q6DoWwbv
3ktpLYYb6VbftFJi93m0WnsVkRUXWE4en38VkrMXoXMPIHTePrq9B0E5+xCx
7Axarn0eXK8yZFWeMsmRhsaeV519HVyfOniX3UTg7lfRfMubmHf8Dbz+1HJt
XGMukaPLwamGwXdsDZSZ2+AUNx+KiVvhkr4TgcX30ar+EYLWvgKfacfhGL8A
jp2mwDF6FtwGV0FFmj+i9k00X/cePLJOwXvSHngOLoNL8iKopu6BS8IcWEdN
gVOPJfja/IibRl0+/eF3rLv1CXoffxuqra+ByzlHn3sVBlRa7vVn6bLl7ANw
E3ehBX2XQXP2I3jefvqu99HajxC6H5Kzi+yXGjQrOY7IyqtoueYKQukxj8S5
8EzOg0/f5XT8lELRZyU8h2yH+7C9UI2oQ+TGV+G+8DLSaq7izmc/YOiN7xFc
9Txc245FCNmN3l0ns1iT4Wx6/YxlHe+ViYaaXo7z4j4SjOtazifqOW+x3sbC
OUVOa0hZbylO31jWy/TKM895Mac1vNfNxGvk0nJemcB47hPRE1t/BqbsfV6Y
40Zc53Vys55TEDdhCct79+swXKMZOXp+L9R88jvmn3+F9bGxdm1P30ecnvNs
xWjO14k6bc/7Z3j2eEX0ZjV1zXpMYa/PvntJfqOt+HOS47xC7lr7/kxz3krD
d+1iMXhiMx+r5+2PiVtPYdXrX8LBM5Lxn/WdNZpDY6Ie3kDHS1kv6lmvZbyX
ppctz3nPzvrettIYvFz9nKIL++w8w1Kw4OzLqP7oF9Q+/Y0t/jZft6BuO5h9
P/xnKzt7Thxvl43Da/huYL81MHdFyniD2Lyp36Ec5xtQH2+qNr5BvW5EjPeX
+N8Z6wWOa2Pxgr8+hS2m4bWMD9De1/r1RVpf588XGK/z97PX7AbOsQ1UAwrQ
ftM9uEaNg9+gAsSdfILYY++i+e434TH7MAKn7EXrmgdoUnASnt2KoRywCoqB
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
e0AWadjUPHAucXCMnQXVghMI3vIQAZsfwi+XtOrU/VDMOUcMqINy4la4J8yG
Q+sMOHeZCZcuM+DcaTKs/XuxOnRePxftMl/TPaX8GJsR59Z7GYtDew8m/Ta4
FsqRNfizAc1xz7/8AbjmxD6fdMYz5ykH4Em2CM80xnnipSdpe9XUvcSlbfCc
dQhc5m7ce/Sl5Y3TJW7OLnAJy6Dk4xozD7PeOY6x8+EUPw9OMXPh1mMpPDPp
c8g7A785h+m5i+AysAJffPezxW3/+tvvCCo6DY4Yr87eCcW4Tcwm0e43z31V
9g64Ze0G13K6MLe29QJk77rToH0fvIZ+10llcOZrBGLmka1TB677CkQOXW72
/y5//Cu49M3gggbAocUouMbMFL5furZvng4Fn385nvZr3F4o55xhfQT8S59H
0PZHCFxzB57p1bBpMozOXwlQpa+BRwLtu01LOIb2QtAUsg+GrYB3rzx4peTC
PXYm/DNrEJhdS4zPg//4CrTb8Dzij7+FyE23Mfn+zxhUvI2dm2x5fvP5pto6
Up2uT9azXi3S+SK/viHnBdbrfuOqbnrfvYGu1862NWY9vx3eHua1UvOUScTv
97Hhs9+x+Pa7jO8ltz+kxz7C4nsfY/Fd0SLOL33xKVtL7glr8d2PmB2w6MZ7
jPeFV98gNn6Cui//i7Hrj8HasS3joFhrSvPtDDS+kTYVzag10ePO2F8v0fTa
pZl/Z+UezWILueceYN0HP2hyzjg0Tc3CjKPXma7nYxUV737Lcu2GrtwlzKnl
tX+Hkaw+u8OoAnSfWYa19P85x24iPHasJj/RGYnTVrFYMeuJw/dkY74TGSb4
ilhvVtPLPK7lvLhuX3tbKaPnWUyduOreUeg1z+bLaXvXt9VreQ+B8ey+Qfyd
3ot9Sxaz6JdXhepP/kTbflOEPHzG+k7GfnqNnrdmWl+Td6/T7Fredxa+O8b7
zuz9clYRrM9AwvhClL39DXrnrmWvw8fc7TW9bG3Fc2l8tHwX59mJ+t8Y3JZo
+Ubl1JvQ8gY97C0x3kTejI7z5ubTiLS8bqZ7kl6/S2PyJhivzZ/XcV2tz6l3
ZIzvLqPle4g4zl/30LGef769ZjloHxM/HkDnG5tIBE3YiO43f0f7qmsIzdmD
zvteQeSKYwjOrmF1c02LDiOi8AD8x61FUNZGpp/4c21gdj3T95x7POmvVNgG
94fv8BXwGVCCsOJn4DdlO2nMKkSUXUDL6ivwzT0L7+J3oa74gjhUy57vzPeJ
iZ4OF7ILHFpPgFtKAf0f6ci4QkyqOWOWKSV1pxhHPQethku3QlZ/rhhdy3LO
+69q2FzaVx5/hQXlR5FYcgJBPMeJbVz8UnjNPAj1tD2M+azujbRy0IzdsJ58
CF6Z2/Hpt5ZZ/O0vf8CpL9ke/SsRsuBZBJHdoxy/EW49S+AxcCWrpw9a+By9
zj64DqkC1201jr/02PJO//0XUkqJ8RMPsHw/X75ub/o+eJKGD8w9Bh/iPte9
jG3Pe/oBtM+qx6TVz+Diuw3r+Vd+8lVwvavgxPcXID3Oz9BVjid2xxQieXKN
2f/dduEVcD1X0vPr4dAuC06dp8OZGO9EdpxDq7Fw6pgFVeFdKJY+gU/eiwjM
O46WtS9APWsv7X8FQhc9CzXZi959i+CZmkvHVgJsQwbCLqQ/cbyK9dDxG7kK
Qdmb4D92HdmaW9Bs6XGEz9uNsDk7EDazHp223kRL+v7brLyAnuc/g1v7saxf
J/8b0bM+RaTpU0RaX3RbLWZ9Mhx1PaJFeTcqkZ73lfrv9Y/pdXw3TR/WpkjI
WoZ1H/6ANQ+/ROGVN0i/PhIx/SPGdWEJt5fe/wTlD79HQOx4dJ1egdpP/iv8
7e5TZhPw9sGi6++giFjP6+G6L//EnFMvwju8u9CzxFsbi5dy3sQS6SpZzsv4
7u3kGO9jyHlB0zeDA/1P2VtfIO/yW3BTxUCYW+MLVdRQtOg9Dc16ThVy9djj
XugwdB42/wBM2HoaQl94BbwjemES3V92/zGGrtiJkI5pyD19H5H9Zgn2jaqr
aS1vjvNydkGD+hvEMu1qpOfZbFie9Xw/eW3dejTxtxPT7QLbxX3vtNwXzZsj
Zls5t2E6O7LXJKbru4zJZ3mJfH8zYdZsJ6bROee2Gj+HCvp5cmrhtkNr6GbF
e3cW2WgxwnPsW2DOiVtY8+hHNO06luX+8bNL2XszmCevnT0XK/o8YjXavYv5
fJCGLLlce6WE8eb89dI+OLIxNKEnpmw8XrZOXtKbXs5Xb8JPb8R5f7GW1/TE
0bDaIUDvc9cxW8f1Hga3tf8jcF5zX/d8Op/5d4WNTy+0XHoJLSuuIbLyMmn5
B2hbeQHqkYtJu+eQZpoO9Zhy4v9WqEaUImhyHcLm7UfY3D1oQedS//HVcGw1
Bm4JM+EePw1BpGGblJ6Fc4eJcIocDVvSdb6jqxA0k+yFsvNoUn4NYSuuszxr
/rxv22Qk/f9o0n7pxPh84tRRuCTS+V2djj6LzfeGqd93ifm5PUdWwylhgVA3
lpALnzEbwI3YRXZ+4+axf/ndr9h74wkGLTkOx+y94FKI0cM2wDv/KnH/MunP
CwhZ+Ay4cbvQtPRSg2raL9I5nBtYB7dJZDMQx/xzDiN81QsIKTnHNLcyYxPU
ubTNnlUoeqZhMYGR2+6AG7UdQXmn4DGZNHH+bagWniG2LwM3fAu4tFp0mHMA
lWfew/uf/9Coz+DYq5+BG7QRdnyuYJIQ13dJLoQycyu4iCnIKNlr9v9LNp+j
c0w/+E7YBNXEzbCPzIBTm3GwbzYKds1GwyVhLoILTiGs9Cpa1N1BWP4RqCdu
Ir0/A3ZNhsAhYjiUw1aiefVNqMZUwLXLZLh0zoZ7Yg6aFB5FRNERhC84iJDZ
O9hxGTR5PbF+M7xS58E9bgZ8euUiYuEOdNxyB+033UDUxvsIm70XrOe5IkGo
IdWwXJufasR69f+j7i3AolrX9/8looBBd6eKoohii6Ko2N2JBSiIqKCISCmg
qKCCioiBAQZ2d3d3t3u7dfd2d93/533XWjNrhgE9Z5/zPf/fXNd7DQNTrFnz
fp77ybZaS+wVKfaXlmL09ko9r9D0pXS9+prF/CtyX709Wo+fixW0T6defk46
/CHneLIG3xWcv/iK35594wuk36LzqUoj1OwcjWVfQvqbeJ9kpv8Z7889k7T9
XZ67N/fBV3BuPID7D/i+96mcV/rvy9LylpqavZLWbQ19r/ydtZgTz+bOhdP3
eMUHYOCCYljW6iLFfK34Yn1tGg2KQ+KZB1j+LdA+ej73z1So1kB8Dj1vzq5q
9Hm0j1mMnLe/Y8GT71DVoQ23AwR9H0X/4bL4oMvv+6mcl9ku5/mJ9fu68/Ck
ujrOcT/OfD1T1ne2qbSaiHaAcQOp552vVi8cMb+uQnU/ruu9AoZg8ZtfUa/7
eH6b2QxMu4vHzhPewWHoOjMPI1fsxtg1B3g/Ir++tLca1ROPjWFdsHo53mvA
rAnnuXWtjmRLfo04OncMeC2/taJXrXp2vL52Hr3KR6/Vy1Zn7t2/ouO1WV+W
v/5TfPY6GM96LViXwXmdMXmFf09nTF5HPF6udbfTxfcgdT2dxGc5B0/pdzeQ
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
HwEj35G0RvOeZ+bdU+GVeQoOkWthEhgLPaceELzoPHPtA9OgBLgl7YNr4i6+
55uTprMgHWgdsgx2U0qgN3wl9l0te5YNu/gMzeKz01lvOeMuabAatQp2EzbD
csQKGDYmznuNw/D5e/6zUNS67LjyCofufI6/P6GWb8+997z3jFAvjtfYf8rl
zptvkXPkwT98l+Vf1h64xmfTV22fDFvWl5COI1usDpDVHBj1WQShYTRuPS27
N8HXH36Ge/xOGNLj2Mxdi/5kMwxcAMfYLXBPOwS7sStR2XsEhBoDUMG9L4zq
hhDDs+g82w3XmbvpnBnF6+yN/Mbwc6iKL51LxHwDjwG8xs6dzbDtniQuOgct
OiWSfk8mOyQX3dfcQO9tL2EXW4I6Cw6jzuwSuIQtRI2ZxaiTdZTn8NWYuZ00
kNibRt1PStFT0kEdu6+kEbdvo7qt6a8L1Oqdo63pRV3AZqPq04rcfIr3vok/
do9Y/JLH3OXaeBXrL4isX/LF3+gQu5TbBzEHbmNM4TEMyNrK7ydU9oNNw8HI
uPMVZl17y3V++MYzCJ6ez9meSuwX8/ClWL2Ul8dq9lj/naZ8pouDKr6qnVuv
yfXSvy/XV2+lg/Xa10rOs7xE0uvmdXoi8ewj2DcaxHPr1Dluihi4yjcu/Z73
t3VE3V5TeB2dmUdHeq46Yi6EFHvnPXCrNuTxZjOvzhi6cDNiD15DaOFBNOgz
Cay3C/Ppq3ok2rRWx9r5a7YszRgddVzscxaqivPmDKxL63meU19dXLyuzsRP
yrfz02S7lHuvez6N3PtO/TOzV+wa9MXa34Da3SZxfpt7dSR9/hr534H3t0k6
95jP/GE1Cawnfe7b3+HXN4bf14C4zHoONRoyg9s9Yl18Y3UevTbfNXz0/wLn
VXmKn8r5j+RA6qqjK9W/XhmP19TxlbQZb6vU8K118P0jPetln70cS5dr3xVz
aDTmz8l9cFTXCi0v18jJ2lzhmzdUandnNecry9fO0u/Z41178Hk1HqxmLnE7
aqTsQsNVF1A7bSt8Fx+C4/D58ErYAjvaPw2CZnJfvXO4WD9vSfrZosssWsmo
MfcIrGi/1bNsT4wfS/sy259D6OdRqOI3GobeQ2jPDqd9fC9cppbAqP5oVGlA
96k3ClWbRME+sghVmk2EWddEeJLWsx2znLT4bFiPWk57dz6vR1t9qvzer+3G
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
h4xbnyGJbFzmr2d5YJ3i8+ESMIbnhWU9+wk1Ok5AcFwetwFY3niDwTNRq0s0
vX4wanaKglX9AXBqMRLtY5dyLc9i9c1Gp0MwaIg2Exdyvz6zCRjv3dqGoYJ5
AO+fl3z5NXI++wPD8tjslyoIis7me/wc0oBeQWM5s0rHwrVjqeqYvKZfvwzO
l+u7Vy+hSkMY0TEfvZps8zo9IVSuD416dGv1ns79BLyOzh7+QxN4/x/GIx53
ILuK18TJ+o3NIOQx2haaDChzvomyBqsV/yxZLQLT7JVI63ZLWM778Sacfgir
mt15rhrrvcNyA0RffWmmlp5X15j3s9NT6nJT7SX3vGPMbyzxXzFD3kxhF7BZ
NRVrivnyC4q5bcFn+1T2xIRt5znr1e9Nre2ZrZlx+y3Zf9/C1ncAf3zbiAws
++pvjFl/DO2i58G6dhfu12C+Fhavr8jy7y3L4Lq2li8z3qPrvNLBeEsdDFf6
8jVul894jdw7K7kntTb3dfSv17XkHra6tDxjsorfEpcdOih0u3oWjerasZ26
Zl7Rz07FeMcOKsZravkOWlo+WPTXs9dwCYZ5iyhYBMbCoh1xmPbExoVX4Dxu
GTxiClBnzi6el8fm0rlGLodN9yTaP1fSfloAx6giNNp4H7UXnoIl630y+yyM
c57xWSnVIjegVvhydBw1HwnL9mHr8dt4+vn/Jm+dVXtZ5z2G38rHaLXyEczj
T8Fm4nboR25HcF75uXwbH3wLYfY12GdchsOsU7CK3AqXpINwSz8L19nn4JRw
EA6Tt5GNswtOaVdgO+MY9ELWQhi4FsZT9qL72pvYcu9LfPfrf4eFR59+g8jd
j0hjs177KyEMXw+LmefgmHQGjmSLOE7dBZeUk3BhfvpZx2EfuxN2cQd4DMJh
3jUIKVcwec/Lcl9jOulhYdh6mEfvhdv8m+i+8SlqFdDnPOcWzn31y3/l//rY
hdXw7T93H+nEvn7TVqLhzBIYDsmFMHEPTOgcNIzYCJvYzahfeBM+ued5bySH
sFVwGpkDm96z4DGN2D42B54xzJbdDOfwRaiVvAOB+5+jZtwmGPtHwcirB/Rt
Wqr7RmvE69W9pkvV2jmI2l7siSHpeLmHrpR/z+eyGfih//wipN98jenH72Hu
vW9h33goTOv0gWnt3tzuZzn0Ri4d4RoYiu6phVxPsvp4L2I/0/GWtB8zfe7Y
PIRrezavrmbniajVNZrbDPUHzOD97s18+vPaOyPaB0xq9sSs629hVqc3Bi3a
geHL93PONwlJQc7rnzD37js+E07F+VI5UjqWVWldrsH4UvVzLcrnvOAJ3z4x
GEOcFyr6iHlvqphuab8t7/1WyQfRuy7Bb1ACP06VbCWbwEbS5zwnn7Fe8t/z
/HzteEE58V8b9apsJ9fe28OAXmPwwk2YSK8dUXJW7IOg0vGlY+Cl9Lw2xxn3
VTl1/nxurLo+XjFfVsV5f85+1g9XzCcwg6FFI/ROyUfcqac8J8Ot9RjObSvv
zmTjvSX77hee3yjH5Jkvf/6jrznTG/H8g0rcP8LiDr3S16JNWBKPVSRfeIJJ
uy7yXE07v378c+K5Cnre/L2r8+i1dLyFDh+9bBuWdU7pYrw2xzU4rx3n17TR
xDwKJecDOL9VM+DYvBhpJpW8NGfOiMtA9d2WZ8K30+S7amZsew2tbsi5HKye
G+fUTpF3J9fHtSsVl1f3t2F/V/vseXxexfbg0r56tmjv0LdtBSP3HrDpkART
0touk7eg+YFXqDFrP+mcQnhM2QDv9J2w7p0ChxDaE1kvkuB4mHdNQrU+81At
bjdxZQWEkHxYhBeiycwtGJ27B3nnX+D6Fz/il9/++J8wQNdlxeX3pMuvocX6
x8Tss1zb6o3cgJYZ5c+bKbn1BYSY/XBecAkuc8/AYuxGzk3nxOOwDt0AqxHL
YRFSCNPwvTCfcRvWE/fDPnQV7MYVwXLCNuhNJq00ZR+8Eg8isvg69tMeUF79
2adcLj39Cgk7bsM//QgMiNlCxE5UG70B9uHrYBe2DpbTr8J82hWYjdrEZ8Za
jVoN26gdZJechf3UfbCO2ga37MtwyTpH/9tBxOwsvw9B1LpL3F/hkHIcNXJv
omsJMT7xGpqs/N/HKOQLqwu8+83vWH/5OcaTXdkqZQdcpm9DhZDlEMKLoD9h
Iyp3SoFJu2lwDlsO95gimNO57D55FWqn7YLzGPa7TWi44RYabrwH047ZMPYb
TXxpxGNeujivXXOnyXnl/IrWkpYvzfm+mRs456cdvoVFr35D64gFog/YrAXf
L5jWNifuG7l2hFeHCBiT7SGYtuDx+Oahc/jcGnZfxnnf/vG8vq5u76mw8R8M
oXpTrvOZvmdantkiQiU/rv/Dik/zHKv69Ji20YvB+pvX6jKR90XJvPceNdqH
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
+S8w+NAXSLn8PXY8+hk3vv4dX/7y6T0K5p36ks7DYrgn7ya+0/Ml7YJ//mXe
99F20mp4ky3lM3s3fZd7wnFoFtltJ+i704nXC6ly71Wcb6vIzWujytFRzaqV
OS/NsFfX6bbhsU192icit55B2vXXtOddxfTj93lfWjaLptmodEzefxOzr3/B
Z9CxmXVz7nzF++ewmTes513ghGwEjJ/POc9m1DH/PON8SMEhnovn1SESi978
zufPs+dg/fUyH/3AZ9+xmaVy/XTuZ7+gZehsMV9do3apHP+9zji9Mjav/llD
06t4r/k7xgAW1+V182yWjjxTThHDZb9j77FH2jokX3zK88H0qjfSZLpVgPRY
Jetb8bw9mf8a/VCUPVPYns9ZL+p6laa30cF5fR/YNOhHn8tjzmRV3zs6nlmP
v8fYradVjK/RZSCWfl86D4/F1Nlnx/z/bs0GYUTeDs4Clp/QdHAc/X81Ic6V
9eF9acR8+8aKPnkS12V2l+J8Y1HLM76z40LPIfrzxVnxjO/65s1Ezks97kR7
oKUm37W4rrE4z5upbSxlbbwqb761dF7R51zdX8oBcOT5nrWCx9HnvpX3HWCx
jtEr9yEoOgu2vn2lOgA30Ubg9qek32XO6+K9FuMrySxX5dC3kmbLKHpR889d
PUtOzXh1/iz32UszZPT4eViL96mo1zsGUdvP8fgX60HB7PbUS8/FfI3Tom+H
2a4JUlyHza1i8RfGf/bzkNxt8O40AYJJM97fivnujbi+76DoYy/G5NWcD1Zz
3kWb8/LqACO3HvT+e8B10lq0ZezYTXv/xCJ4k77xzTrCa+d8Fp9CjbgieNA+
L4w7jPAd9z5pH33/25/ovf8LGOc9h/2GF9Bf+BJGcx7DctpJuGeQBl10Gdbh
m2DcJZNrY4cJm2BLms4hsogzwHp4HkyCU1HZJxzVWsdz7edOGtAl6QA8Mi/D
M+s2sX0XHGJ2wJ71WY/aApuEk6i35D6qz3+MSQc+rXdu4KLTOPS47Ps+/e4P
mI3ZiKpDVsJl1hlYRB6E06yz9P4vwn7idtLLeVzLWxNHbUathd3YYnr/W+h6
C1yid6E+6ezOq2+gX8FVhG2+g6l7H2Ms8X7AmhvoUngLzqknceZp2fV1P/zy
B398m/xrGL7uJiZuv48pux5i2Jrr6FZwDW1WkK5POQa70BJam2EftpnsoQ2w
4TbHCnpvS2E9ei1cEo/AM4c4O/kobKYchtO0fbAcvQHCgHXYcKzsz5TlLviQ
/r715uN1k3tf/Q7TrEdwmXsD1lP2wpY+S4dJ9L4mb4dz0gnUXPoEbhln4JYs
5lVYDloMA98IGDaYAPPe8+l9r5E+/0LYj9sAx+htMOmcAfMBeXCm919j8VU4
xp+E/axrqDbvKSxWv4TLhlewynuBWltf4/y7su015WXtldfE+F2wi16PWglk
w+ScQu2MfWQvHYNV5Bo0XnkVA45+jrqLTsKiHel400C4jiuAW1SBmMvNuK3y
3bdT5+Vo6HppLr2ddmxe7rXRBoZ0zWpl2T7vNyge2c++5fV1rNc9i72nXPmM
63jGY6bxWS/6mawfPXGaxenTbr7jOXutxi+QfPWWfG5N7/Qivi9OIfvNsl4/
1OwchaXvgaSLr/hzMF3P7AjV/kNMSrv+htdcm7I8ez1vTc6XF6cvpeM12a6h
5UtxXtTxfLH8O5PGPE7LtHHz0amce3yPVtgPjLtCpbowsg/CvIdfw7urWD8m
5t7pyL/W+F0rMUYvz52x1tTqpVkfpNL1sl2gkXfPc/BqwS1wFD9+rLZMqeUX
fwHUGziWM97Q2h6Jt0jX3XlXivMmjq3QM7WAGHAX0TsvoFNMNhzq9RD96Cye
blhPzKszV+p2ifOm5XCesdyskchxxnh2/OV4PWe9zPmmas7LS9blFkq2NyvN
dg3Oy0s+9hLnua9GZr7M6ADIOfUV6P2Lto4zj4E4Nh6E5iHJPHc/knRx7IFr
GFmwFw36T4MBP+Zu4v2rN4YqJ7NULoXEeelzKtXD3k5ituzDp/NCngermjdr
r+xZra6ZMXTrKPVErI2mISmYvPsyn2XA5hWx2c58fsDJ+6rvFrtmcQrRhrnD
5zLFHbmFaYdu0Ll+jds16Tff0Pf6OcYVHSO7fDz3Z7B5Dkb0WiqfvbPMecmP
L3PeRc13Qxcl4zuSJqF9ybkrTPzHwzNxB5rnn0OPrXfhOK0EtiOyaM87jLpL
zsBj6kZ4xBYT64vhMX09hOjtGL319iftp28//IGpF9+h257XaL39HWoXvoJd
yjW4pp1DDeKk+/wLqLviBmrMPQVbYj7TcmZd02EclAjTLmmk73Jp719JzMqH
5YBFnP3WowpQO/c66uY/gFV4Mffds1m2bjP3wW3qNlhO2Itqs29BGHscS458
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
nS7nrdRMl/Fe9TspX1ut61Wsp+eqqXIrxqUfRPKLH6S4rDi+ZGvNyC/W+O0n
bD6E1Ne/I/Wtnr63xvK8Om3/ejXTq1bksy/DedVz9NlF/lY13Xw7U22uneZe
van0vJRv307G+Q/F5XV89mXiN9L8AKm3oQdf59zTsMw1o2M/Wso4Xq6XkY6t
pql7kGwDSed78jUk/q7Z6JWs80VMnHP4Nh5F26mRMHHvx5pcsg+82R8u1cHI
uG7TWeuLU8fZuP7VBf5jgpHx7leu+xe+sLDLT5H8/GekvPwNSWTXrfv4eyQ8
+gbxD75C3N3PEHv7LaJvvkHElef0t58g9OLHCGE//kMpRn9axvljxPkjgvOl
PJ9g3v6LmLP3POYduETX00N49VtA15kf++LVOfea3DuVv76Mnldtoke2/aQk
NKU10HW5mEt3FJ4he4jxi0nLxMBm/Dpa+1LgHV4A37Ri4nI+XJblwWXFfnhF
naK18RKab74Js/XErYKneP975WqaFp58BcWKs3CJuwLnkNNwDjpO2u0cXEJO
IWDXPey/8Azjcm5yLzfHVYXEQhFz3sE+YNF3VcTma7VYQmyPJC1IHJmcAxvS
qSb9E0jbJzF/3ei17pFn4RoumHMBVRcUom966T/imPhUDRfmQdE3levnzIZn
SLwkjpmNzCL2bySNnwL7eXnEOZGTl0v7XsS95+yWHUfrLY/RPOcxGmbdgkfM
RXTb8Qjd9jyFR8pN2BLjq4/fgwuPKu7XK/rkeJNWNlpwHP4b7qPPvmfwT7mG
BsnX0HDDXbTf+RxNM+5AOfcAnFeTzRR4HFaTt8Ml9DTxcxtMhqaTht4k47y0
3yIXv96QTNQn2+rO15WLb+veUoueQTHrKFzoGLuTfeUefopsq+N0nLbAqHc8
3ZOOX1xA5yWe+/TU7Uj2Gml30dtInEubObs5v96ezrE4303XXsC644+RduwR
2iaXwjXkBBxWkM1G++26phQ+GTdRk9jfNOU2vq1EjwRxW3DpLWqQTdU4k2yi
hPNwCzkC5yV76f4QXIP38yxa1yU7YTclA1ZDI2HRZxWshkTDN+UM3Fftg2fo
QfbdGzaZTPa0yGvpjRplOF++X46G8/Ke12rdb9NF6o1R3Y/rx6JuvYJz20nM
WuGXFnMqhK9RrI9ibRI9cVNe/sA5XkILiLVLYvUTZnjI5edIevETxqQWoEr9
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
s+LQZPRK5r6Yy8jxZjo+0nmT1clr4ki63O9YnvNlfPby81IB49Wcl8+w0fSz
7Mb2mWmjoVw7L8XntTZpwpPvMDppK/vel52+y7Nq1j79Ef5jZ6LZxHkQ2cO+
A8egpoUN9tDjRn1H0Pu6IP7pz1hJtqvIZVly6g5azl4l+fFr10F990ZoNnUZ
fb/+hnOb7rBo1AorLz7H7F1nEbD9pDY+v/c8epCuUJiJ/KDuKs73Ksd5cbxq
uQxAo4RTaLKxhPt6Nsu5Apsxa+E0fys8Io7AfGAYbCYmw2Z8Mq2jxPX522E5
KArKEWt4jp1pz9VokHgezXbcJS20DtbjaD2dugm2k9fDdtIm2M+mdXPxHvp5
E/cbdYs4BeuJtL4uOQTF4BxMJBuhsreGc+iaWlQMRdp9KOacRovgU0jYXVrp
mu9/ejv18TeYlHAWZ8iW+2/cfv79T2wr+hjdlhfg3Af65Hz1/S/oG3MKUbuu
49XXlZsB/J/ebj18g2W5dxBY+OK/8v6a2x+/Y2/RR+gUfRF14q6j6oZPoBh/
AIpGwbj+5G2l3kLkQCgCClBX9BqavxfeiRfhRLal7Yyt7E+yoevPdspG2jbA
lq5Ji0Gk1YnjLfd/TM+th3nv1aTj43lWjXJkApyX72XW205bz3Eqm4kpdG0X
wT5gA1yXbEOLXTe5JqXl7vuwGRnLudSiLr3pmCCMSd0Hj16zOQ4r/L/Cj889
cjg3TxaLV3G+TB2dPs6r9b3cl6+bt1dO28s4L3S8VWdVDpK6HqA72/3a16ny
9VS5Z/r6hWpqmmjdleL0DvAfvpT76Ip+5cGyNS/4gyx/pPn9apFzV/IJ59yV
y8+7+GH2i7i26FOy8Rtg3sFSVK3jz7pQ21ulAj3P8fdOstw6bzQZtgxLj99E
HNkqU7KPw7XDZFXdnJt0Dvn4qHreybZyvNDHDd1NbVep+xMYSn1Xy/vtW6l8
961V+XbtVXV0rfRsrSXWq+PyPPdPJ0Zfzlevh+0ynz1zXjN3TjtvSD13rhrX
DlqxfSVsrnHpB9ifL2oj64n8CeNWFWp4Xd6L9xD9ZltNCuP3EDVrPZYSt0TP
XDr+bHdadZLZnno4r+xYxm+vzi3Rn3f3Ac6r61lUc6cMNPmyxHnTdlyDPo/n
DX9W5noUM4cHhiWTHejA/e8SHn6FiNKnSPjkPRJf/oqYG28QRptda2FDu6Cu
rTNm7DmLmDuf8exJMXNe6PrJOUeY8wF7irDk9AOO+4k8fIfmHaFs0gErL73E
rF1nmPNTVZyfv/8i98NR1KNr1b6nXs6Lx1KOTjf4RBag+dYbaJxVjJb77sJp
zgaY9lgJv5xbsAugtXLaRuJ3EvvtHYjzdrO2wKJ/BMczrWm9bJBaAr/1V2E+
eA1sJmfRth42U+h107fSeroJNjO3wSPqJNxWHYHZwATYTM+Ba9QZ2K+gz9Yu
Dss3navUuv7RVz+j6dYnCCTdfvn5N/8DyFT+9uU3P8JsxRkoRuRCMXoHGs7O
xeKsc7jwpGLd/T+5/fFnxbr8t/+SZr//4itE77iMjiFHUXdGPhTT6LxMKsCZ
D9Ty/2/ennzxIzIevUfDqPNYm3e9Uq85fucNFH3TYb6abMewE7AYmgRr4rr3
miLOC7WdmUPXXjbH5/l6pM16fDpsJqTDlzS9c+B+ei4TlgMiyWZNIO2fBzvi
u3mvVbCbmQ3lmCT4JBVzvZ1Jl6XwSzvLdrCYZyM4b9lvFarWbYN2M6MxKCIb
xp79OY5Xg3vYd9PE4tWc125le+PWtNXqfQNdzstr9eS+e711d3LOy7fOqrmp
nZnxNWQ+fK1fU9KdZeqQ5ZwXNVbsv3aGmfcA7mUm4uVldbz+TXA5lHge9+Ar
pL7+AylkwiW8/B1rSM/EP/8ViW/+Qsqnf/FMz9hbn2L1Be28nYr0vjrHL+vL
PziPXdhbVYmbkq2in+9CZ3L+nMIdfoMWc56fWLNHxu+GqUc/6XdVfKTehBzv
0LKCtby1mvO6fnvtVkOH7QZqrqv1pLW216p60x+fb6tifDtZ3Vxrna2NxHi5
n16t583lP+v663X4blHWZ1+G8zLGy/siCSYLeym09BNM3VzIel70vDP26FtW
z8tnBOr2I+aaTTf2nTQlPS/eT1xTCw9dgXvHKXysRZ2fvC+tiN1r6kVsO3Nv
Bba1jVtLdp5Sxnm9OfYqe0uvTaadS1fTVv29lTaR4ybyMsaSTZP0/Lsy12LK
q9/RKzCWGT3nyFUElT7nmXShNz9FJHE/4u4XSP8cSP0WmJ5/ETFPfsTW3+g7
8MmPWPf8F6x7+hMyaJmdc+ASxm85irQ3fyPhwdeIvvkW6579CseWXWHdrCNW
lbzScj6HOL/5KOblX4Dv0GVQ1G6h9dmrOe8o4zx9hqpm7eC5ai9a7LwL/w2X
0HLPXbgt3Q7zoWvgGJQL/+wnaHP4R45fmhPnrYbGSKyfuQX2c3LguGAnXAPz
4ET3dgG0Po5PI71OrJ9Kayzx3HJ4IpyDDqLR+huwHJEEo7bLaU1eB8flB2E3
YztMJ23muTAZxU//yzT5Z7dOKaXEvP1cu2azvBBVphMHu6RAMW4Humy+g5SS
N3jwvOLZM/9/vb37/lfsvPMFhmdfg8HILVAMovMwJQ8W8wtgO2sf6i4shNGM
A/jsH9TX/7dvtz//EVVGbEC1oRlwCzrMdqNJlxCYdA+Hy8pD8EkrhdW4DJ6T
YEOct560njfL4QlwXLgLnhHH2S9lOyObruPNcKDnbKdmci2Jcdfl8I48g47F
gHv0KVhNyaRrfw38sy6iCX0/xDzHlrvuwrjzItR16o+mY4OlPKt6LaRcO/tu
Gp6X5XtFnNfW2ak5b6DqnWsg57ytTgxfH+ttZJyX895KNaeFffba2rwamvfo
op/z6lnrtG6K+rCqdZtg0dHrXOsservp43qwzMcuZnKnvfmTeT7v6DUMjF2P
VgFL4TNgNJy79IVHr6FoNGwSOiyOwKj1+Vhy4WOs+/RvJD/7SZrNXawv3v9I
lY//iLW/6K3SieemOEizNzWcl3IPpNxue+6z12biao7zx9x7hwGrNqC2+Fzi
d6LvnrXUD0diQdcyfl4152tq9Lw85qtfy2ty9eT1W9aSLVDDprOmxrG8374d
M17ktnP/G1M519to+W6upxZes+nhvD49b9m2bB4eMb66Jjavh/OqrYqYQ1ej
EXHmEp2Hx8za5uOCYdN8NM9F0ztnVqf+UarX9CAtvBnWLcZxHp/IeRT9Ezb/
BHSel6DqWeDJPXG9+85HbRErF/EU8f/rN2cbQPR0Fn33OFdDnUP6oTy8MraX
+vzI+k3ayjgvq6UX9ZOd56/jOVByO1TU1S0nW9bIzQeKajXJzjGnfTPjvLwa
FjaoaW4NqwZN4Nt/JNpPXYBGvYfAtkk7+NF3oMuC1ei+LBodZwei59IojE7a
hj4r12JgRDqGr92CWXmXUNfKHnZte2H11U95Xl3A9lPMeeG7F49tWk3gHjkS
33uVqZ/XPKbjVsW4DdwW56Bl7gM0ziyG/8ZL8AjZD4e522A2IJw0Thaa57+C
Nekb837hrOltxqfCK+kSsXw93Fbm088pMO60HC4r8nktVU7MID1PzB+XSZpp
A7wTzsGJ1l/z4Umo3YneY5boc7ob5gPiYNxlNWr2iYOiYzTyrv5/w/qff6+c
Ll6UfQWKobvhFnMRJhN2wXrBMTTb9ASNMu7CKfYSaswpgGLiXpgsOYoeoUeR
uPc6Hr3+v8vt/3e3z778AVtOPsDY9ZfhGFYExdhdUMwugD19lubbnsEr5gpM
puyDcvZ+eNFzip7ZaLHqZKXe+6+//3dr8iu6vfjye9TtSfZzy2CY9ggnm5JY
Pn8P6g/P4F6JNjNy4Jl4Ea4rD7JdaTNlMzPeiuxPmylZXFNn0jUIbmSb2hLD
3WLOkLbPh3nfUFgNo+ux01J4xxXBP+cBP7aZmsW9I8QMG//1F5jzzXKuw7T9
XFoXenPtahVah2qpam0NVD1yNLF5Fe9rqTmvtgNsZXpfzXnV38tn32lYr87V
1/jzK8jHK9MjV8v5mirG11DV4Iuc/Np2Iq9Y1WNHo+lljFdtUh84R/SnNVn0
cZXy7fT76IV+F4xOe/MH4kirjN+4H25dSC/XrKXpA1LRVtPSDt5DJmHy7jNc
Uyz6yKwsuq8nHvBIo+vFjB7hP2YGVPWWPoPge91mzPAapBN7Lk3hPGlRyy96
stW16wKpx24TWb8AdZ11R9Ux7Qy5z15vDtcHOF/zQ5znTcrpK8d5wXhRr27a
UtOTntluXpbzcvaX73lTCc5b6HBe1M1ZSXmJGp+9jt9e8t23V8VvaqMV2U2i
l6t4jXOnadxjXeRpauog9PnvOaezI9csmjcaikmbjvG56DQ3nmv0RI9gwdIm
o4L4vVpPDEXg2fvY8PVfcOks1VpU4zkI1twHeSPZeXPyLsCt81RUqd0Yol/T
f5Rnr9byGs6r7G47qa5OML6uUy+eJenQcTrXlIj6OrW9KezG2PtfIKjkGUYm
bcWQqDT0DY5Hl/mr0HrCbPReEgbXrv0113iVuvXh04e+D7UNtde+oQnqOHvT
PdkIRpZ07ZqSvWREdkMtOvY2GJmehxUn72o5v+U45uYVY0TCbu7fI/Lw1Dqe
79VaXuPDl/pyOs8mO3vfR5xj5J91nta5k1w7bNozGGa9V8E9RvQAPQWTbiuh
HJsCpyW5sBoeC4d529Ag5QLqNJwEw1YL4B56hNbddCgnpMN6wgZeZ90jC2E3
eyts5xMnFx2GyYyDsI0qgUXAHliMSuH+p6akwxQN5kHhOhsXbnzyX2PE1iuf
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
fYwh2+6hW2I5PEnvtt9QRbwgzUy37ddVwD7zJlx2Pcf4I88wcN9jGBLPrVaV
wjmpDParL8B2ZQmslx6FzfJjsA4t5px3Jr3tlVaBznnVaBZfgbWX6tfD/Z8u
pWQX665jMYbr8KDt4RR1Fjb0/2yIfzbB9L+XspqHc3AkhjsmXIRhaCnaZ1Zj
6onn6LnnGWzyHsFu/XU4kA1jv4b+JrkCbvRdPddcRr+MKozZ8wgTd9XQeohx
+Q8xfNcjtAu9CMvwy/jPrx/OK3j7859otuIMWi6nfRNZAotw0vZR52EYdxm2
68rJtrgE2+jT0F54CE3mHsCRW2/q9b23VDJdvwPNJ+2A8aRNaOEbRozfTTbY
brSbkM3jRcYztsEu7hTazdqJliPyoD/7KKzjLvB8+1Y9VsBiyS607r0CLbsu
pm1Twvs8G45LhTMd487pV5F65QX2336LoVuuocuuarhmnEfXo09gPiWVzq2k
5+1Hoqm5TFOby84JFuqaXo3zFjIdbyH56+WcDxQ1faCaP5/7Di1U2p6fg6R+
POZibrCYP6/UjtLMevk8HGVfvX48917oD99bYLyo5xUNXGHhO41rZFbTrJl/
F02cZb3t7PuPqBVLt+7eF4PWZGHtw2+5fn9frzxlz9wrUn3SA16flHj7U6yp
eo1c4nnSm79h4tND7f0nbTuKjI9/RwSdNyM13o/FidncVKbj6ozFG2pyXsy9
F7W8lrIvTi/lOV9L7FmvyXq27Rsb9BJzzVyFujRmNyhz7gSus/duSKxVzRtW
5eTVnW+v0Zu+Vi5eXTn0vu/30Ss5L69llzjfS+S8r7qGr9Xbpo5ZQfKZAobC
djD0HI30V98LPRNr/oPlxTdg03sG76HT1nGIkBfZ3IfHtlneeu95a9GCGN6o
bQ++z1hfvGVk5xn7jIPv7AS0th8k9NKVzZyVL6Hu0wne4yLgMngxPMeEcnuP
52A2dhPy6OpifC2fi6xnlMh3LTHXnufBmgm2MuN8I32hx8/g1dsxNe80Jm0+
gezPf+V5oBFqfqZHgk+/7KHYw1HkPPPbi5wPO3+XdH01Qk7fJubfEvLwTgp6
fhHZROzxuBsv0HdZGhRNO9C26IHmdoN5rr3Ad5HzpOl15H585eov1NLbjiC7
YBQ80kvR/cQLdCy4Ae+tN9AhswJ9992Hd9ZVOr9dhun0bJgQ3x1IG2nZj4eO
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
vA0Tcg5g3YtfsPHNH0j/+HdkvhVm1zE7IYnshaWlNdhJ+3dgeBKMfQPhPm6W
8v95jJmOdPopac6xZbldzH9u6DWGx2eVs8hlNXTqrH9Pb1Sp9krMY9DiM1R8
OHNYrJ3lLzBbaGjsdmz+6i+sffA5n902PKEAYzfsx5xdpbz3fv4fQNbbX7Dy
wgNkf/ab2J+3/fs5L/FdT4Pzymtf9SXOka9Tv9divRR3V8Xmm0ixeblulzS9
9JjsttJu+qf5v+KS1zGqOF/HtZEwiz4wLJvXzLOeTL0WrON+lNEs757ZU8xm
08jFY8cui5Obd5uEQDa3vmVHHttmtinLjXPmPfKcVTn278mzF+xeIb4l1bhI
uavs99uQ5dfT/xlCOn7z1+9g1WMW34eSjmb+fNajht1mufDsOX3Psei7PBOz
d57neYmsX3Ri9Sec5WxWT3LN50i8+xar6XGm31m+65j1++D9URRnuqKhFxT6
vUnDD+Z2BF9W4rWo65U+e4nz1jLO89tC7J6dm3QcR5FNNBxWC7bBt+Q17MP3
wyXxpLASTsJzczk8c4gRO26SXtqI1j2Woan1aJjNI600exv33bekx5p7L4Tu
oDWwCj3Ca+pa9QqDtvtcGIxK5edcK9JpbZmem3MAh2vq1wM2v6QaCvtlaLPk
CFyybvJ4rvGi/TBZclDF+aWHYRN3njTgXiworKzX+8aXfwnF9BI4Et8cSJd2
IL5133oXQ0irTjj4GGN3PcBQYrwfMbtTWiU8M2/COeMGnJIr4Ew8dN90i/hO
zKflk19Deu8KbINPoFPeXbiQPeK4/DicV55Cx42V9L534EOfT3fBUWLn1Xrx
+sDtz9E65Cw8lh1D9zXn0SbyAoJPPKnXd1t15AFti33omlYB3x334BZ3AU4h
RXBYdpRskErOe5vlRfDeeo/4RXo+4zpcMyrhSuxn343VFLSn7+qVVgVfenzQ
ltsYWXAf48n2GX/oMQKI811pW7mmV8GO5dKtIvsqpBze+fWbS7Dn+isoZh2B
QTDrFSyynq6NFx3gfhrbRNontM3bjKHfrcVCBO+u35za5z++gz7ZCIr5h2Cx
YCfZEfugGxQPHfc5MBi9nueFGk/fguadlqKlbwh0PGaidZ9Q2EQVoXXPFdCy
GUf2aTjv9+xNrHdNY33sK2AfeQgOqw7CIfIg2XL0PYnzrbqQ/rcQtbylNAMy
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
NLtr9i2yJ8rhRFy0jboAlw3Xef6affR5uNFtb9K/NmvKMPrAQ0w68Yz041W4
5T6Fy9oqdCDd3DnjOnrl3kabsLMIOVk/n/vErTdgFn4W/bOuY9DOGvRNK4d/
diUCt95GAD3WPu4i3FaW4KvvPpzBuK/qE7SKLEWn9OvovKEcnsR91+zHcEq9
Bd9NNzDn7Ct0oOecyFZiuQVO8cJ3Yz58ViNos+oC/S3dTq6Ae+4dsoNuwHUT
XadVwZy2l/2aSzwX0Ya2mzV9LjbTp8Xsg3xuz/1P6tcvb8yJN1AEk30wchua
DM+EwZRtMF64F4azd6JlQBLajtoEy1VnBda7r8LJJ/XrKVTx/CsoDMajgV8s
XLJucM7rDU+G7pB4nnvXzGcxjydZLM6H9Yo9MJm7g+y9s3BYXUzHbyxp+jz4
Fr+gbXEJVqEH4JZ1GU7JZDORzcvmLDfzXsR7TgqcHyCw3ipQ1otKdttCmi8h
0/pW0ozoAA3+91fWzyvtBClvXx6bl8Xo5bX08r57Qgw+QPk3Qk2eaB+YSLlG
qv72Uu2QlIPPapIDVmzkvubaev4HTN5+Qo27H20vQjbrY3rtBZ/VpV6H95jH
INPevEOHqYtrMXvxufvY9TewruYrnpfHcpJSHv8XYzYdgImPL+m5jmjSsjWa
NFfN7GZ9dWPvf41YNT3/GEkPPseSo9eE/im8rkq9711TTb/9P80plzjf1Bu+
c5J4bDWh+i3v99LWbhDZNf58FqtW226cLayWTtn3zrSf6Lu1QqcJUZhRWArW
R4bFYLM//40+/2jYB8yvg/PvYfo/cV7pt9dgub5sJqy+LObOuc589jLOfyjn
TorPq/nt665ZrOVDMVSxXerDLNTFibF2Q9li/8NEqGVgfuzpeaewnU5349MP
wLb3DBj5jIMhaXrmr3EOnM/j34zDUj+dRnpCLWVj1rdP1o+oaa1ehaoeEupa
PoD3g2Y2XLcZa7CdbLv2QUuFWIsYDxdsfOl3rdLyLL6jZdFfjNerOC/48gcq
Wa9tpeJzQ0N/tHQcgTm7L8CSeK/Q7S3j+uBabNexkT1mM0jdBrCROD9Q1PWq
pWXahzg/GYZT8uBVcAftM8t4bzCXdefRfuMVdD38gPvxjSZvIt18EvYpV2Cx
9VMYx92EftAqWMzLgfn8POI666m2F8ak4fVHrkezDgthOHMbFP7JWJ5zrl7n
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
qS7UCqgZX1no76fMLm+l3DZTeC7M620tXit5CkYSs3k/Vjs+b5zNnd325j8o
XKouTKu2o9/mFbQauwKVqnUVcvNZrj99trvvGPRacwxdF+3mmt7Vezh2vgPv
qcfiAGzeTn7Oi8w2ba7Hdj3Wq+Lw6vcoNXLNtb55zn4PFJXq6TQz5lqKOt+L
+625X1/mv8JuNcfz6XgzlZ5X9ygwUM+Yr0eOIS3/qdy7T/rt9WfRqXz2rHZC
Z4Wa3aZi9y+Am89ovk+L8bx7NePVsfn8nNfk4Mmc95X740jxeW3NvDp3XmS9
g3K7OOn3wmbepOdj8PXQxWK/HP04vMBsE0eB82rWmziJ9506qfjeUb7POF+c
vmNRizaos/kWvrkLNDj/M9wOPUeDYzdJvz9ErcuvUPvsfTQ+nYPqG67xmXRO
s+kcPmgfem6P/lfPx0/e/IpD6S94LlztpddRIjAcpRZch9Wia3BaFQe7WZdg
MSEYFqQXzUYfR2XiiBkt06GHeM9US1qlRpGW/GY/dN33wWjEKdSbfBpzDqfg
eu5r/Oc//7388amns9FoSRT670tHP8Zrxm/i+GDGdGL+kL3E+x2JGE63R9H/
O5p0+ihaI45mYpj43Lf0+iH0vsHs9bQGEPP77KXPo2uv1TFotykBv/wXc+Iz
Hv6A9ecySZtHoNxo2s4dd3DNbjLiJCznRcB80llUHnaE75PKI4/BnBhvOeE0
LCcG85lELP/PfnkMTBdHo9LMq7z/cOedqVgT9QBZTz+fX/h3Lssu59AxvBfW
xHmHGcGosz0eDUPuotbFZ3zVOZGLmofzUPPCn2h68gmMXfxQmJjA/WAO0mqf
bzH/mYlc66KdKWnsINXbi7n5Yo1dCSn/zk7FeRuR81Jevth7T8rbN7JVLc3s
u9YG/Pb6c+q9VJpeb6nzlURfZyE2J6xoTQzcFoIVt14XwPd/ahn6XL3+eqTz
Wf+eLa8+osGgeYLfVfTXa/O3xZlsZnqsl7S7mZ7PVzzn82Xhpclb4DV2hWqg
FO3bJTceYxnZGF9Zt6THqvA+6J0X7UPbwC3wnR6EDnO2o/2cHbBrMoC+myka
9QvE3t+ACSGJQo98MmftWw3Lx3n2/QTGq3hPrNXoeFOtntfMnqms1vJ6nCd+
81z7ispM2uJSzN3MU5NTp+1pq892vV616vw7s5YFzw8oIBb/qfi85r65KvfO
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
mB8Fu9n0+MyrMJ8ZiaLTIqCbEo7yixLQZGE4Bq27hvVhubjzL9WOLwnORNPl
14Wcut2p+Jb4PDr4NqZeuINZoXfgf/YOJhG3p5zJxbRzeZhCOn7S3mRMPpiG
qcR9Vg/nT89PCsnDNHpt4MU7GE+vG3HyFobuv4HBu1Iw9PBNtFp5Hf03x+H9
F/SO+auXl+9+xcHr9zCCbL82m5NhuTIFuvGXaTtGoOLUK7CfFc63scPiaFgH
XILT4utcz7OZNyzuzvwpbDF/vtvaeDgtu4aGu2+hzvZcOK5PgdPGFJSfQZ83
nvb5oCMwIfvBefk1tFwUhkFbozHzWCp2RdxC+K2XyHz2js/p+acuzDfVfEUI
io0/Asdpp1B7WxwanboFlzUxcAtKQ8l6w/m5SMhtETnvpGK9pgeVxHnV7Ei5
dlY1S8q+naLlHZSeeRp9L/bOl+0Asf7eSK7pkXrlK31zjOR6enFOncgVY2mW
HcvFN5iL5yUvlsfH6tCZ9mnYOxCLs16i+5L9XIfqTOrwHHyHZgPpnJTM54Ky
/PEZEfrzaL9Eq+foMd/wa1hMe/XdN1ic+QKeY1cKvVCL1xQYb6bHeM0sGsOc
184o1ee8fo6C1C/Vg28XVodcqEIr7v/tsyEYujJNeayX5+CVbYzSju24T2Pn
j8C+34F2M7fzPD5hppA2j0Kf82ZVO2Ne4n0sIRvBolZ3rkULsxl2jPf6el5d
F1dJ8tu3FOvcSbdXZkvMrzcTc+dlG0C7pB7B+ebEFvRYPm2vipcUmEen5Xw+
Ta+fZ6+3H5X7Bew3dd9mruPtULPzJO5vaTZsMd03R+GKzRXGS0vmvPhbERlv
bKnYY5KvXvLXy32n5Xm0Ur28Otde9M2p58yKnJd9+VKdHIvF25GmL9kU3+6/
jPZzdov9cjpqOG8iLQ3nRRuA7hfIeWem54Xn2XmhVNMpKNd1G5zmXSCtFYWG
xJUGIXdhtzoS5cfsR8LdF//YufVzl/cfPiLh/vfYkfAYIw+nofH6WJgti4HR
fNIUAeEoPJbY738elkyvE+dZTJ7NhHdaFgvXtWQPLIuD09JY0o2RqETsKDKa
+DH4FCxWpqLV+mTMCc5G8rN/t+ZOfRm6Px3tNiZg5JGbGHGctDtp+ZnE+RVh
eZhJrA+gNeP8bUwjrk8/nimvaSezMD0kF4GhxPjzd7CA3rM4jOwC4vyYU7kY
cTSLjo10fLMjBe03xuPFu3+3Fl66ZD/7EWtCc/HN0TtwXJFIbD5J2/ckKowL
IfvrOjE6Hu7rU0nHxxHbo+EwP5JreFuyxawDLsJ0aihMpl9GYbIri8y7hnK0
79zmX0HvvSlYHfUAYdkvv7iv7T91qb3qCiw2xqJx+BPU2E7ff0MS7KYc5fVa
vL+UVLfCc1v0WK/ivDw/StLyqrnRSm6+ivNS7N5OlXdvr9TZCfpexXnZV6+a
ca+abSfftlLlDFvr+e/l/jleWsaz2V18projui09gB1k+tZkM1voPMn7vNLn
FrNsxW0AXYk6aB+4BauIwavzfuC6XtD2BcXgvzRWL90W5tGz2rkplzNQuYof
j63qyjTSMt5MxSQ13/U5b+5h2Gev1vh6eYj6PVZYLyJd+eaCzVOkNoqY0mO2
HVCEmKor14wz3dt/PYbsuoiGA+bCtE5PzkIpf0LJlczPeWY/sdV7zTEEffcf
cbubcn8/Y7XMeKbxZe0u9r+pzOYK+/C4u+CXbyno/IqsD62n+JjaR99SzpWX
OW8wt17/OQO59wX54z/lt1ez3twA52Wm69dFGt5/8r7jefWsvmEE72PYePAC
3u+A+abY7yAf4y31Oe+TX8/bqDgv/9bayHPllf53Au+N5R6Y4m1Nv3ql/40J
z9llnO/Ea+LZTJtOC/eSbrtI9nQTVS5eJ5HvnQU9T8yWlqLZxdvOnWS2l3CW
HuvMF9P07NxRuvFElG61mM+cc19+FTWOPULdiJ9Qms53MyLy/qvn3HyXP/9E
zne/4Gj6c0wLyUH7TbFwWxSJEtOvQDcxDLpJYSjHetEz7T4rAtbzr/O6O13j
NTwmUGfCSQSQvZD+6pf/yde/8+on+KyOxqCdyRhOun4cMXrq+TzMJ84vYKyn
2wFkV808ewuzgnMwi12fYbezEUh6fsa5O5hDjF90iV5zIQ8Tz+Rh9LEcDNuX
juG7k9GItsW2qHv/k//t0fvfsPx0BppPCUYRFn/x3QLdmHOoPPsa96Gw+YaV
5kahGJsTNJGO4ckXYRYQhmZrozHy+E3sSn5KNtd7/Pjrf5fr+pcTt16h/PYs
1Iz8Da6rolF1XQwqdlqEIqzPuapGRVki653EHlRSv0kD8yVkzjuKMyZUefhc
z9tLMy9UGt9e7csX+G8k9cyVc+0l3vvIM2643nAQ8/Ukv72lgbw8Wc8T49l9
m9aijrdF342nsenlR1jV7SXmJgucE/jXiufz6b6qx59zaDYI/hdS+Uzw5Tmv
eJ6cXGd/vSCffEExeMFWWJDyEGuJ76zevOuS/ShiUleIrYr58cVUtVYKZ1Q6
Xr1k5os8N/NAfl+9AcZL9o+qp60wg86X+/HZ5wq9cVoLM8xs2vFVqEILXp/A
uV22EZ9PJDPeqmA9z2fj8f/TDLVJi254/ht6LDsg2FQ6dxTl+fgt5Dx85pcv
znQ78b14ZW+Ru1I+XktlSfn00n39eLqhvHqN7VSAT19lK2jsgk/k1cv7Tc6f
V8XmZeZLswhaQelZrOK8fr6duZRzJ+SSlKXtvfreW3iMW8V9IswfIsxe9jao
5YurffWWUiy+tdIjR+5H5aPEy+yknpftxDwZdc28VGejtvPVjBcW99mLfW9M
HPw42+v2ncv7UhW3aY+iVm2F18o+e0nTS5z303Ke81x4jcB57ePGdG1k6YEy
nrNRvssOWPQLgvvSK6iyPRe1Qt/AblUcGpLO8thxDRMu3cL682mISH+I1+/+
N8yULm9//xMRD95h6YVc9NoUg+ozw1ByVDB0/U+g1MxItJh7EQsPJSPl7v92
Po50WX7+FlqvicG4Y5kYS5p+MrF92sU8LKQ1h/R6IGn02WdzMY8YP5f4Pvc0
LcZ6epxxfhG9bh7ZBP7E+QliPj5bXTfGoWdQHN7++u/3MfjcJfvxW6w/fQNd
diTBamEMn/lbaMhJ2E8OQZtVUQg4k41jWd/h7pv/jt+hoMtvH/+D5KxHOJT8
EPPiH6LLkWTUXR+NKntuoeb5n+CyIh4u8y/CpNoQFGczqPU57yhwvoSs6xVt
r50tIfa7kPpiSHn6UtxOv/7OTtT5DpI/v53Cevu2Sn2drX5tnYrxrM6O1d07
tlV64Vu3Vvqxyv27lR6tzOcvzGazR49VR7D81ncoY+cjzHiV5tNrYtbsvOpJ
3G3J455FyzdB8xFLMelcIp8PyzT4koxnmB2T92V+e7IN5ibc5X3qNzz7lW7f
g/e45Rh5OAqd5u2iv1EJRS08Fa6bq3hh7sH7y2p0u4W4zFspy0yVg2emz/kC
GC9xXj0XiOs8X3nOiTw3gPnmmb/DQsjd45qP52VLPYtai/3UDHOe++WJm8xX
z2aoWdf9Bstzv8OMqGyUYXaVzgqFKxJTzX1FtrdWtHu+XnUtBf1uJvakl7S8
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
dxDTC3jT+2nM3tOKNPjStdfiq3CbcQlexPGdKPaxn3IBHhTrWP90iuKrJPjv
u0fXqWg4LAaWI+gz/JFh/FHi4udgPfY0xQBHUe8n4vqzE5D3x9sin/8lnTON
1meh2tBdFK/RcZ96CtXbR8KGYj0L+h3Hejr2tWQ+77rgIuwnHYcDxQOO4wnv
6ZxxJMx3nXYG/syTYXceWh+6jbAz+eh45DY+O/MYfY/c4bFl2KZ0tNl0HU1T
/sG6F29x+8MbrHj9L1pc/0CxxRbZV6S1PGMuzCjmVni82P+iYXxFuT9V08GG
a5oX9l110mpkGs4L/F/N/yseudLv2J5gqBSML9edkGZWEc63+GEp8bFXUr+z
KYyXef7k+FuYl/Mz7NmMEbrf15tOS7n/8o04XvF5XHy154vvZebKteIRIvN6
Ge9Zr72G+ZqPjlLP13vEtRXw1RTmm+DmimesKT28mm8X44A2Gtaza9lnrfWo
ZZiech8lqhB3rN4U4sxYfb1d4OWm+HpD47+3V/d9xRtV5O2qppHxeSV3L+jq
VYwX5hGw9dH6fJ3CfXQc50WMV69bSjgv4D7vfyP+3XPBTiynGHe8rofOVL5e
WgzjmffN5MTHKPuJL3+MRXde8f45HjsQd+YaDIu28pw7Bzi2GYo+0Ycx7FAy
r8V/tfEsfPtOlvSjZbyl2JHuU4JpBcr7YtjBZOykvaCmB9OimGHAtis8Lpgq
e+yartVruK/k7xmnZ7EL+8wNlQONNCPa7XLm+px9ORXzFS6vnRcqrisxnFFc
rJtlI8+oM4nzxnl7OyM+7yDuK92M+Hw4x22DoREiFu1BxILd0oyAis1QhrC/
knNPmdNrS8J62T9H5veqh47gn6PV68PVPKWK8Yp/N722UjWaoHSN9nBP/o0f
K/zxBpP/eYted16j3fHHaLEjB5325mFo6h8I3pQN57mxtBfnovnB21w/5bOM
4ckZOBF/d57I9u/DcJ5+Cg6057vMJcz4fgfqdF+KWl0WwuqH3XyPr9FpERp8
uQlOc87BZ9M12E4+A0OfLTiW8aRIPHn1HvDbkouqgw6iwVf7OBbZzYyFBeG7
+dAjxBHPwHXVDTiuvodGe+/AmvXUEWZ5rGJ54lS4L0iAw/hzcCPcc58Vx7m8
35JkBK1MQ+uNWdxDLrW4/PiHfzF0ZzbCCFPDiW93WJ2GjsSjOxIXbbc0Gf7E
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
56MeveN5esbdJ8bdRq/IffDpOwkVWJ3WUB62ocOw7o9/OdeuwmbNlvXiWgox
V6/c5t76xPkH74rnGN5m/FpeFyhVPRguHYajy9RNfG7dUnrOZU/ecw4/K/MX
lK4eiIp0Xi64+YrXCwrP0suXtHgyzrPvAPP0rRdAsbyZn4m8veneOvEcFGPG
8orWU9F1CPPqpOvicF6cURdmks9r2l4hdy/zg3L0dzbX6tMVR3junvXXjCes
HyvX6KPz/8BXm0/TXkavj843rrNX/XJ6yr54Sp2+p8bpFV6v3hb8PtReesl3
X+kPqKD0C8g9gmwPNXP6Gp4zr6LfP8DXH97j0/x/0PhYAZoTtWtz4w1axr+A
Z+Ql4u0naG+/CJc5tEcvvECYnwy/lcTPaA9vdvgOGu+8hkbbc3jvlOvcc/BY
fJligTie0/VcTji/6BLKDjuIGSeK4Yz//ot2dD8r4s0tj9+FL+Fg8O4bCNiR
i3rLb6NFzFOMzXqMVXSu7Iq9h3VxDzD96jOcvPd/h5Pi5Wjub6hNuB6yORtB
q9PhNz8B3tOvoNPeXISduQG/TVlIelS0t03Buw+IOHGTXvcNtCQO7zHlEgKW
JiOE7heyIROfzIjHdwf+2yy8/+kl+VkBDl3/DQfos9pw4S6mp+Sjf/wj2G99
DLsV1xC4K5ew9xqa0HVLipWsmPfgpLN4+KpoLeCRnKcw+/EoxQVX4Bl1BR6L
6NguuQz3RXFwnhIDL+LrARQ3BO2+jqb0vvxWJaLRmmR40f+6zD1D6yxcF1yA
86RjCNidhzbXCtDy7gcExb9Hs5i/0Pf5P/iCnqdjagE+CZqGkjWC+fed1dxL
Mr5XLQStf1yCPpE7ec+zoQZhvaPmD8Xr8o7d1Nq6rq4l+Egba120fH2EnKtX
eH2EEeZ318+WdNBwnv2d6W1t2g3ns+kaBn/DdTDsu2mo2VrC/DptUIXi9Rpe
/Sjm6M5n2xnK+tN3vw2fXc9rhOLcLGujvL16LS1lD1OwvlxRy0iTX07uvZNq
mVovXnlzfd28MMYLnrGFcL+dDvPLCzxL86PT+9aInv1s8Tq9wZ24QDK+4B4E
ThJOK7VWC2HJeK7pq7Q8u5KfVa/Vz6q93C/fTeLxCk+3IQy3od/bEdZbd5G1
jUZaPLkeUHTeXqnRh6i98vol/Y3jO8P5utJ8OiVnX4Iw0lA1GAM2n+U6Tb3P
rb7WPSfnOde7MU1dDY8+WJr/hv+s+NKx2fGsfr78GTgO91y0m/fPf7byJPbQ
96vDpA30s5XsRWdKY28Dx04juI6fPaahnDd8e4/F8qcfuK6eaf9YLx+r2TNt
HpuJw/xyeO3AUIX317O4w6T3Pt1nUvwd/v6mJNzGnKwnsG83lPv8FofzouZe
w3jh3DMXajvyuaLDeVnXofbSKThvY4rPm8rbdzXy0RZ8NxR/nBqtUMWtN72v
W4h++BqRN54j8uZzuv0HhuyJ4zyD+eJWdukt70ERqg6vktxjp3rgOkZoe5CT
Po+v5e61uTYi1lewVbC+M8/fs9kBLEdYp0MUgrffxQA6B/r+/R7tM/5GwLGn
8N11A82OMhy4Df81V+E8/TjHeI/l8XCdeYp75bgvjEXIEcLgM4/hvSYF3svi
4b0qGU7TT8N6xD6us3ecchx2Yw7DELEO0adzi8SRN8TlOhCGeu25gcBt1xCw
KZs4YDaaEae3XZgC+y15aHL5ISKJtyfn/YrHL//ntff/6aUrYTzziA9aloJG
i5PguygVzXdeR9tTeRTXXEPK06JjjIK3H9CdcD7gaB6C6DH8IpPhsygRLQjn
22zMgh89XnEevP8Xlz/+eY+Muy8wOu0x7I/cQdU5qXBfnYmQfRSnrM/ifjVN
CZuDCZcbzrmE1Pyi9QaXbzxD2b4bYDvpOGxHH4D5oO18xrzbvFh6rDR4Lr2M
gJ25aHXmEQJ35sBp2imer3eLjIUbYb3zjJNwmXUSQVsz0PLEbTTedx2eO+6h
+eXfEXbvLT6j5+j1C2Dz1W7a91pIM2r4962zpCthuc1qzdFmVBS+WHmAvjfh
EtY7yX42DkLfi4rzWrysfo8EXq/1rUbIOTMlZ19YE6Nq9xxEzyoJ6xlWGEr4
4bs9lxGxZD+/rdsXKN5n+jw+/7Z2a47tZdm+w/01ZR2QgvNCP6+ZmmuUbysc
31rBehnndTin5Czb6+auqZgqaPK1mR/FYL1FW12MUCg3IHjLFvIuEXv+TPjS
iXl49n4MZXxhEfINlj74A7UbfcZ/Zu9V5eMWhbm7Ti8n/yzNouskYbzaJ9dF
wneG6/z37WRO30XKgdiy/GeEXMvvIGG/tVL7l/R5Rerw6ip1+aJWiJTPr99R
yuPLOC/l9NvDUCUApWo1x9C9carWftKVWya09g94r3rf6MOcy3edtZ3r3KU8
eeFZ9Gvp69xvxXH635rcC5f55rCZs9VcwnWcXsnZlyTOznB9yL6rHOdHHs/k
voW+n07D2peSHk/Tz2sYzrR/P/A6Qn349Z/GPXSLwnnJL+c6z3mxnlO38FFc
i2fsh1cod2/RRndO6vP2Ws9JeTE2lM8LRYOnxs6qzt7EjDo70/V5fU1c7z3P
cb5KM7j2GM97aBp/PRudp22iz3wPQoZHoawV7Q/VW6Oyax91L5L8cnpqOXu+
T2n9dZUctFxkRbnGWNFJ6bcTsN5B1uPZKVgfpsd6Oo/L0l5arfH3qNVpPdrH
PcFA2mu7Pf0HIUd/ht/qDNqbj6LRKuK0h3Jpf6a9fPFFOEyLgevsM7zeGrQ7
F0125MB93nk40v7foN9K2I3cQ38/C6cZp+E86wL3yWGeKYY+G7EnsWh/+F8L
3qPFodtwZzVxwosgwnp3eg1W67PhQqvDsbuIuv8ST/4u2p/1v14evCzAhWJy
7srlUO5zmC9JQfCGLMKxVARvvIaIg3nociwPnhSHJBeD86/ffEC3ozfR/vB1
dCb+6r08A97RaQil+MB+aQqWxz/86POnPn6NtGL8+/7r5Zd3H7Dm9kt03n8L
gRRH1VuZAccVaRRD5SJwaw6a7MmDw7bruPigaA+hvCevUPvbnbBhs2ajE+E4
/QycZhJPn3EKDT9fzT0RXWadhQ/x/aYHbyFgcwbcmf/t1BNco+G7Mh7Be3IQ
vDsHrnNO0d/OI2D9HbRNeoE+9PiffQCcx58nPO9B+19TVU8irTCuq2dz3g3V
WiD0x6X4bNlejv8S1sv9cCKXdxKxXOLzldTvkYj/ETyeruRkFEObxHo5569g
vRwjGEr5I+i7hVw7Vap+O5Ru2FGde1NBraHJy1bJsXXVfLStjbBenIktcw+9
X6eC9Up/mFKTV7BPua3se3rubDzPXsftzdtp+nzuuSNqnNrpcb2Qj42I4e0K
Ybm2xFy81tfOXjPTo3218RR+OJzI+T3j+TrtnaqbN6WLVzi8PHPWqqOM2+Ea
h1diIqU+by3jOKvL24XTcaG4jemYbDpqOF8EnzeU8OAYxZfBjb92bbnIy4lr
LwwGH/lnD8lblv+eXfvyeji7//f7L2P+9Wcyzt+RZtAaadaXPfkAly4/0XM6
YdzFm1wfV9hnVsJY1g/X5Nt5/PEZDs+/8Zpz756L90vzg+q30ji9PF/I/6tZ
3Pd+RtozPteOnV/M65Zp7aenPDbRH5/P8wmsblDDvTdK1WzOa/ozM54Viju4
R278Pa4/YD5AC2/+Bt9+E7mGUNXeKVhvLuC86PVgIdacpPxQObkOpJxLmg7P
COcVHZ7qj9NJmzlfHM6Lc7HUnl2lz60HyrI4v0ZLrjdoNmypdFxZvu6TFtz3
trRFZwnjmd5O4Ryy9q4C3380HZ6Ye6wk6ol02nu5Lqn08Svae6WOyXm9tncy
nULZ+iGo6jsYDbpvQxc6NmxeSOurIDx4Qvh9AS5TY+A89Tj81yai1Yl7aLI9
E423ZqHJ3jzig5mEE9mct9kTv3eYcBSVG41GjdAZqNczGpaDtkheOcuTUX3s
CVy59WuROJL969+E5/R4O67De3suakenwnZ5GkZdzMe1l0X34v1PLpeIrw7c
fwOWs+Jh+O4EdiU//uh9+hPXrR2VBvetN9Bsax5mE8aHH74Jq6gUxN8tOlb4
5/0HtDpwAwOItw7dlwe79bkI2J4He8J6L7rvn8XMjWGXW8/+RJlxF1B14iX0
2n8Te7OK9hH8n1zy/3yHxYlP4EOxS41l6XDbco1iqhw0IJ5/4E7ROP/yr7fw
jrwM6yUJPEfToP9q1Om+BFUCxqJu96Vwmx8L6yE7uK+SP5tXsy0LQXtvIGBj
GpofvImm+3LhGXmR4sGjPDbwXpWBpjEF6HDzPb6hx2+66w5x6uEoVScI5RiG
2YWp56l0O4x7zZcxJ95XIQiBA2Zi8PbT+MS9FwxVm6Oys/S9qCTgciV1Rehj
ZiF2riTnzSrx+rz0s5YvM/KmVL93Ul6gMuubqxqCmt6fcd87L+I9hjKN+eNU
UDiAndLnyjBewfmu2j6iYL3K6438OwRur/ERxb+T+Lx1B66tlbBd47W62rSF
oscT/cE0fs99cy21viSxJ1nnv6P7vVFfu6XiT2f0s6iTE3Lv2u81ns7eV4lP
grkenOmxGw+cI+HnJ8xjPYBfl2WzfcReOnVJ/J2dO5zHc/7eQ8J47nkn5OA5
rsvcXp5Dzmvwaj9VD6lWb63l7FmtyBjnnTsNh2uXkXAP/wnevcbB79NJtCYj
4ItpCP52DpoPWYCQ7xeg9U+r0G7calor0WHiOu6F033OVr56Re5H36UH0X/V
YYy7cI37JCs4b5y3Z3Xv2dm/8s+/ilO4gL2FZ8YxTGX5c3fmrVjKi8cELKfP
5tkx77oyhO2GSv7ybNjWKFEtGCWrNcGPJ7L4/HnG3Vl+vm6jftxHb0b6U47f
pubQKpqBwIFzeU3gh8Mp/L6Fe+seyj30Es4vUnDeoOC8EacX+LyYYxJ751Xf
JTXG1HC+nKJb1XnjiDPnBZwXsb5Q7l6YjaXo3eW8PeuHY74ZLM7//kAC5yFl
bbupsYBOZ6fuO4rGvpe2Hzn3kmvzAheROYiG9d01Xw9xTr2DlruvIOvuJU7f
WX1/0mcZiiq+o+H442H0I/rY5Q6rk77kmvemxL+abMvkWirWP9/67GN0TH6F
VicfED/LQ4sTD+C/ORNOU04iYNctuMw5D4tvN8H6h53E79fwGeTWxOfqTDuP
vFdF6+SuEnetQhhYnbhmIPH5KZfykfVz0fXv/8nlZObP+GL3ddRYmETYeZHj
fLWfzsBh+iUUfARv7xH3rzs/AdbLiNOvzOV6+/YnbsNyURLiivHW+5s4dLtD
N9HmwHWEbsuFPd3XZ00myk6Mxf7Mj/vmdl+VgpKjzsF21hVUnhwHs9kJCFmd
hu3/IQ/wXy7MYy8y5Sla7buBmqsyYZh7FSvTin9dwYsuoNbU07AeuhPmA+gY
D9sBK7rtt/U6vCiWc6Vj3/TIXTQ9fAdNKZ5qd/kXtI3/Dc0O3eL9GY23ZvK8
fVOKW9pc+gXtMwvQk51vWa9Rq10032vLNGilx3h1aTOgy1h24vPg24xZjhGH
L6O6Zx+eN5O+E3KNXcD4Sur3p6f+e8d0r/RdLNWwI/ekNFRrRVjSkn9XWXxu
qN0GpS078/nPbA5FJZHnO0VI+Xr6jo86lYFvd16i/TSA92hVsOsuz7ZTloLv
H8F50WOb70Osvy5M4PUa1isztzR+KnJafX5bqVkWWpZGuXtdnt9Efl/FeWOM
1+O6pocy0sNbaH4/5YwwXl02nTjXDR27kvcpGCoEorJjOGxaf4canr1hKNuI
jr00k1jk26wvmr1v7nlj013m6l10cYCE2TLHt+su9OB1ln/XjfN4M/Y323Ap
fpIxnr0uY5z/MSaVzxofdjABI44mYfjhRHy/7zLF9ZcxjPZ8locftOMSBu28
iME7znGPgK/Wn+C9lOya9Vz0jdqHXsSve8zfiVEn0wif78h57ds8zy1y53m5
LzD2fB7PHzD8jn7yvogZtYTzyQ95Pp3PoP+kCa+1sxhB4fn+vPfdRpoN1zCU
83uL5gM5xjN+znCe3bZrM4TPn2d1+Dny/Qv3zD3gPvfdue6+Hr2vo3KNPt8E
zt/lvv2sJ4X1mrgzr5yS7oXr8zrvW2O9iHAuinl7tXdejvUsFf4u4rwyd17G
eluBz+twXviOFsrdyz7atM/wehztE0xT2Hx4NI/zmZ5O0/Yqe4YRzyCMr2SM
884ixgs8xDivqPPvkmdnOoRrOC9gvbqf0O0y9UJ4fbJG6wUI3JyDQQTH/R69
R5fr79Hi6H34r06EP/Ey13nneA2eYX1rwvnWp/MRsDUHHmxW7dzzsB93DH5b
8uA84wyshmyH7cgD/PcNpp+F99o8PC/GCmbfzRdw2JiNxWnP8OTP/31u/p+C
d9iW8gTdCN8rj7+A8lPi4L35GtwWEh8l7HSZGgvDmPOYlVC8Dxy7TDp1DzUI
17scvIOg3Tfpvd+CA2HulWJ8cl6//RfdKB7woudvsfcm3fcWasxLROddH++j
S6GYxzD8NOynxcF+Rhz39A2g5606KRZmEy9yHV/khft4UoxX7n+9vH7zHltz
f4MnHfdh54ufu9t1TRIqTzgFx4nHYTf6CCwHbYPnsmTumewwKQaukXHwpPik
CfH40HOP6Px4hCCKBZnvrc/qJK7dbLwxHW0uv0T47Q8Y8AaIyC+A5TeH6fwb
QOdhM76nKvxd4fJSbNpV9sfpqn6/mNatPXGkMSeTUdOnH58PW9lF5uaOMj8X
cvbse1XZuTfHAEMN2tsqNUeJeu1Rw7c/bNsOh1uPCfDsMxnuERPg3GUULFp8
J3F2pqWrRJyyblseQ/PHpe+loXQAQkZGY/HtF6hg0w0laoZKcbfoq6PD+m4a
tiv7iE7vq8zEFH621uO8wj/NhDykUj9WdWfWHdWeIp3uXIfzRtxemNVWzhjn
jXi+cW+bOidXyBvo+Lrw3GY6HxvhthCblG7Qhj5bX3yxLgY/nkwn/MvA7IxH
nAP2XrIfleh8MJT355+VhNUdOI+XNHYR0rVaVxewXMF5juPdZMzvrC27cLmX
rqOkv+e9dh2LxHkzph+sJ/nAs1WC9Z0TphqqBPGau6FSEM/bGsr58n50Qxl/
wjQvqfeN5/pd5dy9lOMfsOkE57iqrz3j80JfHZsh+93eBM6ZWwxfymfLFuqt
l3GfYfWiO3+ifkB/iY+nER/PfKZ67Iw6lYMSVYP4Ks24vcGB4zT3vqP/YTjP
/G7dw8fw187zAdd+0+UMRJxfQt/jrzedA5ut3GnyBq4jKOSTk6ivzzMtggub
S1zKQ1ef57ze3BTOK7l7zf9O72nfQcV5LV8v9KjI+F5ezJkZ1+iV3jR1/rwJ
nJd726SaXSOEjluNman36bV2Ig4SJntzRGh9ciLWO/YS8L6XwPV7yZxejAm0
/UvhFjpeL2K9ODfXqJde0eSxc7hM/RBUCxqOWu1XolPyM3R/CjQ/+RZBO+7C
Z8kVeEVd4tr54P23EHI8n7hpGlqefIgOiUyTH4uG32yDzaiDsJ8QQxz+LGq2
m4daHRfyer7V2nSE057PB8UUcXn4+g1+L/hvnnDFXQroKZZl/oqmm7NRccZl
1F6YiIAdTAN+C032E+6uSodHVCqf7Wa7NAWW8+Lx6q/i44oXr9+i+YZ0tGa+
doS3QfvyYBmVjsQnRecb/vjrHUJ358JpZx7aEsZ3252DCpMuIf3Xj2PzkCO3
UH7aZXixGXxRKfDflks8+R6vo7Oew/rzE2A2nf6+LpPiyCe48/p/HxexI3Pt
+d/FHCHg+zN3UWkWy9dsQfUWM1G3+3I4TTnL5xlZjdwPqx/2otnh22iX8Bsa
b8/lq+XpxxSnJFI8EA8v5n8XnUR8/wVaJQJ96ePzmHkRZk5D6TvSiuOFNDsi
TMfl1bqTOgda8rWTcvhN0G7cKkw4n4HajT7nvL6yi8S9KztpXL6KS2+Us2H9
WiEw1GkP69bD0GJEND5deYTzsinxN/l3dU5GPmal52Nmyn1MJlz54fBV9Ft2
CEGDFqJ2wNfSrHnG/Wl94t4HUQ9eIWDgPL6H89mTai6tsGdeBeKIhTi9MgPT
VrgW84iiDp/3Agl8RN6/NGzvJC+tVq3W6o04vrFnnJhDV2udfLUzEQuI9QAR
x/Uafx3OW4nY3lG7reYktD25VM0QlKndCt9sO8/9gZl/DtNnz6Tjwn4eez4H
VWgvY346vIZho+Tou0u3dTxdXirOM97eQ/tZ/XsnCfs5/neQ8/g9JD2erem8
PZurynq/ObbzFQyDPBfGQJhfonZ7lKzdEiVrBdN1C64lZfPgSglzbFl/Xcma
zWEwa4r+q45h0a3fTOjwZCwlfv3lhjPcqz587k6uqS+qV53NsVl46w/U9u7N
++iZ/o554iq9eawG7/vZNMnPrpQbqnv05P8v1dVZD1w+oh+/h0+fSRSXeHD/
O5ZPKBRTyHHFotuvMeJoGtfthXy/mGv+C8214Tgv5SuY5x/7nlm3/Ia+O15C
fV7P5wt7M7XT47zxTANVZ6+dW7y+ZSVweCVXJnBdne+tCYxXe+iV2VWsx6Z2
KD+fFrEa07cLeG9kRZdespY+Qu6T66Fht4Ltjr10NXqJ2/fk3EHM7VdS9PiK
hliZXSv4emh9dgLWqzhfmNMzTV4Vz89Qt9MSWH65E+F3/0b4fcL6468RuOUW
fFdd5RquoD030ersUwTuvAnvlZlodjSf1gN4ME439QRsxhyCz/pseCyJR8OB
a+C14jIaLL6EdotP8965/78uj14WYBFx8+AttAcQttuuzULwvlsIZjVi4qr+
G7PhsyoNgXtvw3NFOqxHn4ErYbzhh5NYfOLj/W27KBY2jLiIwK3X0HjHDdSe
k4RE4t1FXVjs0HRDDryIv/uvyaH7nsfQQzc++jxpD16i5PBTsBp7Fo4zL8Of
PudGm3LgsyIFjbfRc2+/jmCKWZruvgFXwvnKC67CYXUmJp7PR87T/5s6R1GX
iSevo9rCWNiN3werYdvht+k6xSGJ/Jg7zzzHX2cLwvVGW27AIzoNLU4+RkjM
QwRszaNFn/+yBARue4jWcW/R5y8gcPtNVG82j76zrVGmYWu5PmrsM91Vnteg
zaVTfO8Yb+c5/ArBaD9+NaZfvYEGTQbSnhnMeThbVdh8KHuKuyuFEHfvCK8+
U/D5muO0z7C84VPMyXzIb/PZMheuSbMzWV6R+ZQQ9s8m3Gf9MYvvvOC10z7R
h1Cr0Recf7F8La/JlQ3k+KDl1IQ5dw4CzrO9Qsnf63R58rVNV6Mcfhc9zqsa
PWXp69PKUvC+vIjzItaqXq4dCuGwkm83M+G3p58LIt5XiBF0PetGWC/uwbq+
OKW/WdIVMM+cLrO2YOXPBYVm/Skz/vouO0jHOYhrmSWM72rkhyf64ik4T3GE
bXda4XLtvbOe63NsD1f5O+f9bHFOb6KvTvSzV7T1it9t/U6Sb04dudeufhup
316ZUUv3Kcs8b+U+e+Z722X6NiyluNG0t/0Dzq/7rz7Bc+NdZm7j/jhMKzcp
/r4Rx87ndXtWi6/h3gOV7Ttjds5zXmPnOE+xAdPNTbx8h7BJ8s39fM0Jnh9Q
fWtlzZ/fp1N4/mHM2Vw+q0bve5PPe+tY7mAzUY2RJ7O5P0/woPk8BjHO8Yv9
8zNT8/mxrebWneKlAKE2b1SfF7wdystet9KMeaPckm6WsFKX7yDHwh30c2ht
lDg7DLr6vLjv2MuzrnW9dZpPBztPWL8sm08z4kgS7S9Nec+GOl++kPeNPmev
8nqO7b3leTYSp6/kpKyewlJ0Qvp5NyrW62ZlK3q8rqoXrsrpWe6LPrs6bSeh
dusouIw+ij4U87VN+RdNDz1Hs4MP0Wz/fQRsyUOrc0+J0z+G/+YbaLTtNlwX
XYUP83zblIWAXbncR8WbsL7BlytgPWQdqkw5ib7Li/fC+/9y+fv9v7iY/wfm
Jz5F443El2cnwHzdNfjtvgOvNdlwX5wEp5mX4L40mc+kd5x2kWKTdHguTYPr
gkRaCWgw5QIqDTyIey+KngurXLpszUXNFRkIPnIX1adeRGxm0Tn/vz58QFPi
8l47c2G+IhO2kWl8fl1xl3dv38Ob+HHZYTFwm0/8d1Umcfo0Pm/WdtwZeC5P
hQvFJq5s7i5xfe9NeWhEx8R+TRY+mUfHYF0Wplx6hNN3fue+uP/Xl8UXb6H0
8D2oFTaTPtN4PlfAa1US/Cn+8F2fSb+7Co/lmfDfcRf+WykePPczgg/eo5jw
DpoefISmBx6hyaGXCH8KhF54TDHlWlR2+4L2w+a0x4o8XvN3knRsylxIIZ6W
58yy70BZqzDaK5qj1cgojD6ZgvqBA/jPVYhvlzbvTDyrFezbj+D+8vNyHmF2
+gPuUTXqVDrGnMmgPSxL9a1iPlbM44J7XVy8xmfD82vZ52bZw9fc++Jz4l4j
j6VIM2irtuD5AtVTx16bc6f64ys4L+vvpdWdxyAVHPrRdS+B5ys6/C6a97bY
c2fTWchBdlR77soJ14ruvEhcNeo71/NtY/6v4bXir2+mu5/Io4rKG3TQ96Rb
6mMTJc9eokYIfZbduSZtTtZjrs02nunLfceu3EQ17/4w1AyVeXsnPW7byDV3
G+F3/LyK4J+nxOWN/04/23eXPfE6cd29mX1PfkwY1pvEeaU/XsX85nQ+d0AZ
WmpvPcP1+u14r7x+Fr20+BwbgzOaDJyPpfdfSe8zrrAf3tKHb/hcGUNZd5St
GYywKRuxiPCa+dmz2bQipnKcv/ESNd0jUNmuE6/NS/41ErdmeM7yA59R3NBx
4nrO5aX5t1qendX/fftONuLzUj6AxQqM+7PYYNmzfzFg0znUdO7Ge+taj1zG
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
ew3ZVIui4To/Cq6LY3k9ROCB+3SbCKuBx+C9IhV22+/DfOMbNL34GWM/FWBS
XgG6vfsHTksKUGv03zDrdIyOjUA6t5rL1/Av+OuN5j6os5zU3g/dBC3fU9Dw
xHcnaVVw+QHFLDqgWp0/eA+8iRfSub+eMZ7Nopuf/gY/rN6vstnvpwHE5n84
55keWvLwM35Ye4A/5t75B1SsbqHjfPD8DdwfymKiSx58Qo/luzSbYeB4hHE9
X7TffkEGi88fJ6a04nXYun5V4mxJO6XOVdQGxvl5xqw34r2an6YwL7gw84v0
m3dQ7YRyqtYXNLZB82Ur76XZBux615XXyUms19sPhXLkjPMIBQ1uqs7bUDiv
cd1UjGkIPYP5a+w0PW8qa/ly9j0FzSLYA4pNIL5G9AWIjLcL1jjPnmPftcg8
vN+2nOFz3Ip9V1/rk8P89Lw3TjOJ/dWCND0v6PpSAvO5rq8m+OqVWL3Af8bJ
klVZvZ01qrp0Jt7e4DydFCP5ydlxyHrpsDz8eTffY102MDw8FRb+vaQYvUlF
fOPYgc9PruzakWtzFpdnsXU2i77H0sMo/rU/Slf2RfPx62DfcgDX/my2/Vek
p/tuPYdVdC4svpeHyTw//6Gq4ZmtwWr856e/wNKHOWg4YD73w5t8XUfiMe95
11TrYy/m2xHDTYq583zGjjM3Y8WLz+ixaA9Mynjz3Ad1Fh3negs1Pl9W7ner
9LVXY/NqLZ3Q67ZIzrcXYvaST4vF5Zl2N6/bF/NuPCcb7hduF/J5r0VxvlCu
jVFNnYPit+8mL0HXCzFJsW5e5HxFHqNXdL3sz5dz9PhrRO4rPn1Hrd5O4bwa
C5X76Ij+Q1ODMesVX59k/7D+VyW+c+f9c2yG3IDl78TKxa/Rlq59HdM/ofez
Aox5+AlTzr0mTt+H28qrxJILvA7Macop+G1Jg/WQXaQld8NAmtxuzH4YRu6B
7+Yr8Nl4BU5zz8OJOGO55AZ8d7/GxFTiPLGqfxLx+cQrOK5Jg90UsgOG7IXH
kjg0CH8IxzGHYPHnTthOOw3znzfCM+wi6eiHcJsTDYtem0if70HVXgfhPSMB
/dI/okX8KzSIfUHveQ0OkyO5L91myEHYDDjI+806rL6PNvufoHsKPefqazhu
e4Bi09OQnP3pv2Z8wV9/w3FjFqwin6Fe7HN0u/AM/hvvI/AYafXQJLKTdvIa
QPvJEcTbGNQ+mIlmV1+iV0Yu2u69R5/jOCz/PABLVuf323b4b7mOeocyYT/u
KGoQ9+1CzsL8x/WovSUVgXtvwTDmCPH7ABwWke206z6anfmANfdysfdJHtpH
5MJlwyPUWpwK58WkzYnnfmQrucw/SzbYLlp7yGbbT9/lZrgvIc6HJcBx8inU
3nUHduPPwHnnHfQKf4qQ67n4/dUn/HQrDx1e/o3A6E+o0e8hbIc/xlds5mxl
L0FDajq+sJbvJPe8E3vgdINWLypxvqLCeOI6v5W1fAWXH1Haho5d5x/Qf88F
TE+4o82Uj7yGWcmPMOhoIl1DynI2V3H2xuyMD7wOjuXXs742oaTJK1k76PjO
lkWdJljyDFz3s9r65aR5Anpr+ffBc9dgyf1PRep5dhua+Vaa7fFtkNSr11E/
e0LsWaUue/HaocXSis7FL8x7KcatZ5++dkafx15O5LqOzcpzNMZrdkMw98+X
M3STGG9QcgKU5wSrNoI6A0Reuhi77vOIPDbmu5inqP1uKmtxhdtSXJ6OG8Z5
JTYkMFyv/bWYgOpH0c1JVG5lXU/fGdseY85/T7xl/me1jt5Mqp/nnOd/a2zE
+Caqftdy84S/C/1zdD3yqkl98EvT/y1t3or78EtXbojea49zPz7zK0h+/Ouc
u5Nj73Leh9LxGUb6fuC+eAT2mYXSVRvRay14nEHywX/N59GWYDl6Jt/JeXvu
PMZvUsoLru1GoPfqcMy//RHLnvwt5f2xGvv4+9KMWTrW2bkxKTYDyx7nYnrS
fTi1HsIZz+PxFrKvvkZTdV6NmldvofXEYXH74pUb8Li9ReDPXNczvwCrE2R9
BEqaNZVmzAt6voys58sIefbq3EU5D0/s3ayP0ct9G1TfvZSfwvsrFffFoP1x
6LfjHO0Dfz7jQH+uCbF5ZWaFEpsvlIuncV1kvS6/WKmlU2uFxbr5nrKm76n2
va8oa57yTiLn5Z65Sg8dcWa9yHqV88K1Rahfkc5fMYdH6oNVpiaz0xrBrONq
WPY9hupdj6Hu4cdofRdoFJ2HjWRvXvn4Gc1PvYIb6cvAvcT7+XGwG3sY/tuu
w2HcQdgT31lteK0+a2DWbSHX9k5TD5D2Jo27JAmexJi65z+iXewnDL2eg8bn
PsJx82NYhSTC4o/dsBq0k15zCZ6kZV2mnoTHwihY990E807LuJ/eczkd4/uz
yI44AfNuW2AzKZq2h47V1x/Q/mI2Ava/IMZHwWlGNJxJT7uGXkWd409g2PQA
beNfYt/bdxhAjHdLeY0mxHtL0uU/Xnz5X3N+Yfo7VI54hKC0V6iX9ArL7r9G
yIv38N71GB477sF3eybpeNL28y7CZkQEXOckolncRwy5m41+9Bon0tDW/Y/S
tm+Ee2gC2UfXaVsjYDN4D8w6hMJlWjh8WP7dlHB4r0qkz3AGtYj/FiNPwm5F
Blz3vkKvyx/R90oeGlz4hNqnXsBpQzoc5sfAevBm2nfxZN8cReVW02A9aBv/
LqwGbCXbKRbeG1PIvtgO7/X03R2+BxvS8nNSc5CBv9GXWN844S80vloAx0mJ
qPlzJKq0DqVjIkiqdVEYr+bYy8eUEeML5dc7KXxXlnycOymclxfdZ3wvR8d4
MfP2+GHZYdq2h8T5VM54psFZTXtI+ntUdQ9Q+dxn91nicwG/LrJrVBhp+uAF
G/ScL1Uaoy7cxqLbH7hOmXXlMWZee4VyVc2lx0uWxuDTKZib+qxILc9y7lmP
zPqDl5IeaKSfU6Weh8L8PSV+pix7o+uITtMKWtioBk/JPzdVNDLv8yL50kVu
mwrndTnbwvcLP6b41tk1opvEeUXDy3lymk3QsdD1Q7eE2ITmly/Md1OxN7Dq
31Cuqxrr+a1sC7Ece973k/nqFR+/XC9cXn0P0d5UGK/X9ErfMEnX0zHMYvi0
CtfPO/FcO60PXmNeTyfpeTarTua+sqo1KcR00Xev1NwpvnuN84pPn/WDb028
bMFz/1jsu37f2aTHn9Ex/UHuL3udx+3ZDIZJMZm8X07og088nj7r6gsM2BWD
DtO3IPC3ELh0HI0agb/AzOdHOLQeCv/eM9Bq/Fr02RDBe96xuXWsV+RMeh2L
C7DF+0Gx2BS9D4sbsNr4ZaQhfll3HF9Zt+ZcLlVd7l1LGr6M0O9Ox3nd0vLo
ec1eWV/0XLwXq978g2Yjw6TcwYqB4DONFW2v5N9ZaFpenbkk5tsbx+iNZyXK
dfPl6bg1KV0bjsFj6Lx/je88foRJpcZyXL4TdPa1QTwehVz7IvPutRn0nPNq
H1ulZ47mf1f881qPHLm+zknmvWNPtc5IzctzEl6v1Ner82u1njxqzx77zoU0
vY71Sl2N2v+qDZ/PXLJKbXzl1Rc1ftqFah3Ww2niObRNA5qe/wudEvPQKakA
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
wn57C6FWXqibY7+z+ATr48fmSk9JuIvAX2bwGUUmpX1l1reWOK/2tC+C89ZF
+e2FHnjWUqyL5duxedIsBlKmZhva9y21nrHKcWGraHsjxut644l97Y363op+
e6XuXcmxczRaTpqOVxe7Hjr3lDmv5SYrPnwlzs/76Cj19EoPfV1vXDH3vpNm
pwtzRDXeK3Ms2qBU1bqoVGcEav64GVXbhZEmPInm0R/RIiIbbc7noG1iLnq8
KUDrR4D34ZfwXHyOa3nPheeJUfuIK4eI6aTLV8bBfVEk57t5tzBU77kKNftu
he3EY3CaFw2zvrtgO/4k/HfdJD6GwzBsH/zWE+/XJcMwcAdxLwausyNQreV8
4vQB+G5I43lk/jvvw2HSOfiy3DQSb7Zz87HwYTbm53xAQOIH2C75iHqnc+C3
+yXsJ9yE26Lr8FidQbbEdfgSkxte/4BGya/gvfsBfNdfR6OjD1B5823Muvz6
i4w/c+8dzHZkImD7bXgTnwPOvUCTlNeok/wePqSp3ZenwXNtBhynXYfLvHvE
zvfwWPcRlis+om3me+z46yN6hOej6rjX8N31AG6hiXAJiUHgwUfw336LPmsC
2TYrUZP47kb70oX2h8uUE6Svr5ENcAa2w/cRxy+S/ZCMaj+TLUW63CHkLGr+
uQs1ft1E+nsJbIfshMfSaLgtOEO8j4Xd2N0wjNpH7xPBew07TzkCzw3X4H8R
6PDqMzreJQ1/Jhut6Dttdr4AjSJewbLfAXwTMBwlifF8To2NMqtEyPVS/Ko8
Bm3EeJHzqh+qp+qv58e0S0/NX0+LzUmu4NKLr4rE/LL23VHKqhOvV5+X9pj3
02aMZ37FsZEpCHv8D4IXbdb55huPnIlZ6e+4fglJesD1TUC/kWg5aSFWsR6f
Dz7xvrc/rjvI2a+8rrKjB2amveY98/Qx+XR1LlfYgw9oPW0zn5X7tUcvfOXe
S/oMTkpf6qLPOz3rjWdPabF8vS/fKHZt7NM3aL5GznrGfK6bjfz/CufVv0s+
es554f+a6t5L8C3o4utCHobCWoHvuvsiw9W+AkZsVnsIaj0TFfZzxvPr2A9S
vpRwbdZyHopmeCHO23c0eo6yLzoUzXnS8CWrCpznvW5bqHF5lfOKpq9mxPvq
Wm0di+eXMhP8+Up+nlxfp5tfyzV9c+l+9aZSP/xv6nK9a1LGB1U9uqPpiKUY
cSIZoVnv6VjO5jly0y9lcS3OmM1t1ChpvuJEtefzDd4fki+yCZidO5vn9r9H
KOki9toeoXvh1HYoSldrzOMWJuX9pLo3xTcv59Xz+TTMb894T5wvyzV+c72O
N2J8GaWHvVxXx+LrJuVrczvGo+NYzLz6iJ9nVT168BwDFr9QeF9WN29e3ydH
i9Mb5+BJ8axilRrxnjhs/pRHz6m8Xp79XpGOnQrK8aMct6KWV31tii9cidHr
Ga/G5h21/rcq443y67VeeEKdkXy/Itc1cl6es/aYUotfKNYvz6tXNL0y+6ac
vdF5p/PHCb1O1B5abTjnS9cI4tcHs+DFqNFjBWn7xaiz9QZax+Sg1Zm36Jme
izYX3iHo5FM0OZoJ9zlnSYtfQv0jt+GzLhFO0w7DZfoxWPQMg8UPy2A7bBeq
By9Ezd6rUfPn1bAbc4Dn6lkP3QenOZE85u48/SS+bzUfrjMjYDdsL+xJ17qE
nIbngihi3Q3U3pFBNsNF2I44znvLehOfWe/WOqRNDduzselmNo7n5aDJk49o
mfoBPrs+wmHaW7iHPYH3hkfwWnkTTY7fR/ukj2h25gUanX2FoLMvUXffXfr/
6WQzZOCbpZcRSzw3/nmf+wkubH7uNuI7cbLe/rv0+pf0+ldoFfMWbWJfI4B0
sve6THiteQzn2c/hOP89mkZ9RMOUD/jj1UdcZXr+8Ac47MmB/96HcF92lT4D
/c+pZ2E/hmydTdfpM96E/7qr8AiNgdPU46jVczXcZtH+GHmA9s0CXsvgRo85
zDgNq0G7yIY5gpp9WH/AtajebSks+26CzcBtqBQwGs70eo8l0bAb//8YO+/4
nM7//+fTogj6aT9tFbFH9hASmbKn2ILYdKnqbrW0qqpVatSm9t57702MSIiE
IEZIgthZRtXr976uc67rXOfk1u/vj+txzn3ufSfnPN+v91xNdkQGWm65Avcx
e9BixknEHryFlhvykXi2FB1TSxC2tgDxJ5/Bc8wRvNFyOP0PtOL/AxV5LUZr
Uw22mgPF/dK6v75s37uynK/iYo7Hcw1Py95V26/qTpz36EEc7UXXuSg07T0S
4y/d4XxnOch8Ng1xdyhdG6awmR9d3jfXxtd3Qpvhk/BD8mWMufoUs59oM2t+
OpWHD5bt5rPq1Me/0cgVIzLvYWzWA17HZ6tn+sjTN3he0tu+76FC/fZ4p3kf
vNG0l/75k+TsCqPOtbPCeAvn9ViakZevanwr31/Gf8tirOecNFhfqXFHQ9cL
/d6ks7QHjB7F6msp76PGLHVGSptE1d6NLUv2CxWMf5lm17RSJVG7ZOodTO/n
RP8TpOWZz148x+gDZnwue8lzC/sdLfrempvXhK539JyXcV5bYbzXPeuJznrj
ldPj9eUUXW/46y3anTFecL6GouNrRsr7yqm9dIjxPE6vxvFrarPfeB+ack15
vRo75tnpe7T+eS4+XrafOH2R55FPuPIQE68V4s/LDzE++z6dM9pi/fY402mN
u3iP63dmK3SbvBbNe/yE/zq10+reGd/fCNRy6GtrufTcL1/LyLdTZ8pX5D3u
NNZrW1Xbxxr8V3vc1tb8/8w/z35TOzsPvPJmKPrN2YYZ954juP9ovf6upaY5
65XV9BWFnme5ZHUT8B9Wm/hGKI+7v/IuvR+ruWuo9cTpO3c7vt5yin47Xx53
ZIyvavJv6/+zjYQtaf0/NvLw7P+V80YenuwHYuqBZ3Be0zlKfF5cC/X6YsF6
MfvGXonTGzl5XRRNr7+/qXdOorxWiNpXg/PGLGmm4dgq924wqnn3Q+2kGXg7
8jd4/XEAcUeK0PbgXSRlkP7bdgvha7IRufUK4g7eJA2ejMC154jF+1C7+zQ0
/mo5qsf+gvp9ieuDVqJ2lwn8eM1Of6LhZ0vh/iebNbOP+/lr9/gLrj9thtOg
tfAklr0T8RvvD9N8xnHOOY/RTN/ugNdY1jf3FK/Z91+XD78NeQjcXADXlFIs
IBv36cMSHCgmWyS3GI3n3UfQhlsIO3Qf4XsfIXhTPjpmPELncyVouS4HgWuu
IWDlRdLzZxBCej56Zy4aLMlC/PrsMpwfcfoeqpPmjtp2A4Fs9t7MNASvuwr/
lVcQe+AOul8rRVzyHQSsuonww4UI3V+AZn8VoPG+QnzxdzFyCkqQT5+ta1YJ
3LY/gt8a+tzbb8N38VV4T0uD158p3G/v9ssOYu1+NJuSDE/6barHjOY2j+uP
m+D4zWo6tp/bXi6/7oA78d5x6GbU6jYFtXvS79p+PBp8sgCNv1yG6pE/0289
GY6D16Fu39nwW36OfrOTCNlwic+lD151AaFrr6P1kUfoQqyP3n2ffoNc1Omz
FG/4fU7XtSCZryF7TOm5XyKniV1jjVk16jy6zjL3zuh7lyQZX1XNvWP+evee
us9e57y+KjbuildqtydNfwBjMm/q82k0zjM//q+k2cdd/xvNe5t71rNV8a13
0SAsnjRDTzQMb4Vq9ZqUeUxNn5b4+UwBXSNLtRw/G/l3P+w/j6l5xYgdOhd2
1SLwpncfvE2cf92rN+z599DOTxmfk/l4Sp9Kkx9f1/Qmxlty9HXm26v+RVss
tvbiYb5Ffo7repXXpHXRGd9RzhmS9evWnPcy9oQyB9MW39X+/jZ87zJfWcQY
1Gsn7xWuzvYV97HnMbupp6bf5f+XwnJpQ3RUnvsyfc/i/O2N2zJu345vy/rt
9Ri74HytWM768tXDYa6TV+Luahxe1/TlFE2vanuD9VEWG4Bp+gRD00vO0xI2
A3GW1bVxJjO//pst8ZZnFzjFf47AD0eh1dDZ6DhqMbr+uRLdJq3hq/O4FUgY
Nhuhn44jm3gIagf14/Nh7Mo303wFlX355+BMFmxns2UF4015d8Zs+YrKvFnO
eZEvb9L3au/6WP44Lc6vxeFZzxs2P5h9juZdf8D4qw/Rd+YWnp9n95+mumZX
YvR0m2nTcvQb2ZWjz185gLjdETX930MN/36owvrXVwnitQEOLT8i2+YBaod9
zGfLcx2v58cYNZoWX5ScDdNJ930Z1zajF54ej3eykW/votTPuSj9caSvXszw
0OuLhNaXfk6zphec55pe9M7R/fcy58+W/17a30b8TdZDNzTm/VTU/SLMBiv/
bgjejhgCh8TJcOg6DRFbrqNTxmPE77yN6M15XB8HLT2LsDVZCFmZQbp+J7yn
HCIu70bD/vM452snTSLerCHOT0StDuPp2Eg4D9tMuvQgarYbi3dbjUb1VqPQ
8OOFvDeO49er4URM852biqbjD6LRx4tQt9cs1Ou3EA3eXwbnIXtIm2cQI6/A
b+dDBF15jK9vl+B8YSme3S3B/XslGP2AWH/uIYKPPULI/hLicSG8ZuQhIeUB
ul0pQcSOfAQsu8hj/u4j9/NZORE7bqAlcb/qjAwsOH1bMj7r0TO8M+UM/FZc
QGzyffgvOkff7yACl19A4IrLaHvyHpKIFSE7bqPZrJtoubMUoUeLEXzyAbrf
KMSKohK80D/XsvulSMgtQfDZx/BZRrbRwgvw+OMkGn++geyhRfQd56FOz1lo
8sUKHrvwJt43+ngJz8FnMYw63afj3db0e8X+hgYDF8FzajLZSFPpNxyFd+l3
bfT5UjT6YintjyDbbBgafMzyGE/Dc9x+sh9209/vKq/TD159keyzPISvv4n4
/XfR4dI/8Bx9AG/H/MFzxiuw3LsGhu0s+6+JeceOSpxUZbypxkTNu+tu4nxV
pt3ddMa7az77qm49FU3PfON9iK1RcOsyHBPYjLID5yXnmc7+fi+rs7uByTeB
juPmw96hQRmW21zlKyJowGCMzi7B+IuPeC89W3V0zHcwJquA5/+x86lc3fbc
z/Bfr16oyv32Gue13ANhayea+a4vrf6uk4X1iRbG22K/JQ5ti8umPL5Oev5a
V9rvqnDfGkvXeanO225svm1fht2J5v0y/f2tej3R9DypOWSPBZXx2uO4fePc
g1/X+Odx6mReMt/T6i+wxXkL48WxJvqxxmXr52XevOA64zw7Vj3chv/dmncf
YbBdZb2i8zXOR3HOS10v/Pe8xq6V4buvqT22vG4TlNdvM/az/f/8L4TX0DFd
rNXVefCadbuKzbXjbLGa9VfE/W7a/WQrlNNn5VaopfJc5byu3Wspq0yOvarZ
BefV+TUxhravo8X0tfmz8Rrra2usr0DsZ76KN1068fq7ken5aBD6EY/lv0K/
O5/L1EDr88Li+HZVA8m2/wUD1xzlfY9/S72OESnXeA4Dmynv0fob9FuwG+1H
LYXdq834bHl71kvRFH+3nj8q8y3/vyIe72TUz6t1dfZi9ozMxetq5N2pMXnZ
E6ybzm8lF8/F6r/vJnP3VU0vcwCU/LyynFdiZIqml3MvhHZroPlHmKYv/04w
v045JP6JtyJGoPnkw+h6DWiz/zY6n3qA9sfuIGbjFQTMOongZekI33ARIWuz
0GLJGdRKHI93oofDodtkOA9djwYfzkWdzpPg/MMG+K3KgtOQtXAkze86fAua
fL2CWLYVYbvz4TFqN4/1Mz3r0Gky6r83D40GLkPjz1aj8RfraLsJDQdsh8tP
J+D861247XiMnx48xuOHj1FEHL39qBRTiKuB+4rhsaQIPksL4b3wIcL3PULH
zEIkZTxA7MECBC44j5bLLyJ08zUEEd9D2cy8uemoP+446g7ZhdIirfd9+4Xp
eH3EEYSuuogwemwg8T5s41UEzj+HlmuuoVP6fdLERWh16hFCdz6i93qEZosK
4bKqCD1Iv+8oYYwvBejzHSp8jFA65jLlMVxHXKbfYg8a9N9Kmn0TsX4NGn26
Ao0GLEXtxKmky1eh+cwTcCTmB669hIAVWdwWch66ka8G/efDi/4evovO0v4C
1CI97zh4LRp9uRTV437Fm0GDUfeDWQjaeBkh6y6SDXMOLWaSpl+SidjtN9CB
bJ72ZLe0PV2MuOQHqNNrHvG1N8q9E6T5dHTOV9S1vOhXLmqa7GX8VWW87bi8
9Ne7Cdb3MJa7xvhq7r14bF5jPe179MJrTZimb4cBKw5z1rM4PZ9Dd/C8Pm82
Ez8fZrW+L/DTiRy0Gj4JtQMjeZ2cle9VHOrBp8+n+GzHaUwmM25kau5LdLz2
+iyWOf7SXbh2HkrXljBU8+gla/80n303XkegztyTsySdrNtEM+cl7zuZ9y21
eGbeW5hmU9cnaox36qbpD5NN0KnMtc3Q62ZOm2dliBpdkV9gZryhkYzro7jm
GP2PE6U2F7WHgvnycU20/rb2Lj0lw/lj9d+P92WQrLfBeEeV8WqcXvj3ja3m
07fFeS0PXuN6pO6zt9TDq7XzNQz/u9T0NfVVI8LE+fI1DTtA8FvqecnwBJ6X
V170yZWcj5I2gtT5tSL1rWELaJ9Hzy14R4sxlFceZ16C4VbOGzyXs+QVzstZ
sw5CswsdH6WwXWd+HYPx1l44/DF6DR2vc2cMf80HXcatwLSCZ0j8YxnPRWTa
vTyrO7RzR92WH/LaA9Znf8CyA/B7/3c0iBqIBpEDyXYfi48W7cGE60WYWwLU
CvqQa/tKgvEyV9VyTpjOJ6tdq8+FFYw3zZ43L6OvjarllRi9q/DZK3l2jO9C
Awlt7yrq60W/HN1n6Gz0w+dz8pyNfTHrxjSjXr0uiF7Vsi+wlocnfPe8v2GN
MLwd/j0xdyLq9pmN2H030e7oXXQ/fheJKffQ9sQdtDqYi/BVmYjecgltUh/B
b0k66fV9cP5+DWnzlcTsPZznzWedgBfL2RtDt3/eRHxbgibEevffd8N/2Tk+
s7b59GRi3jI6vhL1e88kti1C/Q8XkZ1AWrX/SjT5fCO91jGyJW4gcFMpvFaU
IvJ0CdJLHuMfYunNJ4/RNq8EziuK4LehCIFbikivF6HT+WJ0OP4QPYn18Tvy
iNPnEUTsjtiVSzZKFoKXEvc3XYPv9FOwe28d5qTexAm6zpf7bCvPD2i5/gqC
Fpzluj+E8X4xPX7JJXRJu4+uxPgOqYVoc6oIAesLEbC1CN6Li+ByuBg//12K
h2SHvKDPN+HWY9TZUgy/5U8QvP0BfGZnwXHQHjT+ZA0afrgM9T9YTMxejIb9
F9Lt+Wj0yRK4/7INwZuu8N/HZ3YqnH/ciEafLabfbin9bjvh8QfzbxyD+8id
cP1lKz/W+PMlfH6Qx6RDCKfv14rssdAVmYjaegWtkm/T7btIYnba3ny0Js77
zkpHteafo9zbAdoMKZ6nodnQ2lw6Nd9e0YAq451Uxqv9bY2cO3tXg/NVJOt7
cq5XYxpeZ35Vt17aMa/esKuegHf8PsLItOt81hTPu9fnzmoa/xyGEK8Zt1l/
+t8vFmPg+sPoPm0FOo6dg8Tx8/Hh8t0YcvQKJuS+wLisB/hRr0m2yXg9l2nW
vedImryB9FFLbrcb8YZuhk3uYvjrDNvamo/IluV3MsXuLf78Mjn6Nlhs6q3b
0eA799N3Upiv5t0Z/kl7USdhsR+097PGF8z+B8OXKWyCRD5PTsQN7B0T5dbQ
8GpfMYutIx9D7+/Sg1/7Kjt1NPlDKjslmnR92Vw8M+NF3oi2FLYLXwB/fPt/
8duLXrfRBvOrG/l25VUdX8PCeWVuXVn/fYSRn2e5rzybZUuavjzT9DUjuZ7X
VpRuBwj7IFpnvS1+RxtbYQ842GC8g4XzDlYffTTPt6tQW+F6bZXzSn9604wa
EaOPU1hunj1bUXJeqaOr04rn1dm9Fcb9+E1iP+N2Nuud0ShiAO+3w/oCzbz/
D77YcBzvNO2m9wBuBLsqgWQPBGr7drX4HKJPVh3GmPO34dJuEJ9LV0mtB1VZ
38hiM0vu2+C8qVeOUk/rbOh4U4xe0fNVlbx6e0sfUKbpq0qfp+iVJ/L39Hw8
V3NNvmS9nGMv+t6La4qw4TuYOG/Msmyj5zS2MuL0pOlf9+6HOklTUT1+FHwn
H0Q86eF2G7KRtCcfsZuuImQD08PE6eVnSPeehQ/Lsx9HupyYXrPNSDT8ZAHt
H0Djr5ejRsLvxO3Z9HqT0OCjuXD8bhWch6yDJ3Gq4Yfz4PPXcQRvvILGxPda
7f5Eg/fmwuWHzXD/dQ/cR+yD95Q0+C26TPr2Crz/ugWvJaXoWfAEfzx9gq2P
nmAD6fDEa6UIOlqCsAPFCCWu9swsxsc3StDrZBE+OleExN35iFp7BZGk41sS
60PXX0XYOtK9LF7/12nSySfRYsYpNP+dbJWJJxG48BzC1mYjlFb4tuuIYHkJ
q7MRu/oy3jv9EO9nFKL36SK8l12MVvSeYbvofWkbTPbHl3dKceDRY8wnLf/F
kycIP/EYXjMewnfhNbIfrsB33gV4jj5CPN8Dt19YDuJq1GV1Ce0m0PE9CNt7
G40HLuE9CbzG70eTb1fxukWHTuNQj37H2t2Z3/53Hhtx/W07anUcS5xfDM8J
++H26zYELjlDWj4D/ovSyFa5iJD1lxG/KQdddt+kv911hG7NRT2y39g5V/7d
ljrjE7hfR3Je5OHJHDyrllf+39W4vGt3RcvrvLfoeK7lPQzOVyPGM21fTdf0
VT1785y8xgnf8RqZsRcKtNnjMpdY4z3nNJtDfuQS/si8gz+vlPL+dhOuPcEY
YjuL54vcOjWf3pp3x3KbWH795xtOcLv8lXcTtLxYl26K3SLscSU/xkX0ptS4
XkUwXq97Nfiuz5m0wbsycXyRt1eG7wr7GcuduuqcVY43Fn8j3cfoaH6eoaM7
yRwec46g+jnMOYWVTYzWtUQT6/fqXIbrlUVvBUf1uqn7Otjv49pTz23qpPhK
E+Wyt+G/lzzXaz80f0FH05K5945mm+BfOc/q5tl8OsF5UyxeZXyUoevfteTT
19Rr6SXbI6Sv3tDx5vy88kzT14rRWW/od/lYXecbul7E8XW+O6jMj1bYb+G8
qtVt+Oe1WvkYzb+v+uL1frVGLD5G0fFWn308Z/hrvDZeZ73eC4dreb7VaunY
YuxhW7vyzbm2j/xqEr7dlY5+c7dh2s3HCPyY9dh34L2C3RKH4P0Fu/DlphN0
rh7ns+i8e/zMdT9jfutfF2Px34BjwtfEej/t/9baa7pMzkunsppe7ZHj2Nnk
r6/ibMQpDT+6tVdOkqHReX/v7mbWO2urqrhOunQz1dzz+3m/UGOWrajvMebb
dZW+w7Ka3uijJWdW6Zpe5D+w3oQVakXwYzVbj4RDe2ILaeyIrVfReV8ehqXc
QffdufAnPgYtPo34I/nExBTuR25KnHcZthYeY3eiGbG70acL8b/A71Grw1g0
nXIY3hMOwu2nTaj/3mzizF/E8nWoHj4CjT9bBr+Fp+EzLRlef5D2/20Xmk85
RszbD1c2++Xn3XD8agcafbwb/stvoHX2cySW/I0uj59gROkT9CNNH0GMjz5U
gg9zSvHJuRL8ercUw26WYlBGMb4//QCD0knXr89G6yXnkHjoFloyPb/iAuJ3
5yFgbjrCyXZp9NNOOI4/ijDGdGJj9OarvK4vdss1JG7PQfvFmRhI2vibk3cx
OOMRBl0oxa8FJfj2agk+uVyCpIxS+O8oQfjZUvxW8gSfkp6P+fsZut56johj
JaS/T5ENsx0uPxLfh+/mjG864TCaT0qG+7Bt9J2Pwn/JWR6/eCvkZ9L48+lx
W+DQeSLZAsvJLtiK5rNOwvmH9fif/3eoHjscriN3oPmcU3AaupYYv4Xre6fv
1iD6QC5C1p1H4NJzaLnuGj4/chsf78tHXPJDNJtygv4PuuNV0vIVFftO43wb
paZOYbzkvO5XlYzvUjYurzKe9cTRc++Elq8mtbyu4cVy0/LxWEy8Ksu/fyMG
b/t9yG38KTmPeP8LXges1xGrsXXbS+H7obL3s3g8q1OaTv8nvWZuwys1EmD3
Thx9th76uWfY28b5ppxzLspW1NRL1qtxNDMLTbeFhm1iZr68zpj6bTO2J+l8
t8a6O5rtAX596qrbA0qenGUZn8XiZ7Dqb+kn7Cy/g9A+qr9CzP6Qulw8VvJd
MLyjPuOgu8ZxZ9VPmmjE9J20Xg2aXdBRu636P5yMuIC81qkxfYuP/6WcZ3X0
NS2xeSvrVd6/G6XZBArv1f53XJeL2vqaZr6b8/BZnJ7sbYd4fT+K598xVpeX
rBea3uB3eZXzgusq7y3sV/3zZflu1fQxekxeaPIYQ9ObmB6r9czTb1fU9bvU
7Jzlet87oemV++SMurpazPDVmtGc53VCPuQzqaKHzKTbNUi7B6Dz+FWYfKMY
E68+wu/p+Rh1Np/2H2LG7SfoMXUD7F714c99f9Ee3huA+UhefTdWn8lgYX0j
5f9C1fSOFs6LebSOWu6dMZ9LxOyE797IlzfN4hScZ35NF0PX27sYnK/q2t2k
60Vs317XFmqfvCqK/174EyubNH0nRdMbfbFNfXN4vaLGeRZTKfd2EP4XMBD1
us/AOzGj0HTyEXQ59RCTU2/j06O3EUxaOGx5BqI3XYT/ghS0mJ1MjN8A39nH
0WJ+CprNZrXhZCP0moZmxG+26veejhrxI/FW8FC4DN0Ij1E70eij+WhKuj9o
7UV4TzyEoDUXOevrdJtJWn8xGg9Yzn3cTQZtRYtFGXw2TCwxM2hvCeIuleL7
50/xcdETxB0qRcKaEnyaXoppDx5jF9kA8+48wegLRRh+7C5+Sb2LLw/kIWkn
6dpDN4nll9BsUgqit+YgYsMV0r8X6DukImjZOdLwlxC78wbZL5n8Me3230R7
4vx7u3IwjF5n2LE7GEGsn5D3BGvuP8aaoscYlkes2FNKr1uChIzH+PHpE/R/
9hQ++4tI65cghj5z1NG7pM+PofGn69H445VoNGAZ6vdbQL/RXPjMOAlf4nWL
uanwW5wOV7KHGnw4Dy4/bUTdHtPxdtgw1GozmttJzWelEP83o3rMcDT+djla
rMik55yGK2l5xyFr4DPzOEJWZyJy4yUELcxA1PY8jE67h0Ep9xC0PZ/n/mla
PkT7e+vzIiqKPHvBeVGPpVw7pQ4zzaITMSjx/6n0t3XrrnBe+Ot7aTzn+731
ra7nRU6eV29ifR/Y/S8Olek8+GDhHky9UUga/Srn88u5bovz5vuEn37cxTu8
t23sD3Ng92YM/kM6/nWd8SLOVlXk06g1rQrvpYYXut7F6Kdh9NGx+PZV1jsp
jHWysl5nOdcTSXq+ndD54npkzZnraH4M4zx9dn49UOqGJKOt72u1N5p0Vlit
6HXZm0uJYUrGWx7rqM/1VOIZ/HEuPfn1Uj5HahP9ewmfPa0q0gegcF3lu6PS
a9jEeTU+/zLOh+v+9FhD21dX5tBa8u+kz17X8nwp/nzOX31GnWC74Y+PMnz6
Qt8zpju0MuwAhc/ldaaXr6XE7k26Xql3d7BxXHBe5fpLOR9ljsGL3vYmzR5j
jsGbYvPieUoPe9kHJ77sDFppC+i188yP/2oztOj7K8/LsXs9iGt11ttu1oMX
3K/PevcZ8bZzGEbHZt79G9E/zOKx+QoObcgeKELMELr9agtlJsNLNL3U8x3N
55L03evnqpN6Tiv+epmnox9zVnrhSXYrMz304/YyF6+7qabe0BRJhh9RmWcn
59Sr/lT9PJbxuSaiT4beL9vEeU3TVxSavkYYv/47tB2NOomTUPvDBWi/7wYW
XysmTV+AuHWX0Iput1yUioakx5tO2ofQjVnwX5zGed98ykGyBS4SrzbC8ZsV
qP/BbLwdOAT1e82A8zerOMu8xu1D07F70WziQbj+sAHuI3YQg+bAlzRrk89X
0mPnwemLdXAdTvqeOBi5+w6C19xExK578Bqbi+iUEnzz7Bk+I+3c7uBjJG19
jJ+zn2D5oyfIKH6C3YVPMT+3BFMzyD45/xC/HruFT0iPh628iPak1SPIVgmc
l0kszETIiixEkbaPYHH4eekI4Xr/IlqRro9bnoXEHTn4IfkW/jhVgGlkO8zO
eoSldx8j+eETHCp8gkm0/9mxx/T4UrQ/8xg//PME7z34G15zC+C/8BYidhcg
aAV99p15cGfzfX7YRjbOMtTrMRdeo/fC8/ddaEzf2X3Edm4D+c4+yf32rN+g
1/gDqN9nJmq2GoWabf5A4y+XosH7s+E97Sj8lp6F24jN8JpIttIaNn/gLJxI
77v+uBkR2y4jdtNldN2dj+np9zHi+t9wnZGKN4N/IMaH6rMl4w0tL+vplLp5
md+k6yjZ39bGLDrFNyU5L+ro3HtK7V5V1/KC81UVXc/u01jfm/vwX2/aD3a1
2sKOGBz61TT8kXkTk0nb/3wsW/HHW9huQ7ur14bf0q5jyvVCfL09DY5tB5Ne
CEWF+h2I8fS5pL/eRs8LU66NznkX0cdC1fNqb1ztGiG1gKnm3jIPxxLD1/iu
zbqWTFe1hmoLKP54kw3g2EmvDeqm2wpGLry5l5/V5yC2XRTGmz+/UWfcRTkm
ZmtZvquzqD3WtTzTLK69dI4nmj6z/B/j20Tz1pTfaM1tsOh3GaMXOfcvic/z
2HwM99ub6unUObRleuCp3I+y3Gfk0fEc+lqR0idfXsTeayh+e6bjmZ6vFaP1
3aklWK6zXjxP8cPLx9Q097Uxxesl+xXWyxVjm/G6Hq8gffIxZTmv6HnJeZF7
z7fKnBqm5eu14rXvxsyaeDmPltsBek/7CnSM1dixHPq4H5mWfwcuHQdzHc94
/sMB23E3lrPPYvO1Wn7MewizebSsH9B/3qbvXbe1efaSKTevg8F6q91ssWX5
eSB89E7qjC6V82rtu6HdtWuiWdOLY4L/VUVNvWl2rdmXqF5XOOfl+dhF1qwa
vnu9d4TIu5f1dQm6rovXNX08Xn0rAG/4fEg6fBbebj0WQXNPYtrt55iaVoDP
juSThr6J5pOOEqM3kV4/gIClpxCwOAUha0kTb74Crz/3otHABWg8cBG8J+yD
18ht8P5zH8K3XkOz8ft5XVjjgYvh9vMWVI8fzf3WTt+tQ8P+i9Bixgni3Ea4
/LIDXmMOEH9z4Tf7HMI25RIvrxLnsxB6sASDip7juydP0enQY3TfUoK5+cR3
0tE5xN6ztLbeKsWaK0VYca0Ic7IfYVDaXXRalIFW886i7d48xJFuj9x4FeHr
shG44CzPuwtffwWx26+Tjs9HPHE+csIJfLL7OsZkPcTCSw+xMqcYW8h+2E1s
z6b3SCGbYj2957CUUiSsLUEX4vzwF0/R5/o/aLboNjx+P42oPbfhPzcLQUsv
IYDew23kHjj/sBke9P1aTD+BBv3mk71zmLT+UtR/fy5cftyIGsT0Bu/NQfAq
sp8WneY2kdeYPVzj1+46ifcg9JmbgtAtVxG4PB0By9LgO/84vd8OOH69Af5r
LyLpxD38fLwAsy4W4tMzhaj56WqwWaTMX8PtatF7SuTgmfrdKjNLxPVX+OxN
9fLd5Bymqgrj7YWWl33vhI5XtLzQ8+4a1/mi21X4bW0x1ldo3IXs+0jUi/ka
febswKj0PEwi3rP+tD8fu6yzvax2Z4vNA/nlxFWMu1CAydcfYfiJK2T/z0a5
eu35a7LP/7p7d1Sjz1vNGpc39bbqCrP/3ojVC9ZXUfphmvW86tNXtoKJKrf4
c5I0LvM4+0sY72Q5buK/mZ3afUl8DjWPNZpYbI0pdOHL0OtdFE2v9P50Uq4z
jnpekJzv1VmyurKJ83q9ITHentseSjxB1DBJzgv9r+6LeIdVywsbR4nLl+md
Y4vz4YbPvkY0nykntXyZ+nmlZq6mmflGnp3G+AoiZ57zWcmvF6tGlOLDZ2yP
5awXeXvlFLYbS+e2g3GsjHZ3UGLzDlEv57xDjJnxIg6v97zT5s+qXI+28F3Z
V/LteB8dXbe/JmfRxmn79RI47zUNr+h6nfN270TQ9SMRg3aeRoPIAbzOruf0
jXSeF/LcW/P5bZzjTONPpetx6+Hz+Qw/j8QftZm0fqQR3opU5imrml6tWVFy
Q6S9LGrotf8/jatW1ls1vbnHvcFzwfnuhqYXOcouKueVeV+mvH3Bff1a46Ro
eplzb2gElfOVxKxaMae2gZj3G89nDDLffYUaofxvWKv9WOLKFD7vdGDaPeLm
I6QX/42++/LR5LeD8GP9WNZmwJs0ffPph4hJJxGx/TLxKZ20eTIClmfCZzqL
ve+Cx0gWhz6Eeqx/TpsxdGw3XL5fC4fOk3kNOWM96wnn8xfrtXcFLkM2I2j+
Ge5D95t9BmGrrxHHDtHrZvLc+m/u/4Oh/zxDp52P8eGhEqwrfYrUx0/xqOgp
8kto/8FT7CfGb7z0AJsKHmPW9WJ8l0qsJ50buyob7Y/dRZsTdxF9kDhM79Fy
9SXEJd9F+9T7aL0jF61I+ycR4/8gxq++TTzPKcLWiw+QUkB2xCN6H3qPS/Re
+58/w4ScUnQgzndLfYKf8RRJmUDzhblwH0m/yV9nEbktl1h9lOyIq/Bksfk/
DyF0xw00+WwlHEnLs9rC2l2noXbSNNrfDcdvVuKdqF/gRlxvPu2I1sN23D7e
Z6DFgjS0mHeCGJ+NoNUZdOwYPMftIv1/GIGrz9L+IXhMP4M5OSU4faeUzpXH
SNh4A681/wKvVGvOe1PyudBk01WSsfmXcF7MnjXNpBMzGbsaeSfC/yTi8m5i
Xo3hs69qZbyHxni2X4VzXmN7FXdjn/nvq3n11fz41VvxfPwGrQahzW9L8Nm6
Y7yWltXDTbhyH39m35OL1eVNuHwfY8nWZ3NpPlxCNuY30/BOQH8eD3i1Xket
dk73nVWT36G7PO+MvhaiX7+q55VeFib2q31xLX3zTP10FN4LfokaWmGjO1m4
7mTR7Faul8kTNvvQtXwiPUao2hnSx9BF8lwyXfQGU/qCifwDeczRyFUyzfxQ
l55vx7+ja2+d252MnDtTfoNhQ5h+I7m1+O/lvAWrv16pn38Z5zmfY81sV1hf
3jSL1kYdvSmPXue8sgTf5baWwXvVD1/ewcjHK/8SzhusV/z0DlbOq6y3+O9F
vp3YF7yWfvgoyfQK+jLp+Dr6XDoRn5e2QZySZxenx+UVzou8e4XrWr9bYr8+
p87uvyGoE9ofX21OQVX6u9m9GYbP1x/DqIyb/5KDo3Gf9bvtN3cH7F71xbst
+mHk6Vw4tx0Eu2otDc4r/aFNml7Y1i4GN40YkuKzdzT4zufNyLm0Ri6evUXP
G5pei8MbsU2ld5h6nbH0vtfO1SSjJ4/QFcL2KFPLY9b0lWxper2GvlI9wfoY
0vT+eCvkKzTsNxc1Eqeg2awTmJ6vzW7/agdp9rUXSJ9fQstl6YjYdIF4fhDN
J+9HOO1H77mOqF05XGt6jdvL88qaTTrAWcV8BJ6/bCfdfgyNSLPW7zUTNdv+
yeezBizLRP2PFsHj521om/KAXjuT+7nD1l6G76TjcBu6Cy3mnoXP8mJ8Tpr5
u2fP0OvwU3x3rgQb7z5B3rO/UVT8FAXFz5BL9kj67VJsI+23684TrMstxdDs
YvQ8/wTtjz9A+7T7iD90C34HiuG7MR8+G26i5f57xHli/XGyB1JL0PMcsw9K
sJeevzm3GAeuFyLn0TNcp/d4SJwvoJVe8gzT8krxwdFSJB17gsHE/fYHXsB3
SS68/yRGf7sd4fT5A+anw3PUfnrP2whZlkH6fQVchm4mZqeh0ecr4NBhEup0
nQrPX7fBl80Ien8+Gn+2HL4zj5NGX8FnA/rMSUHIpksI23YFkTuvIXDpaXiO
2YmAxWkIXX8BwavPIYJ+e495Z5F5swi3S/9G0tnHcP9hDeyq+KN89Zb0943V
/sac8wnmHnhido1gvGMnJbdK8UvLubNG72ajx63S904wXo/LV9X1ezW57c3z
7rRc+z4a23Vfvsr6qh6M9314b3w7ljP3ZgwqkUatH/cNggZORMyPc9H61yVo
9/tybgO0of3I72bCu/dI1AoZiFfrtuc97l4hvv/X+z3t/eQsnR4a6926Gbkx
Ns5Dsx9fPfeMc7AqWy6WvtQiB79MD71Eg2fSR99Z8Z8YmsLEfScLxyXvVbbb
2hd/Qz2fgm0dhb4X1zNdt4vlJHiv8N1Z9AXrrFznRG6QYH5ny2N0Le/SS8tB
dk5U7ALFz+GsMt6wk6qYfPlKrN7JkntnI//upZyvHspn1jA9X/5dc28c2Q/3
3ZdwXYnTm+vmrHXwKtejZQ2cSd+Tjq/gQNqqdoKM0Zti8grny9eKtqHhrcsa
u1c5Hy171mv9a1QfvRKDfwnnJdelv97gvJFrF6fXzuuMF3X0Qudz3rfGa/Vb
6357st9fb4n6kQPxzbZU2DdqQ/o+kufWs7y7/4vzYy/c4bn4dq/64e3mvXl+
rVPbb+l8D1Fm0Vrz7dU6IhH7MvxfRmxNOw+qOCmcN/nvrZxXYvCuCtP1a4q9
nstkur64dpd5v7JPrtrvXme9vZyvYWh7yXqlD5fxXfVcPK7p2yiaPsGk6Vl9
dVX3bmjQaxZqJ07GfweswpdnHyKXNOzUy4/w/oVCxO7JRfi68wgmzgTMOYnm
xPLARac4731I30ftvoagpWfgMyOZ+54bf7UeTYbsQsAC0uR/nUL9vgvR4IN5
nP9Nx++nx+zXesWQZg1emoGIdRcRspS09qJMYtU2eP60m+yDNOJ8Cfqfe44v
Hz/DgGvP8OWRQmwmTV2I53hSSowvfY70+09wPLcIe/KKsfJ6EcadfYCvk2+j
5+li0tsliNmVh/iDN9Hm4lNi403EHL2HhNOFiN5+A4mnWF//x+hx7B793xRg
TnYhtuQT528U4szNEpwt/JsY/wxF9P7X/v4bY44V8jzAfjlP8cndZ2i97R/4
Lb6Bpr8fgNvgrWg26gDCV19C6IpzCFt1Hi1XnYP70E1w+mYd/FgPO9LzTt+v
Rd0+c+Dy/Wb6zc6TLj+OBl9shMuPW3h+XbNJhxBGGj5s+xV4jCI7ac4xtJh1
DD7TjsJ/bgr97sT6DdnokvYAX5A9c/RWCfaVPIff3kew9x4Au0ru8m8rtTzn
vMi/s2p5tb9Jovn6q/R0MObO9pC5d/bSX99T98n3NGLxis9e1NJJngvWC94r
nJf3eTL935v31bGrSdeE/8Vq6+14Wq207Vu03tSPO7TlNoHaZ1er6ddr+10F
77tJn4TgvZy3Z8p/VWP1BvOr6rZPVWF3i1kUqq9N1aj8dxS9Lq15bmpMWuQD
mbWt4evuLBktjzsasyxljryuv42/Y3ethl348p01e8Po8Sn89GbNLliv+nUq
mziv8bqysvhn5vnHvSXbjfw83XZw7mLmvJPCfxfFd2/Jyats9d2/pCduWc6H
6fV0zGcfZjDeoultzp8v47NXet6qnFfj8jVFzD3a4HwNrRee1ms+gbZGjV1Z
TW+O0xu59ir3bfjyTf3qY/QYfJzhvy8Tf495uaY3xeQtWxl3jzfzvU68koOn
6vrWGu+Znn8rHG807YZBu86gVtB7xGwP9Ju3g/fytxWbl30sD2hzp3g/PLsm
cGz9DdkGeagZ/BHvg2+ep9zeRm88a12d0hPPUV3CFjfn49m7GHV14rbogyf1
vOyNY7Bey8XvJnuMVDH5EVXWi9tq3w5jzo2YCy77UPI+2sJ30Y73wGV6vnID
Q89zTV9Pj9HXi+N+nPI1QvFu9I9o1HcuqrWbgq7bL2HdE2Bbfil+SbsD3/XZ
CCENGcQ4P/cEfKYcJA1+Bn5zj8Fj5Bb4zzmOqK3ZiDt8C/6L09Fy6FZ8S4xb
kXkXHYjzHuOTed6Z5+874dBpEmd81M7r8Jt5Am4/ka6dkowOaQ8R8FcKHMnO
aDpsF5qPP4pm8/LQK+UpBuMf9DpTil5rH2J7wRM8otv3nz3HiYLHWHe5EPtY
jP7ifcy88IB4fRsDd99A/6xCJGy9jtDVlxGzOxdJxMTYHTloe+w22qbc5fl4
rN4+6fgdfHTmAb7ddR0Tzz/Awqz72JZTiN1kN6yl1+a++7+f48Y/z/H7iUIk
bn6EAQ+e4eOCZ4jeVAyfvzLhNWw3rR1o0n8VwojxsfRaHr/uQtNRexGyJgst
11xAvZ6z0GjAYnhPPUK/Wxrcf9qHkftzsDzrATqNPQjf3/cijNlTW0jHb85G
s8kH4f7rFgQuSYMf2VY+M47Cb14KAhadhs/qC2i/Kxcrckqw7vZTjC96Aeex
h1G+Tge8+j8/nfEWn30DUTOvcN40o66s397qnzI430PpYy90uc56pt11DS/8
9ZqW763pdbY46w3OSx++Z28T59nrVZHav6f0H9i7qjkBgul6n11lHq7W447Z
JEq/Psl6q5ZX4mc2cmOryl4Z1th9V61npVNXY86k7nPT+l/p/S5lPo0S+y5T
g2fL/y/4LpbKSOWYqs3VXtlcHyfx38xexO6dDNYL7svXE7M5Za9jbVWWGl/c
Lxiu5AWz96L/B2b/VXZONNsLSvzeHN/vrOXaO1tz8QzeG7EMVZspuXjKDFub
fvuacTrDwyz970RsXsyqiTCzXsm7E7H5cjUV/73qmxfxeF3Tl1fz68QxxnaH
eD6zVubnW9jO9x1Yfn6U2UfvYGW6yvoY4zjxuEIdXcObtL21Nt7C+ToK41UN
X4bziq6vG69wXvHl8zz7BLP/nnR9+dpkl78egi83pyD8q0nE7Lfh+8EoTLv5
xEZu7XmZh8fyc1jdTMP4r+g5ddF2xEJ+7FVWW0e/ZeWGllx7U29Jtc+i3guy
TN2pel51VXx0hv9e1d72op+drumFdhf1dUb+XRLnvHGdMXNe6HrtGpFk1C9L
LS9q7YxcH5GLZ3Ber69j1/aGKueN2jo2Q5itcm8HchbUTZyAWt3motXGbPxE
7Dh49wkmJufBeeop0uXH4Mfm2ixMId6nImzTBfgvPEV6/jB8Zx6F77RDiNxx
DbEnHuD9Qzfxx+YLSL9ZjE8P5KPF8vNw+noVnz9fp/tf8Jt1HLF7mA7eg6Zj
9sNn0hFEbLqMoGWZaDoplWvcZqOPwGv6RXQ+/gjD/36BdlsL0WXDA2wmzt8m
zp/55x9sIh7POHMXC9m85aP5+OPMHQw9fgufHitAv1P3ELfpCmJ25iB48XnE
7bqB+P15SDiUj9BVlxBF98Vtu4Z223LQP/MRvjt+G7+n3sEoep2/iPeLr9Fr
n7yFzfee4PKLfzjnh58uRuTi++iTVoqviPMBK27Bd3Iq8fwQ2TLstziFyG1X
EbTwDNk0e+ExfAeCFqQhPrmAz62p1WEy6vb6Cy2mHEHQuqtYk/0Qqdce4LP1
F9A59SGiku9zprNYfcByFoPfi6DVrD4+izO+xVzi/V9H4TzpOBKWZeFwbjFm
PHyOvrn/wPGbDVqN77uhPB4j9byah0esr2yjP46p7ktqULWmTvFPKfNmtf44
guEq5y3xeQ/9ts5wdV9jucV/76lzXvgCZO6e4S8Qi9sZ6pLM17W8ew9tyV59
jPnG9zHzvrte8yr891Yfvq3aO2OJPFk5v5Jv1fi9Es9Xry1lanvU/S7/x3EL
8wXDVf+6eIyrZiOJ/AChVyqb+K7mF3cpy2on43EG4/X+wMwmcOuj2wWix5jm
h1R1f2WRc2eKy6ucN47Lnju2OO+kaHrHl8XnI5TYfHhZzqv19bLnjTkPz+S3
13PoytU04vQmnlt98ZbYPWdy7TYmTW/S7ooPX7JbzavnLBfHYhRNz16X7Ifa
8fpcecF3NU6vbx2srFd74Am+x1o4H2/S9GYfvaLx6xo9cl6rb3D+NZ31dnbe
aPXTPHxHmp7N1Xulqj/6rziIGXQ9Fb2vRZ9qofFZDX2n8avpuV6w+28Efj+T
i45/LIddeT9tTrPMv2tvm/OmfnhqDb2Sa6/nmZpiVNJmNvfI4f/nrgrjrX56
15f47xVNb9TZKXX4yvVF9t5Vc++FfaJqetHrXmV9/daGnuf1jsYs4Vf+68v9
e96/HEWfHKDP9WJsuv8Uy4irsduvwmXYNt7P1uX7NXAZvJZ4kwzvSQfhOXoX
mk0j1s86wWvTw4ibva48xQDSzN+fuI2YZRfQ6LM1qN1hIhw6T4Pv1KPa3JXF
pxGyMhMuQ7YiYu15zkivORmIuQY0X5kLrxHEzonn0O8ScfDOC7Rc/gAdNj/E
6oKnyCPO78ILTCP9Ppr4PDm7ED8dyMXgQ3kYfKkIn2Q+RNeD+UgkrR6z4zpa
TExBMOuLc74YYUcKyGY5jdCl59HxxF2035uHpCM38d3VEvx45h6+JU6PItth
avYj/Eo2wV+k6zPova7gOQalliBixX1EbS7EgNvPELWRbJXRKXAfcwIhqS8Q
mVYCt/HHEbbyHPymn4D32AMIW3cezSceQcuVWXD8YiVqtBmPet1mwnXUEXxA
ts6QFLJJLpSi3dkSBC7Pgs+sFFrH0Xx2Clx+2oRmM47xeTXMTmry1TLU/2QJ
vKaewKcZj3Ck9DlGFJSgWxEQOPU07Co3petEuMzBq1TXzPnKVs6L2aQ2fPZS
y5epl+8heWvE5Xtb+CtY34v3xKmmsF0uoes9NP1vjtNr2yoeSo6+jP33lPtV
pJbXGC9m52i6vqfME6xqWQbf9R7Vbt3NuQdKXmxVE+tVPW/uqyN9+PLxQt8r
syf1JX37Zdj+Mr7/2+pq0uOVncv65FU+82sT/T5ceyjPEdc2rR6/q2ErOCva
XvYPEvpGtQl0Lc989ozPqv2gcN6ci5do+u5VFL4bufxKfqJclvr5f9PzvNdt
jOa/t8bnX6bteU58uNYD5yV+e1lfJ2fSKPl2Ur+bY/Tl9Vk23Hev19PLujqd
87JfjuqLL1NLp/e0E+xnbNf99Or9r8kVbcN3H2taFeSs2bI6nufZ1zHr+Yp1
zZyXvK+n98rj9fJmTc9999WCeR9bVi/v99EYYvd/UZke/+m6ZGL9U+7D/+Pc
LTmbd9b9fzBw7VGew8d66nQYswJTSN+wuDzjPLtuVWrU0egF26i9MiPCUldn
5byTkddirplRfVxsa9S4GzF00dPOqJkvy/luZfddbHNeanrlfYRGqKJeH9g1
Q3K+Y1lNr/juDT2va3r6u5d7O5jXf9TrPgsh89PRI7sYYy4+xPSbT9A/6xHa
JN/k/vqGny5D40+X8Jp491+38lm17qxn2/RkuHy7Gs5froT/9ONISn+EnmeL
EDjnNLxH7YPTl6vgQ4wP35QNjxE74TVqL8LWXkDggtMIJq3K8vDc/zqH0IwX
iD5VCLchu0nbXsDHRS/Q68LfCF51FzFrCzHz5t+4RJxf8OQFsa4QH58sQP/U
e/g+9S4+Jr3+ScZD9E27h5j1V/hMntitOfCalorux+9haiEwLPcZQlZl02un
oz3p7LjtN5DANf1DfHLyDr5OvoXPaPtpyh0MIDvg2yvFOAEghTjfL/kpQlbc
RdjGB/igAOh4+hFcBx+AP/1ecXlkn2y4hcY/7kGLSUcQvOgMghan89l/joM2
0ndPRgh9X+fB6+E+dAvZAIcRvyUHvS8+QczWq/D8dSca9Z0Dj993wXvmST6r
vv6H8+D15wE+D6jBRwvR6OvV8F+Yii7pDzA45zGmXy3GN3lPkXDmEd6OGka2
sbc2R1qfL2GundcZ37Ctye41ar1Uzus+aeFXsnJezKUx6e3eZXhvcL5PWdZL
vd/bqK3XX6OKEqevYvL7Gz58Y9tTMt40I0/02Vf57qb06HVTOC+4rx8zNL61
j5U1dq8wX6mXsVe4by/8+QrrZdzNynVHG/xW84EEa8swXrkmWfLlxDWD1dxp
7O6scZxs+sqsJ61LEtQeYJXV2L2NOL2t3iHy+ufez+jZozxf5OiprDfX7SlL
9NpxTuS+fxPjnY3+ebZz721xXu91q/rs/y/Oi1l0NYW+V3rjKb3uNE0fXUbX
VxC5dEp/uwq11PsZh1vr+j36JTXyL7mtLs5nwfhYiw2gcF6w3cEagxd1c4Z+
N/LrlZy7OuZ+dxVFLL7eyziv9Wl5TfrsDc5XYPl4FXwR+8NMzCaGe3T+kfhd
kx8L/3Ii73Xbf9kB9F+6Hz1nbELkoGk8p571wov4djom5hTii62paPPrIlRi
c+krBqCSnOdky3ffwazlRU88vVeOmgdr6odhysVL0lnfVc6r0eZait44Rpze
3kXlvMF4Q/tb5tvIubXiMcp1RZ9JL/LvDdbrcyjUmTZc02v9byvqet7It9d6
IlWsE83j9Cy2+3qzj9FwwCp0zypEv/T7+C79Hr48fQ9tT95Fx1N3ELL8NO+7
yubUspm1rEerP7HMfcRW1Go3FnW7TEGD9xcgdOcNhO2/iaCFaWj2xx4E0mNC
11/kvGs++QifyR6w8AxaEWubTzgE1592wHPiSWL9efgtOo+QJRmI3nwdrfbc
QdK558T52/A+8BjDHj3HUeL877ef4tMLj9GRmN5mZy4GEPs6b7uOxH030eHw
LdLa15CwPx9taPksykRv+iwT77/A0AtFvI9O+MYraHeEzeLNIdZfR+ejBehI
+++n3EWfYwVI2JWH97KK8GXOE6x59hxbiPNxl/6Bz6Z7iN1+D+2PlCJ6az6i
N15G4HyyZRZdhvtElmvHvss2hK2/gKjdpPcnHIH3xMNo+udBsgdOI2zTZT4j
sAUt1hsw/Oh9eI0/iJqtx6N2pwmo//5sruU9xx9AE9LwXuP2w/GHjWg6dg+i
tl9Gwqn7vGb+h4tF6HP0Nt4neyN4aRbK1+2Kciw2T39LZrtV4j77eNs++zKc
V+rmZZ69kn8nY909jPi30vtOW310Toutznip3XsrbLdoenafpxrPFz59JVbv
KbR9b7ONofrz9Xi9SdebOK/z3V347zUfvugJINgv59vIvBp9boXCciNer5y7
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
IvbfQhxp5dBtV9F05ml4zz5D2zPwIIb6zDtLTLvDdW7jrzfDkbRwk682ImhJ
JmIP3kbTcYfg+MU6zvpmTO+OTeEcjj5fiJF3HyOFWDvh4WMcuVmKqblPEbz2
CjxGHITbdztJs6fAb+4ZRGy6ig5pxehy+SkiyRbxJq0dsZa0+tE7aHX4NgJm
pcJ3QjI6nXmITpklaHP8Ab3/efjPOQMvei3nQTsRTLZD4rF7WH6xEMsLSrER
L7CXVqvMB2h7sQTBiy/B+88TaDrmIFzoOzCfRMuVbLZPPrxGHUSjzzeg0Veb
4fTjToSsz0bEnjx4TDpJvxm9B/0mnn+dRnPS9lHE+KhDBYg8cgcRe2/Adfwx
OLL+epOPw5leJ4Rslrap9+FPdkrwqou8l04H+o07pD9Am7QHcB+2jfjTF+Xe
9LP47FXOtzV6Jll99oLxUs/byrPvrveyt3Be73GrLS3Hns2h0biu59Z59DH5
9Kt59FXut8TuvfT7TDF7wXbVj2/pnWdivbWuX/U99FI4r+QacDtAsF6zAarx
2jvFh2/ivGGHVxU99JTe1mpdrND69irHTdcFK9+7G9cN527y+VLvK/rf/Hoi
57ebrOutIvlvYbyrYcsJm8CoMeim9A7qJusF+P8Cy69ksXv+2eia48a0vqLl
XdX3UXLzLTl/Rv2BUVsv+tvL3rjSp98J/15f1+H/4Hy4mfPV1Ti91W9vidGL
HPuaNlgveF/Lyvloi+9e9LgTOXhm1mtsb6XV2HHGJ/D5tWV74tjyzyvx+doq
68vqeLmv9rCtq+h1k6/erPEF51+2NL7T9YbNpvlvMOzKNYc9XWv+55mEV6pH
EXcb4i33LrznXejnE+m2K7G/rWS8ifMmHa8wv5FF0/NZbaIXnphJq13XGPvs
yrVANfo/+npbKv688gDNe44gve+D/9SI1WJGpp45Rr59Wc6bY5lmTW+cL6a+
dpb4u7jNdb3OenvhF3QxeuRKv5t4P5HnI2fYGXl4KucrK7V1ZTS9KRdP4/xr
dbQYPeN8xYZd0XJxOjplkZ4/e590cQHPBwvfcIn3vYskPoVsugzf2ac4l5qS
Vo0nzRqy4wYC1lyG34Ycus1YdB9Bay/DZQpp32lpCNtxHc1IT/stvwBfYn79
geuJ+cdIb2fAnXRx6Por8Bx9gPhF+2wmzOorSDh2F81XXUf/c4+wgTg/kji/
5XoJ/mA9b5ien3UGkZtzeJ58s98OwntcMrrQ+/bMfIiIddmIoc8ZxXr0r8xC
GNkqsZuvIJy433pfHvpdLkXUthx4DtuH4PlnEU+2RtD8DJ6P0DHtEWZdKsb8
myVYTIyfQ+/tuSEPcQcKEEPcjtiUA7+ZqWjyxQYEEX/955EtM2IfgojJjb7Y
BOfh+xCy7Qbcx5G9Qt/Zf91lOE/Q+v5FHchHQnohwg7fRYu1V+FP9krE0Xv0
fXLR6LdDnPfNyR4JO3ALwRuvIYDskJb0mUPo+7Dcg9Yp9xFHGp/ZF28GfoFy
b7Qoy3l9Fq01B8/eynknw09l7oGn5+BxXS9i8RbOK3XzVRQ9r7G7r4XvfaR/
XuV/tTLav08ZW8Acs7cw33RfL/k5q8j8ATV/sBds1t3JeH4PLfeeby119u5K
HF+ZgyNm+VlvW+fgGTMolXoG07muXicUP7/LS64pil/BXtHiptweV2UrZ2+o
jFd9h7qWdxV1hsZjZTyHx+376D6evoYd4abF96u4mv0Faj1+Wb4r+l748J0M
zptz8iw1daY8vP+D8++qjLf2yol8+bLG6IVeF3XzxHRVx5erJY5FS/+9jMlz
/mu5dbKnLbcDIjUffd1Omo5X+9jaWmVy7HSGizg8y9lzULV8nM53Q89LTV+G
8zb0fd34/z/OM8a/5oPKxBWWH//tztO8by3rd+Ob9CM+33QSXSeu0Wvd4xXG
tyHW6FyS+t3K+Xa8Fs/kt2eMFz2PJec05jE/PvNx270RDrvy/oj8ehrX9h8u
2gO7t8jusA+GmOukxueN+RNdeL8JW/n2anxe+uZclXNaqcm1V87TMrNu3JR+
+PIxwmff1cx6F8N3L/tNCH+E3vtPavqGZTlfSamjV333r7zuQ+/bBwEzTpLe
LUSbYwVIyipEKDG+5erzCCFOhm64jAgW9152Hi4TjqP16fsI23cL/uuvIXT3
Tfhvy4f/5lxEErvaZhQifHcuAjbmwH/VJTQYvAf1hx9EizWX4Ds3HQGLzxPb
D6Ne3xXwn5WG6L03Eb6ZXmf1Rbj9sAc+k1PQdEkORuSVYj2x9ssbJViU9xjf
33gOn8UX0GJ6GnE7G/7jjyKcbJHQhRlod+wOup55gFZ783j9vP8Msi2mnUCz
sYfhPy2F+/Y7HL2FbhdLEbmBuE+PCZqRguDZabzvTIupqYjadwe/nS/GRHq/
P4v+H2XvHV9VmbV/M6OIkDg+7zMzKiODYgEpoUsnQEJ6IYQaSOjFzihiF7uo
WMCOCqj03nsNJEASSiAhvffee7t+a5e77XPCPO8f9+fs08/ZKd/7WuVazfp7
jztRSLzNwODV4Xh6bQRcj2Tqn9WN9hi9XzuKJ57bj5G0Xxi+MRYjdiahD+1t
ur96Ev3XRmEUnZvhu1LhQ/rc+2YVRp8owDDaN4w5WQDnE7kYto/2RtEVGHMo
HU+tjsAIOj9jaDkfzcZY4vuo7fFwPZmFybQ/8L1eiYnHUvEk7ZP+PvpFo3fe
Tg0ey8135jF7C+eVOvs7eN1yb5y5km6ep3De0NfzhTY39bmYXyPdx/P0Ij/P
9wgDBOflmj2bnL2V83J/vVSf5yh54ypxfM78uVI+3+KFL3vqOJmrn+C6Os9e
9c9lcyjt7flVVgu+yteV26zPkfr9Od/7WvcRci2l1N+r7A1mK48xPIPk/1es
v1eKEWjXBy7Vl0Nfs19O6jPiNQAsNsT/T0qefpYYPp9zw/W9qM3jtXp8ro1t
nX27nH/IouNtPHFsZ9Dasl6aXyNp+45KzN7gt96vr3NezKzj+l32w2H+Of/2
0rl3z78n6bl6rVfPiMt7cpZ3lPzt1Hp6TyluLzG9m1e7Op5x/h4rz61s5/Po
vEU/PI/bG3Nq2G3a/5kODiNwf88AvHE2FutKmvFZTB4+vpap973/Wg68fvoW
OnQeqc+m1TjUqYe/Rc9LcfonLMxnnH9ystD0bPa6PJfOMqNO+/92z6Nar/7T
+OfguVgZnqSvB+hYy+V3fMTfYDvT8Wz+o+IbzWpoWaxejtuL/hZRh8d0uair
V2bdMJ3P/v7YY3iO3vjbYb0qDvLfjuJ/K2ruu8j+t4zzj5vxETszbToxr/v7
h+Lvzq9i6DcRev2XphuDSff6XiDtvDuRdHwaxvxxE4O/i4Lz4XTSoUVwDy/G
COK6MzF+/NkijD5bgrGhJRhJXBx7poj4VYkZOY0YvjsV3d4Nh8/RPEw6VQCP
6GqM2pWIx148iKe/j8I44rXH+UJMPFOI0dsSMfCzcAz7LhL9t6Tht5w6nCfW
Pk97jrXJdVh4owLOh3LgdYbe85drGPNdBK0r8CJ9Hni9Sp/dOimUdPeeJHjT
PsNlaxzctfk1xEr3AymYHlWMqVFl9NhKuO5IwJhvr2D01+Fw3ZlImr0YY/dk
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
fdvy01aTW7S0WRfgKOUNhC6fJX5WPPY+m9dO6h51jOXS7TLflb4K6XsYt0v1
eP2C9Fy8nusgzjvoHGc6hnntzDK88bRYPtf2LF9vqb1XZtnYannbmD3LzZu9
w9b5tO1xnvPcjq5/UJ5vY88PT6q353NtVE3P4/bSHFpd0z9ssr6rqeF1T3rh
iaPfpvvbenCm6z303f11bxyjB8+2pr6jGb/vxLW9HKu3XP+3YD3T7/fY0/FW
xps6Xva4u/cR6Zh72Bs98h3uHY4nfV/G6vgirAxPFpy/aOr60Hh95szzOy/i
rofccVc3T/ucZ3H6djjP/4fZLAvnmQcem1vTS7BeO9biUFpuvsNfhuFh0u/P
77mEVbfzsSa1TPfbfe9Ssn75a0kzlh2I1PdeHbv5qT30fYSed1D0keqPJ8+t
YR64jPOitkZoAtGLz/IFwgebzZLk/qVWTX+HmnudC1bO/+1p/O+QOZj+5UUs
PJ4Gn4Ra+BKPl0XQubhZiJXnM7D8Sj5eOZ2OicfyMP50MfqeqMWk9FYEp7Vg
fmILnktvwYt0fSldfy6/Da6RzTrjXK4Ro+LrMD60CGOIya7n8+ERXqT78Az8
+go8wsowfkscei/ZBRetX/znaAwn5nueKcJGYuyKxCrMyazHolIg4FodJoeW
Iji6Gktjy+G1IxGT9iUjgJjotTEagaS1A47nYNrFIsy9XYs5MdVYkNSAoMsl
CDiRi2n0GSbtTYLnT5H6c7R9waywfCxNqcP0SyWYcrkCU2Ia8FIT4EP7nJ/S
avFJdiMxPBP9l5+A255kDP3kPAa+fRLeF4sxelcaBn51Re+hn3AmF+NpfzHm
ZD586H3d6TM6X63H0PONmJ6snRM6N6l0ScxfRJdBdM6m5bZi5LVmDDxcAdeT
BZhC+xZtTu5/wnKxJjwbb8fSfiaiGN70WaZHFmPOthT0nPwB7U8Hq5x/zOqP
Y69vXp7FKHmiKTV4wdz/Tp01L2loJ4uWN293ZPH4gfMsrJd1uqzLWW2eynr5
cbw3n9XnWWffSPV5jnLOXs7bOzFdz2L5Us8d530I57yjlKfXe+7seeWb3pa6
nw6fcR/MtT3np43WlvQ/19LyEr384j3tMNoaf2fXpefZ6nj2GKbzg8WxvG/g
NXlBBtt1LT/HOO7HOB8keN+XeeeyWP5M/bH6kvvrbDR8e6xnuXqT7+bi9Xg6
3+/E+QmC8Va/HGsvfVc5X2/lvJqTV3Lzipe90Pb6da1Xjml4PTdvxukZ5znj
Tc7r/ncaV9zbycvL8Xqpxt4O25Xj7rbLNi8vxee7C7ZbZ9HJMXuN9X/Vzs0/
XYiJEfguqxpvnrttE7tfV9wMl1d/QIeOT6OTJWZvLMb4AEteXu6ls2h5NpPO
quVZLJ/731nm1LFeOvrd0nx3hy/6HD/k1vJ9CYtBvB0ah3VFjfB5/w/SUhNg
nV2n9Mf0FRqee1NZcnKij57l6KX/CTxuL/ro5Z46BzZvks2v1ufQ2/bRd+Y1
9xLre9iP3Xe4fxj+PigY89ZF4vWjKXgvIg8/RuXg0JUMbIsvxZrIXHwamYd3
w3KwmO73uVoLp9AWTLzagndJ+36Q24JPaH1JLPuipBVvZLYiSNP3xH4tTj3h
Wi2G7M+F8+lCjD+ViyEb4uAdVqh714w7nAs3rZ7v64sYRtz31Or2P72AQOL5
lvJWfFzXhIUlTZhBe4XJNxr0uPrsc9mYHlqMJanNCKJ9wyTaP0w9koFg0vlT
iPOBR9IRuD8Fi+JqEXQ2D5MPpGLyoXQEhZVg5hm6fjQLU07nYyFp5Lk3azD1
eBYWRZdiDl2fFFGL+XmNmFvWgD8rmvAlfa8Rm5Mw9oebcN2dgsFvHYO71q93
rBAupOG9z+Zg3EGtDyEZruElGLA9E2NJn0+41QC3uGZMpX3PwvgWfFTcis+L
WvB5YStWZrfgw7IWfY809GILBoc1wetcCV49k4EPrxfj49As/Bpfjl20x9oQ
lYc1Ufl480w6XjiQhSd830KHzoPUGrzH2qm1/29et31lLT9b0vKmtuWz4iQt
b43Z97c9Fqyfr2pza2yf1ebL+XlF31vz9RbPHZn3PKYg+elY+u8Mxs9RdT2r
1esrz7OXevA5+0MU9jLmO1qO+X6prxoDYLfzx0lsF7F6dd6O8tx+gs3yz0th
uzSblz/WyXiMQz/2eDM2wGL3rL6wn4g5GD359D9G+13Qtbzw3hNxiCCjJ7if
qUG065q2173yg2DMrZlhX9PrsXu5Bk9mvZSbZ5x/yqgvETPoA++s5znn7Xjm
yDPn2/XNkXzxlD46d94vr3Be98nzMOrs9Dy8h5hbJ+Xdtfy8zHoej9di91qM
X3+8XGcn5+jt1Nzp3nosPi/zncXtTb4To+8xWS4z3rgu6ffu1li9tNgcOu2+
x4zZNI+OW4ovSbd/S6zXZtFose9Po3Pwaxlpmq3ncdcDbnp+3uC7P9fxjPP6
8eMBUH1wRE6ex+x7WuP1gbCJ1z8px+wZ55mnvbE6PhqAjj0C8NyuMKyOKzD2
JBLrtTjEF6TztR58TUt3fHQyrH54zOvSwWS0g8J+NTbPYma2ml7us7fH+Zlc
zyvzbOQZtVa/HHua3jKntoPj03hw2Hy8vCceX55Ow5YrmQiPzUN0WglCsyqw
Ob4EX8eU4Bti/atn0uAc1YyJ19sw62YL3slswY/E4/UlLdhCP98NFcT6ola8
ltcKz6tNGBPdAreYOgw9XIQR+3NIyxdj1C7SxVq93f40BFwqhteFUrgTM51/
vQGf0HK4rLuJuaEl+KkNeDa3AQtymzA3qxlzExsxJ6kF0yOq4LEnB/MiyhBy
OgcT3z8J99f3Ywbxegrpds8fIjGTjp9JacKCaGL3plh4rY9G0KVyTKa9zISX
dsJ33VUsvl6ByccL4HeqhL5LLeYmNSGE3mNhQStmpzXg06pWfNUIjPstHi6b
UzHxQDZcfrsGj7Ml8Asvhd+FfL0ub+DPNzHxXD5ctLwDfa5hp8vgHF1P56kF
80i7v0X7n+/p3GytMs7TLxXGfmhxHO2F6BwOi2iF87kqfHoxE6tJw38bXYQj
9LcTmVqO6ORSHIspxC9Xi/HyH5E61//yD2epBk/NzXeWavBs+unk3LyND16w
hfOyD56F8zrr5+sxeFEDL3HehutSXF7h/AK1Fs/aoyfF++WcvejNE7Pv5Bo9
VdvPsdX4smeu2YNncD5YzeM7qT33TO87yvX50gxco35R3gsEK+xWNboaU7+P
z85VHy/iBWL/4MDnD8icD+E+fw5sHyFx3lF5T8F5B7luz7w07ptp9s7PNbS7
qfcdpKXr+37SvkDfGwSbfQ3Bpo6fbmh+m/55Nr/uDrH7XjLfGfNlf/t28vMP
urSj611Vzne15upZDb7MeQvr5Xl0rNdO8rsR82skDW/W1mkxeD0Or9fjeZiX
mp+dn1F7r8yr8TTj9h5Cy3fz0mfSKLV3/7awvruk67ub8+7a64fvLl/3tc3J
y3F8ZdasH2l0P90fp/u4JXhxTzg+iEjTY99aH9uUz7fSOSCu/I3+TxGTBdv9
bTlv0e/8ksXsnwiUcvRSDZ5ce2epwROL+d4Zx3952Bf3DwjGa6du4pMbWUqu
gS1tv6J9h65jnkGHrj5QZkZa++rk/lWpBs9B0vzW2TZKXz3vzxFxe8WDj8Xt
25lF39muX86kdmru6edx72A86voSPj6ViXVhGdh9Mw+xuZUoq2lCVnk9TmVW
4oe4MvyUUIoXw3Ix/EId/G61YTkx7NOMFmwihl1qbMP1pjYcrGvD98T5VxJa
MJU0vXdaK0ZcqMGIY0UYtiMDnheK4HY6V6/dH/1ngh6zDzidhcmktaeeyYb3
0Ry4bEjGi6StvwDgfqgYIVEVeIV4OzeT+EuPWxJTiwXhhQjeeRtBO+Ix9cfL
8N9wC8HhZfD5KgyzT+Zh3iVi96E0LIwoxcLr1fD59gqm7krCLNo/eK86i+nr
ryF4XxLmHEun+yuxMKocQfS4xcXAMtq3eO8rwLPE+s9bAO/tWXDfl4NJ9Lmn
nM2lz1oM791xxPhkjNqSiNFbEuB5sRBjD9G5OZiHocdKMTKqHpPT2xBC+5z3
slrwZ1UbSLYjoqENJ2h9nUf8T2/BAjpPo6LaMPJ8DT6+kos1saVYn1SOuMpG
FFfWo7i6AWF0/vdnt2HS8nXo8Nd++t5MnTdvf3bNf+e8NWZvzc0zNsp985Ke
Z5yXc/Uy5+3xWq6rH7jAXLLun29hP5uDZ/XeEb156kxba9+9xHobH70QJXYv
dLrUi6d46Ml++TL/BUd5b540917htVOw8l6O/ezsA5zUxxt1dXLuPYTHHxws
z7VZ0t7DYLhgOee7E6vNY7fNMm7TYvbmcxxY/b1cJ8D+x/VjvX1mTl+/Phdd
+pkzb+3W3wlPPHtantfi9Zpisn6Kfvzf8/NyTn6CtNTYfUeF9fZ67VjsfqKp
1+XYPbvN09Dveh+8h+mL56HE6WU9r/TMaYz/l6f5GE9T03vZqbfzUjhvsN4a
r5eWEqs3WW8y/Z5HDO7bsL67r5hHY621f1SeU6Nd+umc1/7ndOpBrO+izYpz
xUMjFuDfzkvwP/1mEk/otr9PMBjP8/EBSm5e57y2rIy3yc1LvXSWfnnhG2Nq
eSvnWazbZL6mz7X++hf3XdZ7BTT9bqPnSecvP3pd/3/Z8ZHJUr39LK7nmW+l
8KG07bPh90ua3sFGy7MaG8nrXt5PmHkDJUfPOS+xXub84xLnpZk2Wp63Q6eB
6On7Oj49n4dfLqbjYHQeEnIqUVHVgOyiGoRlVWJDWjV+SKnEM6cyMDy0FpNi
gZdTWrAmpwW7ifNxrUAOcfkAHX9LXHubGLaI7nOObsVwYtjoY4UYvY/0MHHc
R8vPb44nPZ8F10234fpzFPy33ETAhQLMTmrEfOLum2WNeL2sDXMu1eDZhGrM
I0087XIJZh7NRMj1KryU1YbgIxkIIl4/F9+IuWHlmLU1Dksvl2LJ9RpMIwbP
J/0efDwXs+k9n4muwdzdiZh9jI6TgEXHMzGFdP9zsbV4NqkBM6MqMf1QKoKu
VWBpdjMWR1fR+zbj7eo2PJ9SgyUZjZgaXQ3//Unw2nhdr/ubuFub3ZcJ96Pp
8LpYhBHb0zH6UD5GnijFkIuNmEKc/w+dg5V0nn4vbEUU7YWy6RxdJM6vK6Rz
pOXqE1sw8gYw5Hg5PozMx4/ptdieXoWU4joU1xDr6WdwuaAeu2Ir8e8xS9Ch
4wDj52bhvNo3LzjPY1hybt7GB8+q5+UaPFZnb+h5RyVuL3FWqb23l3MXOl7h
vcb5Aer9vKfeovP5HsLM17Nae/GZ5Dy95KnD5+EILwDh9TfH5LI1Vm/HQ4/7
6M6xZb6TmtuX+W2rz4XfvnLsJO8Z2PUQfl3od/OY9T/KPJdvY4/nt88WcX9Z
18v5Bp33QUYfHYvZS3l9Bxbzl+L8jkrtXpDQ9nq8IESP/+vX5To8Tefb6Plp
dvU8471N3L6nHc53tdbXW1h/J20v5+hlr3vujyNq83S28xi9FMd/2DYfb8N7
k9v6PkFjvZbD12bU6XPqPCx63csmZs/m0Si98vY4/4h0yWL3NjqeuM5j96Zm
t9NLd6/EeX3R/51Oj9FtxPq7aG+j+eHoc+f+4ULv42vJxUsa3lyddN5PFpyX
15MBwtu2p6X2Tj+WZ8urvfOc9b1U3rO5NR26OMP5P9/hx/w6tRdQy8/T+rmw
AW5v/oIOjuNFfpPX21v9rIMUzqv8VmvxeOye9dj3NvcDzJtK8rRkvjld5Jp7
PmPvTrV4ao7+Xoum7+AwFP8a8wzeOJiCtWdSsS08EwdSShGeW4WouELsuVmA
jfmN+OpmMebsTYJvVBX8opvxbHwrVhO/NlW04niNoVe3FLfiozRiGN0+K7kF
Qy+1YvTFGow5VgDnwzkYsyMVky7kw+dsPlz3ZcLzz5vw3hIDn1+vwnP9TfjH
1GMpMf3n1lasqQGWns7BlOPZmFUKBO1NwMzz+QghWC4LK8Tcc0WYdb4Ycw+m
0+Py8SKx+tVCIHh3MrE9HwsTWhF8oRrT/0zAczeq8Gom8FxoERbTCjmShdlX
KvH82TwsjSzFNNqkzN4eg+AzOZiW2Iygfal4J7Mevza14YvmVoSkNcLreA68
foiAD31mry2xcN96GxP2ZSFA8w06kYPRuzMw5nA+Rp0swdCwBky80YYXC1rw
Ju17vifeH61txcn6NuyvacUPdM5ey2zB9Fut8NDq7k8WYvnJTKwrasFvieU4
daMAN9LLcbygBseyG/DNgVjc/Yjm6TDG5LzIzRt5eX/uCy3743Sx1trLnvZy
bIlxwYkxRu2bV2P2EucHijp63k/PeGytw+Pa3cJwmfUD57XzXLUuX9XxYsnM
t+X8PLUm34nV3smsZeyWavBt/PXmSM+dY4fRIm8vNDrz6rEwX/Lotcb2xWvK
l+I1HNi+zClExOf5nEHxWg6WYwd5XyfX5sn39V9kfH+bmv7ZEPV47D6T7/2C
eP0d76/Tlh4zMF5Lnl+jxu0lvve2cL7XVKHlewb+F87LfXUuEvf/r3F8ezNq
JX884vXd3XxoeRl85163ck7eXY+3sxp8rvFNLd/R9LzraNbT63sAjdGPBPDH
2HjfKHF6K+vb0fSP+IgaPJnzSqze5DrtMVidXadH1V66Toz/GjselY7ZMrV9
J9MLR7/k/nf+qqZ/PEDR8oLzqpe9Wl8vZmtzpnNtP1XS9xZN30vKz5t1eFrd
/V8e8MQz2y9gfUWb3v/3QUQqPrmRjd/KW7F0Wyju6mrURirzpeVaPNmT2uKH
x2fQst45rufNWTdSrZ6DyXplPkZv0UvfhdUBSpy3xu6FB3BA+173jPP/O0rf
My/ZEIlVx1Lx/Ykk/BKVjT9jCrA9MgfrTyZiXXIFPo4tw7yzOfC4VA3X6y1Y
nN2GD0mXrs5pxS/E9/VFrfieLj/Mb8Erea3wvkFa9UojxpyvhDNxftyhHIwl
zvufyELglXJM3JoI360x8N8Wi0mbbiFgTRi8aR8xObEBv9S1YCtp35ciCzHv
Cml0+hksCsvFXHr/Z2KqMO9wKhaTvp9/Jh/Tf4/FsxdL8BbtBRYcycHcbWl4
IbUeL7UAzxL3l9BeIGRzEl5KaMTrtAcJ3paImQczsPRWDeYfSCHu55GursPc
M9l45nKeHrufeyIPn5XWYR99hndLm2lfUgj/nyIQsP4a/Glf4rv9NjzoM3sf
ycSUS8UYvyMFzgeyMfZwHsaeKMGI0FqMj2xGcHIr3iDWf0Hn6eeSVqzVcvV0
nj7MpXNEtwUkA87hDfAMLccL4QVYk12PH8KysOFMGrZcK8T66AL8GV+LZT+f
Q4d/avOgXDjn77WZQxtgxrxYzH6K6o/D4/ZBatye1+AJlqh6fq6dvvl5Eufn
i9tZ3T3Lv8v5eClOf58N/y332c3Rszp+SePLXrg2/LfnnTvX0i8o9RfwnPxc
SbNbPfLtLVnzi7i/GvO3PbZlvVrXJ9/OdbyTulcQ+l3V8A7S/UzDOzhZmT/b
9rr2+6DNl9c5z2L8s9Rcfl/VF4DPx+V1+sJfX8ywC9I/p/7ZdE/PqSbTNd5P
M5hv9cKTGO/AGM85P9muT85dD41X4/QK59upv7eXs+e191INvqbhaRn1eBPN
mTbulpy8edlNrrfzFLqee9ua+Xeu7T10zmveOR3Z/Xbr6r1079x7rJreTn09
0/BGrN5XOpZj8ybbuwvd3knR71Jevocf57uV88Lzjnjew8J3OS/P4vealmd6
/kmrpmd5eQvjeR/dFEnjW+rwnpQ1PZvdzubWzNB/JzU/HI3hM9bswVvnbus9
9Fq9/azv9+t7gg5/d9frZYQHrpi97Mh97kWNvYOUm5d9bw3ey/X2weJvpvds
sDlWipbXGW8sebYO26fo30eqxWtvps29dmL3f31gnD4veOqac3hrTyKeD83G
6lOJ2HAkFu+FZeKlk2l470IWPiRduTSqGOMu1cArpRkzkpow+2Yr3tJi03kt
eOl6E15NbcE7la2YHNOKcddIy4fXwfl0KcaTvnY5mA23venwoDUtvAg+xErv
P6Ph93s0pu9OwOz9iZgXXojXqoG1xNcvm1rxdglp9zzS4RXNWJBWj9fp/hW5
zZiTUI8V4aVYdioHz0UTB2/U4oWoKjx3rgDz9qXhP7FVePFqAZbdLMdzl0qw
kHj8/MVSPB9ZieUJTXj+fAFWnMym71OJpfQeK29U4LnLRVhU3IJl5S1YQfuD
D2i/900z8I2238huRgjtLYL2J2EScd5743V40OeedCwD/idz4bIlES7E+fEH
c+F8tAijzlRg3NUmYj3tT7LpnNA+5fnoZixPasZ7tBdaEteCKbEtCExrwtjY
Zky8WImXE2vw/u0KvHQ8DcvCc/H56VT8uvcmPoxrhN/3p/GXv43U84IG531U
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
tRO/5xy39tPrvDduM3rdvUyN7mrrjWfOqO1oZb3UN8+XmZNXfHCk+nnRD+9h
9Ng9Mln1tLXm3y1L+N8Y/fFyvF4c+3K+6zF86Vips+Na3sy3P+ovMd5OrN68
7GRTcyfV3cmMf0LiPF+Sf72V65z1k6VaPAvjeV2eXH8n++PMEPPmTV0vX/JZ
Mb1FXpPn5J8Smt5B0tysxonV1Mu9dA4Kw+U4vsp5FreXa+4553tLnLf65bRT
i9fZGrvX9bwf98DVZ9b9Yyx6Lv4Noz++oM94c48FPC7UIeB6K9xIk3ueyIIv
aV/N32bk2VI4nyzCmDMl8Iitw0hi1OBD5Rgd0YAhx6vhtKsUQ3YVYNKtanic
L8LYXRlwP5KJwPO5mBlZiqDIckw7kEKaOA2zwwowN4yYSZxfGF+J+ZcLEJJZ
g/cq2vCOFkMvbcS31Q34BG1YXtKIt26WYzlp32VZTXi7DnRchfdoD7LsbC1e
vNKAr4nR7xcBK2Pr8cLPt/DaoQy8S9r9izbS5eWtWHCgBm8Sl9+NKsQbxcBr
JbRHSK3FG9dL8RbtY1Y0tmFtWys+qmjAikq6zG7GaxWtmJtSiWejSzGX9iFz
zmQh6AJ9ZuJ9MB1PPZGNoKv0ncIL4UPnafy+TIzZlwv/6CpMOFsGpy1FcNpT
qXN9dFQD+m8thktkNZyv12H4wUKMPl+B0ZeraX+QBdd9yXDVzjftmXyjSPOH
NtI5BkauvgCHJ6bgrn+OlRhvanktN/+4yM134bl5uf5uhhSzt1+DJ+rKRK0a
Z6Q8i5YzU663m29yfoGk6eVYvGXJ8XxtDdKWlfXWPjvxeDmHf5+UrxezbeV6
AatX7nyh65U5PUzHS9q+v+SlJ825v68f67+fI+X1Q1T2O9ljvZyfF3X9Nqv/
HMh5FMH4OdIyX6+/6dun98LNsewDpPi9jeaXtf4sYy7QADMv78R8+ZiHjsjH
K7O2LDl5kY+3cN7GG4/peNMrt4/praNzfaoN61XGm5zvaZ/zYln1u4sllu+q
sl471pit63dPwX1lRq2dfnpzbp2i6y099LKeF962Kut5TP6RQHPGjSf3uzH0
vI/Q9Txeb+bcFdbLjPflWp4fS4w3cvF+Sh6e19SbS2c9z8n7C85LtXf3Pu5v
y3il5s6OnmeMf3yyyvcnJquM5/dNtc95q5a36vpeEuc542cKzsv/I83/kwZb
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
Gl/cqsa3VXR7ch0+p9u+pcd9HVmOL+NrsSq+Dmvo9VddKcFrufVY0UCvTfuR
tYcz8W0F8CHtL96hfceqyDJ8WtGKV2k/8EFsBe1NaM9yLhvzSf8vT6nVe/tm
bYrGs7RHWBiWB2/ay3juSMaMq2Vw++M2xhKnPS8Uwz20CBPpXA7bkYleX9F5
PJYPF9p3DN6aSro9Gx6hBZgYXoz+P0UT5xPRf00Eeq08i75rbmFaThMW0nfv
tmA9/uIwXP9Z3dtD4rw568nIX1lr8Kx986ynTvbBU3vqjJix5HfL59jINXjz
eA5e1dELJLbPV/S9Eoe3x3CZ9zxfb4kBWPMEjPODrHX9Zm8f89vp3x7r55l8
Z5dzFc47mks+H6q/DuOxtCeQ9XY/6X7FT1+t32OPk19TvC7bM9jyX+0NlHr6
LfqfX+rfxzh2sHJeY7zmjaOzPcRgvZOYq6PMxmV5ea7fJbZzbc9i9nbm1lg9
b2XWPxWoH3eh1+nSZ4au4R3Y6sn66RjnA2w5T//H9KVreWNxXd/V6pXnYvLZ
07jktXnyTBuV80aNvRuP4fOavH+5m0tlveiz8+Te9WwundD3XirrWY8dz9P7
CE3fXdL1j/jYMJ/73bFeOpPxsoa/V+I8uy7q7qR4vVlHzzlOq5PSM+dv3map
s2c6Xtb1es2dzPhJSm6erS42a7KI2Svz6u4Ut5+uavpecg2eqeV7zZRy8zNV
xpuaiMfNzdg997k38/PKLFpLrN7WL4fl50VvncJ5eYYdvX4XXnMvfHC7KP11
Ym/T2YzddzHn2ohZv4zzQtPf9b8j8ZDba3jy+WNwJlbPrgZ8r1fC+WAWRm2L
h/O+FIz8MxZ9tflsoflwCy3Eo6+FklZNhU9sNVxCizHheC7G7E7HqD8TMHLd
Td3zbtyOFLhsjNXz2MFa31pkIUJI/07ak4qp9D4r0urxEnHy2V2xeG17LFaF
5eOVshasKGvC9/HVWH0+F1+nk16Pr8RXRU34saAVLydX4t2UKnx5MgerN2di
Len6n2pa8X12PdZVNOOH6lZ8Sxp8zc0qfJtSj+9J+/9It/9MbF+X1aD75q+m
vcCX29OxKqoYKxLL8S7p/9/rtb1ELb5IoX3CzRKsvVyM1QWNeKa2FW/HVWHl
viS8uuc2lhxMxIq4Siy5UQF/LWZB+5iF4bkICS/EnIhiBOxOxKifb9F3T8XI
X29h+LoYOoepGL0vC+NOE/MjKuBKe44nVl5G369vwD+5CaP2pKP3qksYuSMJ
I3cmY+SuVDifLKD7GjGlBui++Df8pfNQY34Nn10jcZ5p+SflvvlpSixK9cdh
Ok31TFP9bi2+9pZa+/skDS386iVtL62/8Vp8qbdO4f18lfGy9uePE89RagMG
ya+3gO8BlDm3fD4e88Y3XkPx1Rkg8Z7F9OVafM59U8tzzW+p35e1vLWWv7+F
6ZztjNshIsYg853XBqj1Ao5OUpy//xwL39VcvrwY542f/Ryjxl6K8TtIvXfG
XL7ZkPvnGOuN+iHWZ8R66Ay+C8ZPF7qe+N5FW4zvfaw9dQbr9Zg9PbdLn5m6
tjc4LzOe/p/Z4/wDGufH6ay/+yF5TVCXWTvPY/Q642W+23Je63XRGa+tbqzm
Xl4G5ztKvfL8knHerO+7R+I+r6tnml0/9uGa3uiP97Gr5ZV6O+apZ+ODY43P
+4naeuZXL7OdL3+zj87sje/RTs+cze0B6jI1fCerlmfeOGbcXtXzU4yla5ep
drT8lHYYb3DeQY7X97JcmvF6g/PyrJgZIhfO9Tzzs1e9chzkmL0d1ltr8MX8
+WC+X1Zi95z9LD9vcJ730fcWffTcL4dreskrkMfuJ9nV9Hf9Y4zeS/j4ov16
T9i0JmD03mwM/v4aRm+L0/PyGuuH/x4Lj7BCjDuQgad/i4Ur6e0RpGHHk852
Je4O//U2hn4VibE/38CEH69jwrpoeGyJR1BYkZ7Pnni5CmPDKjH3SBr+c6UA
r4Zm4XXi/OuHiJ2HUvFxYpXO3JXZjfghsRrfJZTje43h10uxljj+LTH8azr+
8kIevoqpwq/H8vBNaAm+v1WHrelN2E3ad0crsI3YuCayDr8kNWIXfZcddPtO
ep2NsfX4+nYtfjiej++uVpDGL8aXZ7LxdWYdvmtow1ri93c5dVin7TNu0Pvk
NeK1xFp8lFiDleH5eHVvPN4IzcQK+syvXMjCM2EFtF/JweiLlQi+XoHFcdXw
J12veQA5f3sNY3+8gWFrrmLw13Qed6Rh/IlcOl8pGH0oG2OP5GDQ97fgfqUc
Yw5mYujG2xh7KBNj9qdh6IYYOH11A+MuVmFyM9DjmT/wly7DTM4zT3sxt5n1
l6p19oLz1jp7/rvYT63RUtkj167NUzkv98hzrW3bP6fU4mk8HiTH7xnPF4hj
/THS43i8X3qMNS7QTv8e1/XKsajV49/Dph6faXrhrat67s1RrivegVaG22O6
k53HSj594nWt90kaX4rZc/7LnO8fouwL2l26ltf2OwtEn71Zf6/OxmOeOULT
i3554YGn/z+Sc/Kytz3jfG+D9cIXj3HeiN3rs2qeMuPzWvy+t9mPp+fqA3Qd
3y7nNS3/gEXTd5V572Lhu9VXx45HDp9nY/jaWznfkWn8boL11hi+8MG1xuzl
uL2Iz+txf03TPxpo3ucj1eHZ1/F6DN9ebb1UV8/65jpJtXdyvP5epbbe32S/
v8LzThLXbXLydjlvaEzWM2+wfbJNfp572ys19ywuL/XM87w8y9Pbidnzvjo5
J8+OZyq19o4y23vPFLFPXtckPGzU2L3Kent19ra+98FCt/eZpfrfspo9K+d7
S/NsWP6Bfz/hdS/XMSoeuKam1+LAHen33eHJADwash0u50sRQlwcT3rbaVU4
+r5/CkO+iyTGx2D8wTT43aiEPzHW41IxnL64gr6fXUG/Ty5j+M834X02D+6k
b0evicT4NREI3BGH2Scz4RJWgYAb1Zge1wKf/Tl482IGVlzKxTPbb+HdyHy8
ezlfnznzaVYdvj6fj08zGvAdcf6n4jrsos+ygfT5qqJGrC1tweb0Ovx6mth8
uxIbL5Zhy9VyrE9vwJbCVpyhx56ntauoDb8lN2NjWjOO1QJhmvd+Hd2W24I/
Umqx7WQhvrtVjW8ii7CD9i3rylqxurgJ3+XWY1d9G/6gx/8cV4EvshvwYWQZ
frxVhuX0mZ45mYUPrxbgldPpeHZPHF6jz76U2D+FzlkQ7SmcaQ/jd6EEQScy
4f7LDQz/NBzOG2Lhda4A4/emof/nkeizKgI9372A4ZsT4XO7Ht7R1fC6VkWc
j8Vg2h/1+yQUfT46j36rr8M9thZT6bM8/p99+Ov9Y3Fvdw8jDmPV8ubP2Laf
TuK8Uj9iG7NXfPB4nb2Un5f65VivvKKjFV8c49hgqVGDz/k9SK6fY49dKL2G
ba2d0ns30Mp7y31ybKG/NPvWZLrKeVGnp/QTyH0F/e3sBWS+K7Nv5T2S6NcT
vfqWxzvNsXs7ywU4OolcvKPdPYOs86XV33K9n7h0sPbbD1xkxPIl7xyu53nc
x5xNx33xLd44faU6+74S5/vKnBfxep313ANXxO27sDnzMus1/a5d156j3d8z
gC/7nB/H4/dGf904uhxn8trTiLk/ZPHSseG8q8F0G30/UdHwHbuJJffTa34k
d7P++W5yf52X4m0r1+bdo/De1PA659vR8u3peont1iV66CS2S/3xnTjbRb1d
p0f9RYyex+rvoOHt9crz2npRY88Z/0Sgbexe4/kTk+343Frn0co6firU2D2b
WWepwetlzoLr1Y6Glz1yJF3PZ8b2lv6P9ha6SXjizLbR97LXvaLxewu/KQez
5t6eX47O+d6WPnq5v46dH5br4JxXfXDv6TpB90fvHrILE4mdc4ktmh99n3dC
MeT7K3Ahdk84mA7P0HxMJNa5E4vdQwsxgjRo/8+vkF6NxLAvr2A4aVgP0qN+
h9MReCAFU05lw/1wlt4377E1AcFH0/FafAVeDs/BcwcS8PKhBLx3MQtvxVbi
1YgirI0vxyri7nekn3/JqMUm4uyGwkZ8VFKPnxIr8G1qPTYWtWBPZg1+12a+
0P1bib8bidOalr/U2oaINuAwaeCNcc3YnN2CC3R7FK0TdPufpNk35TRhZ0Y9
NpNW/yO9Gge0OEFBK/5Ioz1GcgW+Ii2/pbgZv6fV4IekGnx5rQxrYyvwye1y
LL9chI+vF2HFkUS8eDhJryFccbMUL0YUwHdHIibuSYfr1iR4HsjA5KMZ8DuQ
qnvjarn6wasuYSidJ21P1P+rKIzakQqPqAqMP5oF1zP5GH88G+OOZGH4H7Ho
++lFPPX2FbjdrMI0+uxP0b7gnge90elhV6nOPsCsU5V75q25eQvn+6hxJl5r
b401W+bXKJp+oMjBqzF0a5+8iLGLPcFChfWCydpaaJujH2QnZz9wvq3et9bj
accsVs9r8I3voc+zlXwAbHzzpOvKXByu9ecpDHd0ssNuizbXZ7UyDT9A3QM4
Kow38gVMj/OfhZwvsOwjbGP01nj9XDvx+zlm/d18vc5e9s1hHvhsZo2jzHam
61ktnuRpr+p4dt2cV2MuFrPXGM+W8MOT9HzvQIPz0qx5h16mvtfmeWj8f8K/
nbi9tiYYxw84E+ddcBfT8A+ZGr6rhe8PWWrweU5eWszv/l9SrL4bYzvjvru+
7jbr7u/mdfhS/F7KyxtsV/3sO8p+OMwLl8fu7eXlWc+cxPlHLazXOC553fGc
vN4j78d76+5lffOsxr6H5FffQ+TkxQqQ4vYa5ycrvLfpk5dZz3V9oPC1t/HG
YVreXL2k3jqbmL0cxxe16Wrs3uR8LzNHr9TWi3plG97b0fKKb45+bKm5t+eD
K/enSvNsHKW9gFyLZ51dZ8N52QPXZn6drd+9xnktF/LoosOYEFqG2cQWv+tl
GLc7HeP2JemcH73ptl4X7kr80vrotdvciE2uOxIw7Lc4DNyRhyFfRmH8uhsI
0nLVN8rgcyANEzfEIHBLDALW38CMXQl4Pa0er4Rm4cX98VhxKg3/OZeHVTeK
8U10EdYkVGH1pULS0pXYVtaC/cTjT/Jq8WF5I7GZdDjp+b35jThd1YqtxP8t
cTXYEV5B3G/ACdLtJ4uBs9XAofw27CZ278ltxcmyNpyi20+VA0dJ0+8kjbzr
cjn+JK7vr27F0co27CLm7yG2/5jfgLcqiP+p1dhd0oKNWjyfvsc3t4j/N0rw
9fUCvBNdhpeOpePV48l49lAS3oyvxIuhOfDdcAv+dC60S9efbiAwrAhzblbS
OUjHsA8vYPBvKei/NR+jaW/keiwHY/fR3uloNjwuFsP5YAaGkZ4fsTkBznTO
xtKeavSOTHgnVWOyzvlQdPynh15vL2t50TNvrb8TM+r0ntA+Fh88Vh8q1+Ap
cXupb97Kee6B819q4+3V1g1aKLF7gYX1C819gCWGr9TiL7Sw317cXsod9LfU
3vcXPXd6fELx57f666g+ujyXL/fkK3uBuTb32frwMs7PkTgv7wuY/g+RjuVY
gPzzYZwX/QJ28/P9Lbfx3nxRf+cgz6flul5wXvjeieVozq5xNPW87nXL4vSS
pneU4/W6Jp9my3mN772nqFpe8rHXOc90fC+h7e1x/q+c8aTridnaPLW7tPlz
D0q5+q52avC7Wnlvj/OS373M+W7uEvtNbd/NQ1lWznfkffPCt76j2Wtn1NvR
sdZjp81T5R549vS8Vpcv+uPVJfGd5eFZfb1+3fDCuVfJz5uMf1TwXtTbW+L1
cr3dY5OFb73UV6ew/onJqp5nOv5JO7V4jOWKz6119nw7nJf98J6SOc90/Eye
q1f1u6hl4td7z+T/Pxl/5WPhgS/n4UVdnexvK2ru5NvN+9jfFavFYz737ebo
VQ9cq9+9vdh9xwfH0Xebhu7PnYX31Tq8RWwJSqvFiK2pGLj6AgZ9fQmupNFd
SJ9O2JcKl8MZcCUWjVgXDZctcaTzSzDkSAXcdqZg6jG6j27z2JOMeWeyEXwk
DZO+v4IZe5PwwuVCLNkcjTeuFeHNsBy8dDoby0nzr75agJ9y67H2ZjnWRBRj
Q2oNDtQDuzJqsJH4vpXYvqOoCScLm7A/qRbHcptwkI53RlXibE49zuc34Whe
Mw4WteFkfgsOFxHjSbcfrmjBceL9wQy6jXh/Pq8J5+h1jsVVY0d8DU7QXmJf
Uh2Ok6Y/WNKMnbkN+IPWnylVOFDegh10/w/E9bVXS/F9UhW+S6vCyvPZWBZa
gGVHU/FmZAFeOJyMZ/YlYMHlYvh/F4FJ9N1DzuVi6pEMjNsUD++9qQg4kIKh
23Ix/FwD3PbTefvlJsbuSsGYHSmYcCgbbqfzMWprIp7+7RacPruAIXRexxwp
xIKyBjxLP4serxxCB4eRxpw6cy4Eq2NhfxPyvPkuTMs/ZUfL97XG7aU+7/6y
hjTj9jLzZA8cmeXt1s9bYvmDTJbbaHG2b1hoq+Nl3g+UHmNlPNsLyJyXvfDl
/LzMdatfr8J8C7stel/J3Stz8e78XEem8S11fjaxfyf5tY3rcq2gPC/YYPhc
wfL+7XCe9c2bvXT2Zt7wejwbxgeJeL2p5R2ZpteXzPjpkr6XOM8ZP1VfQseb
rO9tidvbLCM/r72GlfParI6/ahpeY31XLQfvbhzT/zejj97if2+3387qk2fm
5ZXFdL3Q7/zY1PVcy/+bLv9tXHaUZ9h0E3xnPjkduZ73ErzvMcX0zfHSZ+Ha
ZT1xvqPGe6svzqN+EutNluvH/lL9ncx1a8x+kmA857zWM2fJwfcQuXhD0xtL
qbnjbJc1vR3O85552RfHXszeDuvlebQ2fnhqrb3wvJd66HrLzLfDfR6zl3Q9
1/iqt621l577RPN8vGC8UttnV88brNe/C68bFP11ou5eit0rM+m1n50v7v7n
WPzP4Hno9lI4pt1uxQZii/epPDz25kUM+uIixmyOgduJbEw8lAa3Y5kY+sMN
uB/TeuTTMPSrCIz6JQbTSSdPI76NI/0+YVcyvH6NRsCv1zEnNB+LjqdjSVgB
Qoj18368jGUHEvBefAXePJeNlWfS8UVkPn7OrMXa66X4NqoU23LqcLi2DduJ
rZtSqrE9vgpbSdueJL19MrMep5LrEUp6+3x5M86R5g/Na8D5tHocIV1+qIT2
A+W0H7hVg0PJtThRSryvJN7Tc8JyGnA2pQ5n6fGhxPHzuc04nliLU7SPOEys
3xtTga0JlfiT3vdAQSP2V7XiF9p7rI0owU8pNfg+uRLvn07Dm6cz8NbVIrx9
owiLN17DrA3XaU+TgyUnMjD3bC6m07ny/voK3LYmYNQftA/akYTp0ZXwpv3Q
oE8jMPi763A9moNx+zMx+PtoTDicBZfjOaTvs9D/izD0+/Qyur8ZhcUZ1fiU
fhYPP78dHe4ZbM6uMfW8VLfCZ9bIdfb6stTZy3F7G87LnJlryyspL3+fNH/G
fu+bnT46mfODrLp8gcRwi65X4gIsJqC+Bs//2/ToS565/VXei9m6C2z2L3aZ
b29GjuKlaxv3V3P3oo5P4bwlzu9o3Q/InLcX53eaa8t1vqw9dlYtv8CMxYs5
dw7mrBtWg2fV8XofnTnXxph1M5Nz3rGvquUdrDH7PtOMZYfzRh0e47wWt1fr
621Y/6Rtfl7T8n99yBV/7epGGt7V1PVGHF/1zLGwXpltI8+ym2ir6x82VkfG
eT6LlnFeOmbzZ2ndzXjfTc7Ve6m8VzzsvQzfPLker728vBK/95P87/wM1ls8
7pjPneinE7pd9sDp1EOtq+8ksV7X9T0E5zsret645DV2spZ/oj0tP0VfqheO
tfZO8rm1qbefauG8nJuXau2l5WDOf+1iw3cRz3dspw5PYTLztpN9bfsI1lv7
6K01+aJuz7zd0qPf5akgy5zaGWp/XS+zl57X41li948bml7j/D/GvYLHX7kM
r5uN+J7Y8kpRA57elox+753FuJ1JcDueBb/zeRi7PwO9NqfD9Uwh3A9mYMLu
VF3He+9JxSTiW0BYIXy2xMP3+6vw1XxjdifrffHPRZVg7v5kLN0UjeCdCVh+
IRefx5TivbMZ+Ir0/G+k53+Oq8JPN8qxJb1W19P7s2qxO7Uae4m7h+MrEVrU
SGxuwDliekRFG641ABdTanGZ+H+a+H2K2Hy4ug3705pxhth+JKsJ+0jfn65p
xfH4WoQVNuEy8fwyvcb1FiAstwlnUutwvpgutb0Fvcee5CrsS6/BQXqvXYWN
2BBXiZ+iy/FbVj1+TCXO077kwyt5+Cy+HM+cyMTcTTGYvyVG5/zymErMP5UD
t42x8N0YA4+1dA5oP+QXXgJvOm8uG+Npr5SNcXu0eEgWBh4owFMbUuByhPZQ
J3Mx/nA2Bqy+goFfR2Ic7QneqWvR/fYfXvI7cX6Q0SPxuL+I2T8h9dIp3jiS
llfm0Mo1ofKcEykWzHWk1SNnvqJ/76zdZe5aOD9oIezH4BnjF9gec6YvkC4X
4n7ztWxqAgdIn0P205N67QTnLWy/k763x/r/E+eFNne0LK7XFW8+C+Ot9f+W
GT0ibi8xv7+F/7wmL9icV7MEbEaO4nkv9dXJWp7X3LE5djrvGeeZRw7ztTV9
cdplvOSNwzk/RdL0JuefCrTDelPP2+M86fe/PjSRNP14Q9uzXL20xPz5CZzn
HbtaYvfKLDurlpeZ726zeF7+YRazN+L0dyus9xT6Xc7XM4/b7kLX69x/dIrk
myN75Fjq7iTW36PU1bfHeX8Rv++h5t6VOfI9LHX1j1v0/GMiFi+0vKWW/vF2
YvZPWDlvJ15vM5tOilVzHW/rhyd8cdT8PKvFE5xnvfGW3Dyr0+sjmKt45Vi5
L/XMKTNr+kq87xts0f1sjyB87uX9g1F3b/lMsgeuXHfPZwDYydObcfsH3N/C
E69EwC+2WdeQS4pb4HW1Gm6HUuFyKANupDVH7E7BjIuF+K20BXOulML9Sgl8
Qwt1zo9bfxsTdyRj8t5UvZd81t4UeG1NxHzS8Yv3JWPRtttYEVmE5y4XY9H+
FKzYdkvn/Je3SvDdzRL8nleP3zPr8Btp6h10uY8Yf7yoCWeJwWeJuadJ74cX
NiCytBnXiOHRtA+4WdKMW7UtuJ5bhzBi8/WsOlxoBfbkA+ergRPlwOE64Gp5
Iy6l1SCCXvNWWSNuas+n594k/kfR610paUJoZg3OavsFeq8z9NqHc+qxK6OW
tH01/kyvw++0D/g5sRKrrxbim5QqrDyVjuc23cKSU9l45XopnjuZieDfb+G5
0DzMPJYF3z/jMftsHqadyoX75iSM254K598T4LqP7osqh/vlcryXUIcP0usx
bHc6JhzJguvJfDjvToP7uTx4xrbg+aoWvEI/i0d0PT/E8DGUY/ZPMs5PNfU8
66WzxOx729HyjPPcT3WOLecVT/gFxvWB88xeuTvl5tU6Ovu1egulHjo5Hm9n
KfsDse63eexClfPWGTiS3ld4zuMUtj0F9vlupzZffpwlV2/w13icwnnGdbt6
Xc0BMD8f62fR6/aUWjs1329Tm6exXPe4XWDW2oWIWXhKXn6WTQ2emFHL5tNp
cfuZ0hwbmfNGz1wXznnzOs/JG710jr0NHc+97LmeD7TD+QCu5dvV83rsfrzO
eP36g+M577mO11j/oKzbrbqeMd5FZb0N821n2dzN/e5ZXt6T++0xbd+xu5g9
L7zwhKbvaPri6Jdsjh3L01tr8LpL+fjuspa3w/cecl29v2B9D2suXl2d7lRX
b17v/Jih6TtLml5h+h1y8voxu845H2jhvMz/O/XRS711T1n0PO+rk1cQvzQ0
vdRjZ3cJvjv2kerxpHyo6nlr8cFl9/ez6i5Jz7O6PDa7ro8afxA9dpZeej7L
L9DC+kk6O7T9bFf/T/DU++nwTzDmvy9Ob8LQrbmYTGyend6ACbuS0PvnW5gX
Wab3qS3PqIf79Qq47kjWY9Deh7LguT4WHr/FInBXChaE5mMh6eDFobmYuzkW
z2yOwQzi38vExI8j8/HGkRS8dSAJaxLKsSG7Dr/cLsfWggZsTqvFXmLsQWL2
UeLy2eJGnMuvR3hZMyLLmnCzvg0xxOcYYnMc7QFSmoDbRfWISatCTHYtorRY
fm0rQkvbiNdtCKPH3iqoxy26X1uJVc1I1l4jvxExFS2IbaR9QKXB+vBS2lMU
GKw/RPuCA3kNer5gZ2ETNhLbf44rxy/0WT4Oz8Gr22/j7dOZ+Ii4HxJejFk7
k7CQtH3w1ngsvlKMBRGlCDqeDY8N8XD7hfZA6+Pheb4YYzYlw+1YDnxv12I7
ncdfChsxeHsGnt4QBy96nSkJ1XA5XoCn95XjlZpmXc8/sfICOjiONjxvmTc0
y8s/KWl5pWfeXH3E76QaKxLza0Q+mF3ayTMPkHxt7frYWGvi7ffa2XK7Hf63
x3vLa9xv8p4zf4B0aWW9NA/HOkNXMH+e3lNuq+PtXLe7bDW44Po8cTlAsN7R
pv6P8d4SK1B6+eeI17Xs0RytjO8n+97PNT1uJf88PqfeynVT1zPGO82SNPxM
/dJRitvznrq+LCc/jWt5jfGOfSTGs5743sbsGlGDZ+V8IORYfZcnJ/FlW4dn
9NQJzgvec01v5bzMe8Z8G97LPvfq6sh76EXc/u5uEuv15SlpeBbHZzV3Ikev
9NaxebOsf77HVJ3dHZX5NSbnua438vBC49vjvD/vnzNm0k0yZ9WIertOZsye
5+cfE/X1naysN2vsOef1JfXGPyFpe1Zbb9XyTzI9H6jHnw0/Vzt9dU/a0fTW
+jt9mex7yvCPU3xuWV/dU7ZxfF6Xp+U7LV45fCa8hfeit07yvGVcV+L4ou/O
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
/uc3wt6qnvFbXwl7fvcrYe8H7w+z1ft5d/X9Xx3n6hb+TWhpe7pw+SXybx70
+t6poLN0ODfPuhLrs6zj4jwd4/1pq9tvO21wzvTfDYZiT/wxfPPI80u83eB+
dXmY+/Zuzg5uRx/essjphxjnzyd+b2b7GMeHzgFun5M5AuH0JZ8ezuD569u9
X185OmK2yc81l88aru+x3/omwJsH85CdmJlj8nLmq/vjz3Uh75KH3XS6q9Dx
+H7V7MVjT9U5YPFdeHw/cHjG9j6fY38iZXJ19iK+u+IMvC2Ud5vq8ej21+Za
fq1ivsd64fIFXs+6fTOcX8m6/T49rtxn/Pe1OTuottWq4S9i3R5n6Nc4nAc/
XsL7NQfyLP26o8LpZbc8eu5MFh7wevDaJ5wXrD/qsH4MuLyfofP4PyY7anRu
3uE8avUbxy3Ob6bLmzM2yXmA8x/Z3TXI6QtZeFvq/Xmv2zcczmt/flp4c+cW
xfu0a1m89qzfKw7jrjk7E++ybqV3qlmT6sObk/k9v4+effd6DlLG+Zr/HnbW
Rj7/1GueF7a/5VthOkNsuLeqn3gghEMf+l4Y//MQpr4cwsmvh3DDnSH8THXn
2+4P4UMPhVBBYqigMNxV1Teqqk4TwoeqG36ruv+W6vH/4vYQXvmZXK/7Qgiv
rW57430h/EaFo/815OIM+tsiBof616OF2/6uvn5QuC1+Fp+o6v1V/X7I7/l3
qrqlOn947d0h/OIdIbzqcyG87C8qXP5s9fNV1995Twh/8J0QPlK9+TvoNe6m
14vXf726/2XV5/fM6vM8VX22E9XxWPUa+9///bC/ep0peuwHqlr1it8LLU8e
yh7U7uPyb7rRA3q9eOw5v8nq9Q3OaGBOvxU8eCYDD7T7bYpBqt0XfPTkeeti
nG/mly955s190NOXuTun/afbLwDOA48XjAc+T+cHfB4g+/MY04fOKc4bD4LT
55HDbwcOX5u3pxw+x9M9xzf9e6fvC+6XvH1b4RzM8Xr243V6Th/7M9vP5++V
MD2X5fPgu3P7azQXh/Nwppvw+UmL9biPDnV72kHreXzeSztOO+czzmdOfxRw
nv32hXz7qxjPqU9/ZaFol10uxfx6j570edDxW2v9+X05L2elZt/LTnqTn8O7
bCLWXy/aPXP6RThf5z14ibcfor3yB8lbN55wfzF57hev5X206rcXfE/c/ogW
a/XrxuB2h/PGb2e9d0Ws56zbDaWcHNboCc8R5zePS0/ecvncg19i/Hg+C89n
4JU895p7a3r0ot9jj77gw2vqwZs2vN7k3vfa/JtO058nTt8/D+fPyOXdbluY
rdOd9NOSj6dYPwl5uNinh5y86ncQ/V3xb+6VU78afuzn/134hTf8u3D+db8W
1r7k1jDwwpvD9he9NWy/6W1hqKp/9OK3hWtf+vYw+rK3h/OvfHt46evfEX7u
V/5teO4vvzM8/xdvDc9+zS1h4edvCdMvf2sYf+lbw+hLbg57b3pLrhffHA68
6M3h4AveFA797FvCser5x3/u5jD9ireG+ep55157a/jJ6vjcX7o1/LPX3Rp+
5rW3hOdU9ezqdV/4+lvDi3751vC8170jXf7Zql5C9XPx+Dq6/s+rx8XnV897
QVUvjrf9cr7/56ji4+LtL3p9/j7xNW/65+8Iz60uP7t6Dz/9mreH5/1i9fzq
evz+N1Tv6XR1+9zPvz2Mv+zmcPwVbwtjL3trOPCC6md54ZvDvupn23PTzVW9
JeyrfsbRn3tbmHj528KpV7893Fg9P/4cz68+p+dVn9Nrf+Wd4bnVax1/xS1h
18tvCT9RfZY7XnJL2PbiW8LWn3176Hvh20LvTbeEza/6tfDC6vfw7Df++/DD
E68MrVfus1pWN+j1VXXWuHzB/9k/H+rzdH5HXTOMP2O0b5t7ew7wH7X2Ql++
WX8e83DS9QuK8cPwGMb5VDRbN1TAeOnZk7bfTGeQGX/q2w8VOL349uAIz7G+
fs3hsx599jtYvo5Y3rlN5+wF5/1s/lbW8k8bPi/zdX5nXcT49Lu8QNhe5/KY
dau75THzbla4vJ2howw83E/ncb4XNXzeMc/7anBenmboexjnj9PumojxoNdv
PiJVm5+vMDrl4Znam/LtUz6e1G49rijk42EmXkm7B/2+FTV7xnzQ6q0vL/P5
Ns7F8zN2vNNG+vSHhctnTD+cL8fcnLVH8n1rFefboEdfnKtbR/i+PvL5McL6
sTqvb7ZL3uyqGXMYz/cdr27LpT77ceDtqNnT5aQzT+r8POG/zIJ7zR531fW4
HDzyoOtcnWblCNYDzmOPPs3Suz110qMH3T5ze8Z6l4kH3ruG8KtCVg7qZZCX
I7P46OnDrPu+GZ3/izMDkp2jWKD5gNjnOJ7OAeJ83aKn/Hhoadle1bZUT3rS
YGhZNFRVdXxydfuTtuVqGaDqr6qvqt6qttCRq89d74XHxeqpanNV3VTx8qbH
qI1Updsf6/6NTR5Xenyz27vpffN7Lv3MXKWfnR8TP7etVNvyZ3vFYP6c24ZD
S2tVLYNSi6/clf6eLmFfCvN43kecsB399dZjL3uPOfusv8J4n2nPGFLDeZil
8z161O1lfq6JV74Zp/c8XTR7ujwMGn+8bZCK7xfd/qzt0TPWw2NQK+gS/QBw
mjN7TL7PGfNzduG8Xi1r76zJ5LlUrl5Nm2fMT/13wHhXmLdj8+1xjt7m4iSM
jx68gbkyzm+dhxk63TsrO+lErwcfXjNsL+F8bwnnc/ZdwvOoz285rkU4L548
1u5xpr6qS+r26L8TfM+Yn7A/ZuPGWrkv7bOTnXap9iV+bjB8xT713qHXHnfb
iHZPO+mdL8/spE94T/voJTuHvPZrckaOwXni9Ol69OKtzzN2fq5OeTzhutPu
FevHZEZ+senVOw9eYZ+8ybEH/p7wnXF+03G5Tfk79Oc3A+aT/054/2bg8R7r
jV5/oobxzGvTvqQexXizn3YLaveak9Nh8J10Uc6+72NOT5chG0+8zn4/He8L
67fYz/MtDZiZx76+zNBDBn4D+gT2XEQzenVHn99xo7N2JkNHfJOcg897b3T3
Td5dP5L23S2J+S3rD6dzhbhrRetgaK/+fbavPejqQK41VP661H53tLcvLt53
qdLHLoaKty9u8l7M7XydHyM/y0H6Wfnnxc/gsFT8jJbwZxY/P/lMj+hnvemo
zM7pTof8b3xJj+I87yyK/Rnh8X3qvatlKAvGF7i8ybk9Az1fxnn1pntPm/L6
Aof32I6Zt0Wej5r8Bb3MGv0w3TYI5wKD6ME7C336c5KLK7p98uj79wnYTt48
eS/o1R8E7AecR6yWPfeiAdT1/Ppl25sXv77n8ezPczp9J/klzQ4b2F+f5u4G
L4r/zvbmTxZwfhZwnufkZ9xlp9ljT549eMzh+xyfx/n50nOiR69P8+87ep2+
D/36pjjPPjzB/OvgCLN33KNfsTvttlNf/T7A/FiUd7MyZ94sWnWwwnEq6q/H
2/J9B+h2zL/V/TZYKb8+HTEr72Duw685SFhfwvsKszdMEJ4ftnvm19X78rVa
f8RhO+H9+qMO58u+ep9jr4UYTzgfL1dY3o4cnrX6hOvM5fk2x+WLubeFnTVG
s/d9eTc77+bmNT9+JvXkue/J+rjl8tqjlxl62VWLeO6wG3fZ9OtsnWB9n9Ne
MfPEze8V9ftafs6kztpBv16wXnz4xzLmIN773fVcFW4J5sfLEdMY12rYDzhY
PAdoUuse5+P+rmqdf6+H6j8X/9zxZzaYTrVhNGfU8w75DfyZ5oy7lPcl8/HU
i8f5EuHyJ0irnwatHvV6/rfjefw8cHncjcY9Xyicm/fzdIjfyOeN7o5+Oo/x
hfsHWau/kPF8GLg9Yz3eBpzfcHju1w+dq2fomJ5Cfq9dgPHGc8A477Pyub8v
5zxnTO++mLcnPX315WlGzxnF9dpcHmK+89pv9/N1mHnLHvu56ntdSOc2XTRL
x3OU4rEnjE84v5V68cIzvE4/ZfvzPgsPzwV8pg5oAB2C7YDzPv9WMnLYg8fz
dFyjl8B535N3c/VXeR9+dVyxE/R7v+fG7aRl/F9FM/GrDmqtjlm1sQ6nfbGx
FqU6nPbN5ToEBXtprz6gmJ+wnvGeMH8t4Xw8F1g/XmFy7rmaXfO1+XmH7eby
mOj0jPFNcd5o8x7fEecB7/kyYb1q9gUuDzhvuXyz/DuYqXsMrG8YTq9c3mA+
c3fGe/TcF/DdZt/O2sug1zdAs5c9NtQ7NVkVRg8AnIc9OJh53zDnIlM596eW
fw/9epOXp9qKzthnbt9R4vcbj9DOO8X8do9twPeV8+M5QDweSlXHzb+tKpxr
NDv3aHJ9ybqSXqE/F/6MiOtJ+zDYTp/bRt0j38EcfrNy+CW1vhT9m97C+bZT
DuNJs+9vMkc3cNL15U9SnbJ6PXu82Afu/Gd1jHfevGbzcSV93vD38+62C3Vc
Z6wfvgBYrT471ukV6/M5wNIhy+3xXKOI84nTX8j3A5dHTV/z/ewMPt8nnnvo
eaBHv1N4u5u9lzoDR8zArWflyB486MN08u926CL9jufUgzcAf2cI3xOH3zpL
WK95eJ30vIbT+fl62nFXPaaDevjx319HqmnIzWEdf0K9dqDPZ70+e+sbZmYe
PPY9hPPdzfvz6rUvYL3P0LkKZ+vZi+9215Vm6MVb73Nw9xnNvrXi/q0rOQMv
43+qNEN3mCrvk83zcEeSR76VZuOk1mVfXStq81GvX0ecPvF52l1Hl1MfX/Lt
CzjvtXvQ7C3WH6MZO9+Db4Lzm45bjN8E/J4Ks++Eywv+TxDWs9eugPNNdXud
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
ie8nL57D+ajp1/bSFfz2OEtW0+0V43GvvOTc8x5a3jsPebcN4FCYg6f6PebS
su9+LjSAl5ud85yR0z+vOA/7oG3ePfr2XBZKfB3EeNTwZRZQNfwO0fBtbh7j
ffyMW1aNhJan7a/q+tDyVK59rvbm+pE9euT64T3u+u7qSPXDXLvg8uOoHyld
/mu+xt/4Ofi99zSv9DlQ8eXa50af65XV8coD+XNeeTj9m284Dq+/N81nwH9v
4tsQHo85t9y/9ftnoRfPnH6745SmB43e83NO4y757J2ej/34YYfl/rrT7ZcN
LxDO60w8+ueXDbJur0czk+c1+2HQ7IfOuXMUPI/g8wzN0su4DVgteH0h1xAV
Xubrg/lxebYgfx/Bfa8DiIZvNfYuqKjbm+vx/C29rwXC9ZNunm5Os3GgulJp
9l0J5zO2q3e+szZT53GetfsJ58GbKPTkuZrtokXNfrSqkQLOX5uxPhbPzS/f
Feo+/J11Xo8zdpKJu6eg3edq9b68VftMD97m3u7XTLxVjteLjn/QYHzr6hKv
P2Rn63mefv1kmqlPnB7785JzS34+xHfsy+NOm/Uwb4f9evbfbeAZeTszp7h+
ArB/Ei7nSv76qtq7J2vnCDU+fwle38D+fFO8d7yecB3xXQtuE5yfDaqVIr4T
psI+G824By+e3y/bp3+bFefnVbdnX57oAbP6dxznpOmcotPgvGK97tnNPvx8
26TifW/G+/j/veWqQ6Hlyf8oXFH9jpcPnUx1Zap5W4NzVc2H5dVxebqMNZsq
3be9upxqJh2Xu+L7ltP9+tiZ/Dp8mWo53u8vb5upPR7vz9+zeo1t/P3sa9rX
zo+R58hleO+D9Sp/HtVt5rOrPtfhWKdy7TiVzitb2q8JLZ278t/ZPvw3SL8z
/28LefzAvOj0icsnvR521WwDHu+zbredcdgO/fni/Lzj6B7nkRMLfjbpxQ8X
bjO6/kLi8qmGzsOcnOoGjPVyHuA9fsMFvEetoeYf4Fpw13Nl/F6oY7to61Zj
r88pnCEvH84zuhn7Qd1rJ9472WNHPjqP8xWXTz148t91yTydy8Cr/p93eT6B
OJ/4O2I7ViknB/vxE/WqefAKOE+7axoVtjcqTt+o8L1Rw/mR8lxdwnjCdOb2
nJGT8L6w4+ZKh/Pcn6cyO25WIpcHv/0KxHrYZcP751HHL+K8Yn2bwXzeTctY
fxCwnvx68XrMrd0wmb32cVcdefet19778MY0E08wfcxi/Abb228vlfHcc/9+
3Gr2mx3/j315wPvYp2+nSj37nnicgstZk2/0eCy/9Exd7hUBn+8lvDe7QMBn
z7PJZr6O/87WfXhm1s3p92YvndlfM0/zzlig67vs20afav3iv2Juz9+Xd9z0
Wm9eB/B6o+PHnyVi/FP2hietOBxe96v/OXzmtq+EBx9+5P/deuhveN//yev+
HT7/K1/7Rvi13/rj0L/zxtCy6Cfy39he8FKyjoQZTP38t3le/y0JxoNeL7N0
pSx7nqc7Az1m33c+6/g8edRqmFngx+byBdd/R33e9eVBu1/GWD90Hubj9Xvl
Hv0FwHhX+D1wRq/4mBLO688gn8kQYrnzz0uWDngaWAMx/XvszdezdGSHLWfn
Atbb/fPzWQMYjDvm58h3bzE+76shDr8VsR10w3h9q8f5GYfx7MtDTu/zcAjb
BeNxRr6k1atenzC+Z4xw3s3Ok5Zf99tfAzo9Y/015LUj7I6a/nL23l/nevWw
z27Fbjtnt1I5fevKPaE2Vyd6PmG92UEPvXrB+kJ/3uF8wvfVzN8xJ++QcPlW
7tnHWfo0ZxdxP+r0R1IJj8d98+uAt9c8eE7Hd5p+7ssftziPnruNxws4fzz3
7dmPT5o9Z+LKuQDwfa2M2UuwD1/z1zXj7u6ycF3Sr8WfrjhvOD7sCjGz85KJ
N1vDesV5yKmHHnuDcb6Pef288njw5WGfXnWAOcfrFestrwfNgefujJYxFVrX
Hg0tbdeE3//jj/xdrot54usxvuI+nZ8YeW7F7a+luYr870vP21wfR+bkFecT
j+eSvrxm2Xd6nJfdac16zI7Pl2bTSj1ug/OFLBzR7RfqWM+6/dCC4jzr98Pn
ZWZ+KWO8q2XN8Buz9byWgD4+0e715+oyZTm7OS+C/gZ/dszr8bP0WUR1nOe9
gTpX14UzdYnvc/bdQvWYU4LzqVfvcu/szvnZfJv8rXG6vc/K6Xd8vs/j/ET1
b7KA973E5Xstl8+9d+Lwib8zxjOXZ2wfC2ZHbYnPX7WPMPwZhPewp/ZpzONZ
z98DPjzo1wvOK96befqVyOst1reCht9KGfeyo3aVw/karwetnnNz0m1xb91h
5fbSs2cvHtehnJ1TYXDb2jxf30ZYr7g+mnfWbfA76GlObz3gOh7Rs78RuD3O
z9Xm5mm+TnCc+/ITmbub/j3n6GTOz3151O0Z980OWsl31blj8S0LzlPGfQHD
1ZsOfW3s0Rf8dobbs05P2Nrp/jZbzZ6y8Ppc9dsZOznXNnN2s+TTh/MB48fX
Xn0HcHzGiw7vz6tub2n58fBTr7j5csPcE1/V1/0Vv++ozruevOaoeEE6emfl
30gn/dsRjIfsO9Hqa7o95OF4jE88kX13bh5cPHh1z3lTLi9HwHPsq9c8eM3y
8DJei24vhVjPXF6/h3jwkb8b74Dz1/kZ+2H4GYYv0M98Xnr1eecNeuis/qF+
fOth7IIsnaWiAZyzGL8Ns/NOwy670xbnMd82ZuJEvz3r9dusVh8xvxP4fCf6
7wYQ4xHnSxhPOJ80QbeH1u2X19KsO7+rpoEY3008nq6jlh+5/pKI+ZtGyv35
hNP7gLNfo7y9trMOdtnwkXH/qjLOX8G8fmUpNyfiu2r3jPMm69Z78lYfMN47
xnnx5UkdSjl66LlH333OuKeMnMjpo49u3eHM63GHDWO7x/kNFc5vKMzWoTdv
/TGL9czrS1i/CTm+m6dLfflJ19OH3bSmL++4PXvsRKuftBjPeeA8l2T21tmd
X43eqVDv0U87PPe5d7yLHnJue33N6R565N28v0bw2vJ64fGyJxJ9+6jh23k9
ydwTHq++QM/rGeufvO5Y9e9vNHzxy3ddboh74ou+rpt9aWhp7JLfneA8ZStp
5h3/3sFbX5ulA/+d9OYh/45xHnmpOxZn5zyHFzz0vW6n3Tfrhxuuf560euDy
Q1CI9YTtiPN1fd5585r69PRxKRNfzlGAuzPObz8v12tzd27ebumg1Ubsbryz
ehkyctPlQf0d4Qx94vHbEeM5t/6k8PmUmYOYT767Gt77/jz36CUTh/PspxTn
PZ+XHr3vzwPOo9+eK+J7heEZ54/pnF2atTvqsvBGm/fn0ywd4X3EbtHxqRfP
HjzBe+7Hx902ey3mU38+47vn9Xvr/fmVtk/fipn2ftbOYz3l3iqnP0T4fhD6
9IcpP29E99mtxR02hPkJ6ycS1i9eP0L75keD9du5LLyE5+y/Bw8ezttTH97w
epmpK3jqN9m5+ZxzO0Xeu3HJwm1v5r8Tbn+CjtyvP1Hn8ajjG5y3u2lVr59y
3F732lidnueaPL+3HinNo50lnLe76gzW8746yMYzmj3yepOPP1c/L8D8vL4C
3htun/sWLU87FFb8xMXLDW1PfMHX8Rt+MbS0Xau/r37MTwZ8Fx5P/Vjsyw/w
rprTRreXmbrt0JtHvb42NwaafW1+DnR88dl7nbzA4z3Oi4Zveb7gPHF06dM7
/d5w+uL3h9euzdU7L77BfvLesVaPOgD4AbvEq1DS+alnv501fZ5bxKwCuG3w
rPbkByHjXnx4J/Nx6GLOwBmwGM/9ec6zZ8xv5rdvjvMwM484b3R7xfiOmv9u
3OK84fJHFdtpXw3fbnLt3ex85PRFv33Eb8b7FbSXLnH7a4Hb+5k6zsvZI89J
u2xkd+0u8Nw7nDfZ93bWrhX207aWevRUbdibl9IM/Dbnvct5uXkPLWN8K+Xn
yS76DXkOTmfsjrg+PWbbe+9d3lOHnL6dcJ5n6PPc/TEzg8ez8AnXN0KhJz/6
60Sf12OHeO4J03GeXnT7ScF9naXHmjRYL5q9cPmpzOWlIE+G931u8Rg/7XC/
MFMH2r3h9qY/jxycOL306KH/znsiCeu5V6/F/nvL9b3WX5+705+pZc1Y0lTu
vveByw1vT3zR1/WnXxlaOnYpxle/4w7ITWQ+HzPLdS7+pO3HDzC+c58edHvc
WbPN6s61wtn5klZf21FTwtaChs4Zd7E/v2PBefIuiCYvOO85vcF+zsthPt/E
h1fz4TOu+/MPvH0hc/shf54DmD50zp77DJU+R/Y/YJae8ni/x049d+C3p/yb
NCe/3fJ4q+eftLo9X2e//Vb04wHO96tu3ylcvoTzk6DdZx7fgRy+d8LxeML5
7mMyP292z8fbxXs3pnN1mxHnR9L1pnxe+vHXEnZfn/bR6c46t8MG5+e5f1/h
dd5Zy7to0Y+3t5yP57C+hvOrXG/ez9SvBq1esnGgrmZOr1ifc+85B5/31xC3
j5m4Fd4n/X690+4B59tQz98wJrje7nT7duD0rNFnbk84Lztote/OuJ88d5vJ
Uw87a+xM3bjq9cjnNyPOO6zfojjf8J48wXn210/RnLz1nmf8Zz+e4mE941b3
iKDvznvudRf9HPTlwW9POI+76HPe/bxwdJ6ZT1kWnJeDfJ61AJeJ34BzAj/f
z5rDkoj1T/qJ8MZ3/v7lhrcnvuhr+fDp0LJyNPD8ZQfmJkpmPWM84T1m2A8A
zhOX7/T7avyuNM/jm+G86ceX/PUX9LLB9gsFTo84n/14XbKPbsH25Ie8du/6
9sjtDadfKO/HMecbeP2C0/EXyucD9DP6vnzC+CGH76DfL0X+XuD1uqMe8+xP
a/9l6IbM4+PvfbvupNWC3XTYpyfffSrqz3dtdVy+XzE+8fmBS3D5XsZ61OvH
tczummPC7ztEzz9uZugaJucW8m67R/Ix+fcK++d5dv5pkHGf/PbXKbdPWH5t
PfOWcZ49euzPT3jOO+r35R685/XI51dcitOXfHh8G/Xphdcrtks+Du26awNe
nzT8tYD163imblQ1/I0R6w8TlsOcvOHymJ3LHJ5m5SQ/96jV7ZnXM8d3++bb
eTcNX6ZZuXbXi697705AOf2eZ++oLJcv7KQFnDdZJIbTZ/zWuXk/Q8c8HvaF
yQz7Jfr0fZxND575PsV4u9OO/6aDH1Y4vffvM5+fl3OJ2m479mjTnH3q+VLF
269YMRIaa46Gr979zcsNcf/gv551078JLYuvC0vg/E/0HtboaQ9dDedZq4+F
OTnSmz8tGGJnus6WMR5x3nN5xGrRsRFjCxp9EefBdy+zdH6ezuK4xXXo5TOv
d69XzMiveQGxtw/avrxOAefpczCz8kM0d4fzC+LDP0uvU9fquTffKb35eNSZ
+aTXR1999VpJh9+me2m6AN853xg5Pev2XQOI7fGyz8fJer3y+YzznaVc+16X
aQ843+H78pif08P4foyKMd5n2hPORx0/avvxvqJuf43l9LiHPuH97sztE5Zf
pxhfnJ3fA5Xx/grJuN2fe/DM65vtueE+/Urw5NUwXmfrEsaL7/6QLc63p8Jd
N+lIGn4rYX0rz9CnXfUncrZt9OYZ3g4Ybzz2quHjbPximY8/bjR8zLlF/V52
0LEeT5q98nnP2y9VxOl7Tjicb146V2c9+InTe17vc3KA03vMl2yyPpivF6xX
z73PwkMurz12naO3Wbisq3H+vXrsZaa+pg0wt5+V8wecyzLZfRUvaGnfGdb/
fwvhfR/69OWGun+QX5+/42vhzHPekPrysZ9l+zm0jwb9dQOg3SfcP505PPP4
Acb2U1arZ+8d7k4p6faQ3Wpx/bzl92aHXBPO7HvxzTx4w3luXTEe63z9uvTp
YaYOXsfM7PlMnGGP9ZCvG+f0zaz/Qqhj/Hnh7Uupf8+fjeXy4MVP5wCI8VbD
74Q5utyfZ4w/RXk852EHHXvvQbffhl48LezP2/w7X8Dn/Q76Zjjfa3G+o/d4
xnneNc/3oW4vPjzt1dcy8NJMXfTjjefrmw6Xcf5Kh/Gs0yPeJ26/T7n9VTvr
eL+CcH0F4bxcppn6hPf7JQMn76PfZ7k8ZuesdN57ycw5QJh/0PnxgNNDj75V
evTYk+e9dsjpac/tulyJ22+cTFifNXzIvC3253G27vHumgf/3cbj6rsjPp9x
eQr20Tls756oc3jx31nPvef1ZZzHXbRxrm5S83HAh9cJs3Wd6MuTXPtpg+96
HffN21n6TuOVxhxc1daNZl/MyPNzruTDxx69eS5799m7BzoCzmD36XlJ9Pa2
PGV/aLlqJAyPPC8cPvfqcPgsVbx87lVUr9bj2Vf97VX1miPxdc++0t33Srk/
Fd5WHUcKr8OXR87517nE8wrfc+Ssfz/+vZV+Dvxc8uc3Ip9hrpHzdPn8z6d6
xuSLQ1vPdGhpvSa0V8fkqUu/N8236zQcvqDXDyiP75R+PPjvkMdLjv0Zy+Fr
M92KT2Xdnq8jZju9Xjj1guPzDuNZux8u4Tzydpy3ozn6Yc2uM7o9cnqTpQPv
0Wn6/Lq13oKZHdD+fBf5D8Wn5735Q3VOX+/Rn9GjaPnguxukDD45RztNv2PS
6mE3rXL56Ncj7z3m5Ritnrm88+DV5uq8Zo/76E5kzh7n6qIfr7q/Iz0Osu1L
M3VbjsnMvObaHwEOT777bu7NjzTH+Zpuz7N0sNMmXr6KuH3i97uI37uddcjl
TXGvfq9iftwxL7jPvF732bWKB5/xHvT6VTA/D1jPOXhtV/McHeTgrT0Mmn3k
8cztI+aPCsabbLyI9RtPZG8e6vaFPJzI3Y1+LzN0mI1TwHk/N484v3nS8vu0
k5ZqM2C66cmjXl/X7ZtjPe+wsfp9R69iPGaMqn4/oxq+9+MBzqPn3nvfzE5Z
wFrV3jEnB/bVDkDJOcCcw3qnC2A/Xs4BENdRV7Aaf7wtYscV1eff8pTrQ8uS
nbnaY12Xj0v4cpNafK2WuX5dyn6Ry4vdY2uPL9XjuR+qHb9P4bltpdd9rO9R
+BnwZ5fP4lqqnbbSZ7oreeyk4vWle0PL2uOq30gvnvBdds/Na21Vnb5TdPrT
iu8e5+WI2W1ndL67iPXEU5vN0zl+63Vww5VrWA+cG7T7ZTsKXB7784XzAMbh
ZXhOgecQpYz9Yfd+5Ln+HMVxevTa089em50fKuH82UJlfE9ZuIN61FkImp0b
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
efXYdyGnl/01GeOXVrjdZXg88vnZlNfRGGDdkPA9+u4w374v75pXvR4vH1es
Z4yPGB49eDyPF7n95lHAd9xVN6oa/uZm+fa4wwY99zhfV8J5z+135n79KsT7
XcDjCxq++OvtLvpWvryS5+sOWKxPnvqDqt/j7vkCzsssPXvx1o3AEebs1o4Y
Pp9rzPL6eF369UdCLe8WM+1NHl4J7yHrNs3djeveGs6z5720xNnzrvoJy+Mh
B0c5O+ytq3ntC/13xHSD+5nHS/WUZ+c91iuf19n5BvBa7MUbrouc3vdi0WdH
2F303gvu2z6uxfc54vZWE2gIH7e9/Hjsov3lLV37woZrnhXmnvOGcONL/v9w
44vfHG686U3p+Mx4Ga5rvQkKb3tz4XZXN73Z3n+Tf903X/r5eP9Nb2r+nOp1
nxnvv0nvf+aL6Tp+T7leuO8S9Ux+vWbv9SXu8kvs5bPP/1fhx46+MLR07Akt
Vx9PHE+4fD9r8qeCzb1jzzXk3gnvAzzHvvw2xZkux+OXIv/crphVm5tHnEd9
G3NyDB9mjX1BsNvOtSPG8+MWXOatPrd2rpB0AMB46fUv1M8lato+f+/z+hoe
/02fns8h8jkDZ93j3J7iewHn3WXdZ5MxPr/uRcH0rlrPnnH+lOPyun8YOX2X
ycop8PnI37lHzzjPuD6Qc7myPj9ZrM60g37CYvuWcYvzwudJs2f/XuTym5HD
4/GI9uQTzl/Cb7+cfPMe6690/N5k4u10WM94T+cAsW9f8fDs0yMdf6XX7veY
Xn3rqr3OZw/7aZNuvz/XKt5HR166mIMjvN7P0QP2ww6b1rUu+3bdCPTmEefz
vvk2yMOT/fOR1wvWZ5xv50zbDcdqZXz25MtbLJ57t7eGcF0wX3bXMM5jIeYj
xpf4vdPk/cx8zxTh+ZTgecJ54PKJz/egXu95PHJ5zM7R+TmvYXMmjRxNPj3y
+znAetbo50GjL+i+BuetNx/1d8b6htttj7P7jcjjn/SMMHbuF8Ij3/7u5R4l
/wf79eZ3vqvi9YfDooj1204Tjz9F+Sduzyziu5mdO1PGeeHyOi+/lLlkTbdn
rAddWnr1bjat5HMTLASMHwYNHnvorNkP17HcPA/6+8zpazi/Y8G9ZoHjN8Ny
M/9X2pV7Tr8H/OzqVXQY73V7X4TzSwXj4/e+QTV8xvrBM067P5V32Gxjn/3J
UPPhYaZ9QbMXrGds5721ssPO6vadZt885OAlf/0E9ON96U6aPHtH/XzH3Rs9
RwTfG6Ynrzy+Oc5fm7FY9tB7rL8OuL3HedhRZ3Jzsid/0aqDqZDbK593e22Y
1yes53487qcFjz3p9jn3Lu6nydp7xnbu0x+yPXrOyFtLu+eFvyvOq+e+zunb
GOMTphOP3zSdvHltuLMO9tWYcvl3Zpbe7K85Lvitu+g5E3fCYXwB5zcXvHe0
o4699rU99H73fI9yd60puG1G8d7hvMnH8b1g06O1+n3Rc4++POmVz4vnynvu
anq9mbNjjLczWMX+L+4xpedH3Gj5oetDzzU3Xm6Ye+Kr+rr5P707tHTuC+0p
/06zTLtgboqzbzrNjln21Z+uY3sJ4/1eeZmv09LMN+zTX3CeO4/1oJNDL936
6oBrS1/e6fNmrs5W5uPQ22fdXXC+CYYPeTzHx+Bsne/N43lMfl4X/MxddC7U
ZXSPsxbnh8p4vzRifHr/N5Dn/rR69QZhlw378wZPEa8/JZk5eU6evfeP4bGX
HPtZmqenx/LtEdeTz06xvpaH18uZ9nFefiIXc/rI3TkXj2bg5XmJ1+v+WYv3
DuORzyeMP1wdDxf68/8Y9slzr56x/hqL9cuhV485OW73vPbtd+Y8nIj1keNf
pbm3OVM34/sVHusl+xbyb1fDnrpVups216GE9W1rRqkO56x79ONdDX48zsmD
3BzBefLd2xk7xfmE9Zx/t46wftNk3lEbebvZVwf8XvLwkNMfB04P3F520PJ1
2jMvmG95fdLzeW+NYD3guq+Uce989uyxJ4+d4D1iPOP8lhkqnaVTDR+4Pc6I
Ga9dfXY+XU7/ZwDjvYYufXTom/ucHMDqxgD67hHj2Z990uJ+TQPQ3n579X5i
n/h33v3hyw1xT3zRV/e+54SW5aP592cwnrNsCbcT1gO+l7i8XD5b5vLQm8+3
nbe9+drsvOfuHg8BQ4F/a3+dtfsFg8uK447DN8F/5fMO4wW/HZ9Hrb/G5Zv1
7eFcZtjjvOJ61zD68NiXd1Z79kOYN2h79fl7PdPO1tV8+NyjB07v/HcyO1/z
2c+bnjx78dP5IvD3PE+n2bfGU1/bQzsZGsLjeYcNz9Gx9+4Y3R9zc/K8XN5R
x4V8HnrywuVxH+1IwvgyzhOHj/r9lajfA7dvqt/vao71K8lzz/P2FTZfIdx+
t/ruV3g+jztqr7de+7inbtWBYl+e8b6N8T7idPLYRUznnv1hwHrnuV+HmfdH
xJPH3nrR8NlrX+F5G8/Rb5rJM3frxxyH5yx7OPIuG8nN4dl6PkbOPiX4jkfZ
Y4M6fsJ49eK1A7dXbD+hs/KYjwN9+KzRY9+er2seTr69wuLI53sy1mt/vuTD
s71504vvmwk4g6aPAb+cm21rOB1dc3BLvrq5JhhPGv6AYjzOZHU2wf+WNceq
vzVnwoMPf/tyw9sTX/Q1cuE1idN3ilavOr3uozmjO+hAs+/EPBzEecAQxnjb
o3d83vTi+Qh9+GaaPWbfEOf2WC34v0Mfi+cAOCdv9P6SFi+c/mKtD1Dz9Q97
HGf/3fmURWPm/IwW4Pn8guXv/HmYbJyz2q838/OM9YzxN9BnDzk5Zn/daeX5
4rmn/jxx+szn67trZEfdtjk4H6DHpblcxPaM71nLnwp277zz3aU5OPbb+x02
x8lnl/NzUr8+eeuPudn5sbL3Tvj8kTqf31TCec6xpx30XrsXjEf9/jrF+xrG
M87jfB3x+6jDV1gcj+rHd7tpuQjn2xK+u711MD/fZubpDmleTsLxUcqsP0Le
+sOw40a99q3Yqy/q9kdSj56996rfZ16f9tRtnsn9+g1HqE9/TI4W53nvrPrt
FzOPjzifOPokcPsJxXqeoyf/fTvN0+tOm8maP09wvgf5vHrxGsjrEetNz95p
9qzbA6+3GSw+K6es19tdtLg/jrk8Zt3Pyu45M98OM/QN7Lcz/osefzIY3R7y
VfB2c04AuN+y4khY8YwnNPv/l76OP+v1oaVjb8Z03EHDl1mrL+r2Z5S7e80e
8u98Xz7fljG+U3rzfo4OPWnnC1iIPBqzbGyPXbT7HRdTWa5/od6bx1k79NzJ
979IrwUYPwwYj/x/yJ8r8PtvhvHws/G5TPU9umrnOMzjsU9/3nF4Pgc4k5+z
45mA8ecszqfbrW6fZ+qoP1/VUu7jcJ/e76nbZvs9iu8z2Ye3lfJut04Hu8MG
cL7fc3mfac8V9fpjGff7c+5txPaUe0NHg/O+R78Z9Hqj2488DpxnrGf9vjRn
d53D/ALO42Xm82aWfmfuy1f4fAVl3vJ9JaxXzR532XjNnvbZSBZeXasXfk/5
dmleHrPxmPu77JxWzLtfr5n2Mmu3HjT8uH8+8vpNFUan/BzNxlm8AfbPQ/bd
Yof3Gc+niKs7f17C9vHyvppNfg8tztQXeHz3FFUhEyfq9kbPnwymZ7+FdHun
3/PtquHjnjo7E27myfvYzzIjeG/zcepZOeqtL8zGDViO7/NxGv3E5ZHDGy0f
eD3gf2v3dHjylSPh4395x+WGtye+6OvHTrwktDzlEPTbXYYt4jznnUtWqsu2
FS+e5fJLUbsnjJcMV+7Nmwy88/UsnGG43hTnnWYveH1Ry/XurXZPlyFHx3Lx
Epf3nJ/x3uH8Dn1MF/J8773HXL9Y8Zxi+ILF92Hu0Tvf/SDO3CnPT/14xvxB
9kmcleuq13uvPfXmKw6/VHbVnNIZOpm7AD++ePDy35b6njrF967Uj58u8PkT
thDnU09+Ij+WPfhbjlIR1lNp5u0l+vK+Ny84f6g5n+cj59b7GTspmK+7EvT7
hOF0NFk5u8FvvxvOA/Ylbh/z7/g+s9PGYD1p9qsh/9Zl4rVdDdwes3HWHBZP
XvbaR/weI54/Bpg/Invp0YvHs/TqvbeF+J/ycTbPJqxPuL/hOGTcq36fb2Ne
Py5zdaLZb+Qd9N6j91g76hyvd7vqlNNP2eohDx4cbd/e594TprOeD1XMfHE5
t7XdMJDdJucE4MNjrt8o9Orr+2kJ5wdKj2mi1buq3dc/n7ChpWN32H/m1Zcb
3p74qr7+7NO3h5anVv9ne2YF3ztLOO+5PM7T1Xx4MLc9CN47vgyeO+OzN9n2
jPMO3w3eOb8b43up/85Y73vxHvOHFuxzPJ5jX95weewhIJf3Xr18e5dgvJv7
q3kLGecXAN8V45nnG5wXrD+T7088/hxxd+LziePDjL2bp9MsvFOQk6CzdP4x
MleHufZSDuN5T93AFFUznJ8IpT20koOb+vaxL08cPvnwCOO7j2XfPer2yWcP
+Xebm3D5S/L5a2wtp9wb35s3GL8TjtijJ4xfWerV73KYT9crjF509eEK7/fb
PTcpI2+fztStgn20eFnm6aBnz/we/fWckyO76DPet607mirifusa5vU6Y9cK
M3bsvathvGTk0C47h/VLNro5uo11rE/3RYxPmv0xw+XFg2d20Bf21BV31bnc
HObxhO+M9Y0eu28W5+dr2I9zdr05x70hR8hXY2/elplgM9CA02O2G+G86eeb
fHvaH1/MxAHf/UDO0MGdtfmy89x5fb6k3Qu/P5l2nbdccU141Rt//XLD3D/o
r49XGP/UgVMVzh/OGMAz8sjrjV5/2mFBQat3XL6Wgef2y9d210hGDmK78+EJ
1qHXDXT7HQt1nEcuX5u7Q25/MfF15PTiu5PjRasjyPGiOyLGu3MC778fAn9e
Sb+I39Np911cPFsvvrzz1J8njGfMN9l4rNf7+cgCzjOP59xD2X1zyvXn50IX
7bHhXXVdidPP1KprYJowP/vrOxHn+xHnUaefSPieHps8eITtPE8nOH/UlOr2
wOVrOD9Sw/klJT6/3M/SMacH/R532F0JPjyZo2vmvd9V4bX34jPuU24Ocfsr
EtbH3j3P3O1TDx7N2PEem5pub2bnkdcf1Iwcnp2/Gnl+7NePEk8/mqo1Xk79
fNejX3/EzNEb/X4DYv0Rwfp20vBrWXcyYwd59kmbn87eOtlRO2G1e5m7c/p9
LRvP7q3rMDk5UzRHD3gPuN8QTu/y7XumAeNJrxc8n5bL0q/vnZYePuO8z8cx
e2n7NPfW7q3jXSaQL+80evHF9yO2W9+8zNn3K5Zbzz0/BjR7yVTN9y2tsKRt
/YnQ8kMHwsSNrwu3/uZ7wrs/8Mnw7g9+Kh//luuPmly+1OP+pq9/2ct/hvH6
B/Exnwq/+d8/FH7qZW8NT147EVqecjDltsjeePbhSe+dPXhujq62p6ag2bv8
O4/zko8Due06O08ePMF478cD7AROL/i+g3fRNcF4X4j18PiaB2/4UjjPddFy
fePNJ/981O5rOI+lmkWX4fSq3SvOc9498/yM8V0VxqfnJjx3u22KWA9z84OQ
fwfe+87kvTyV/1/XfHjK4bvcjrouw+enQbvH/rz13uUj6fTx9rQbe1I89h1Y
wulLOI+aPWbbQqa90ewJ55v67dFzR9cjHidtHnk9afXYnzc9+t01nK9hPGI9
5OSlObuo4189krl9xHrJxb1ee/WrLLdvI+6u13U/reyodbm3PFOXvHdp7n40
433Ed8L7VOvGIPue8u8J69WPN6Y8fgNn4rE3bzZ58xDrl9QybkGz3zRFPXvs
z+Ps/IRwe7/DxvD8bov9Fuc593Yqc3vOuO/2XnzK0PHYzv34XtqJRvtsNEeH
8Z72oSWcB1+9yW9Hbx6fA8xZPx5cxix5s69uYE61djNDPycYbXaeFHg9436j
33F63G1O+v3i6r22NPamXLyWpx0OLVeOVEeuw7aeerh821MLl+X+Q/X7n1p4
7FPhsbXL7vuXXuexXvtphddM1w+V34P/+Z46omU+nxH9zEpHX08brY6jCdtb
Fu8OLesnMy6Q366T985tBSxHvR7n6fysfM1r77B9O2r2zO0xxxW4qs+1NRze
4bzT7pvivPfZeZ1+R+byy5jL07HM3xeU3w87DC/O29XLYHyzIi5vcf6cfC6c
d6uXz2ctPv5OCeMjPi+lnDzZWWf20nt9RrNvO8Gjl7k9eughI0f22KBOj1o9
7pufdhV31cTivDvozW/JXL6Ts+4T7tO8/JZxy+EF5wHju6kA5+vz8pnbLynp
9tVjmvrwsAfv9XvszeNs3ZUl7R55u8f/Es5Xx1U0Qx91+7SXPnP7PF+3t+7F
w+ycq9GX5/bWEZ9vhTn6Ntljc1jn5tdo5f48e+uPUY0lni8477x5baDdt/m9
dZHXJ6w/YvB9ifTkyWefZuInidtPmJ58O8zOLwH/vdXvSxn3xOc3U/FO2lLe
PfN66r83tnifHfjtuEcPGXiYfc/PEz9+3HFC1zslx561evXi4+75Rh/o9TRb
V/PWIa8f4Lx75e9+Jl533AGGDyjW6216ROzv7Acdv+KOHdXlxdU5TK45uNyk
embcbTP5ttrt8bH58e3m/hmtdPsslH2tNnxNfA16Xrt5T6X3MGMf698nXG7H
x8v7jLfP5ffGz+n1n8ncY3xu1X29seZTLYmZCYLrp0l/PaVzddvsLF0n+u8F
4wu5OCbL3mF80XMPPN4U+s5Ls3SuN49Zt4Lvhf48+uh9Lg7gfNLtidNnfHU4
77NvDY+Hx5pzBKvnp/78Ds/fL9jXjlzeeBMuBuPPG1acZ60+nQckjL9gMH2p
4fG85+aMxXncOUSPSfgumO7n6JXLy/6abYTzW8Ff7/k84XupMs6TVp/OASgL
d8u4YjzN0wl/N+UxPh8R55cY312pN38oHy+F8zW8v0axW3rzhT59uh+Kcm4X
ef4u2L7b3k+3pZy8VZCHG/34Vx9KeN+a+vV7czbeatxRi8U76yynj3k5Ge9B
w2eMZ689ee9aKWcn9efZox/79wnr6Zj4OmfiHVGcX2931+RMvLF83Fz9vd44
kXk9+fAir1+CHrvksz8BOO+wHvbZ4Kyd7J0v4T1m3tf8ebyvLta0lM7OTYNm
b/V7v4vW+vCma3jPON8Ref0Wx+WN7768/w3n6u2uOsb0OcqZrt8uvXs+D4Bz
gFpWjuH48+TLd/jOj9+qGCN5bO48oOTxs/fp+UUX5blJ1bJ7nH/A6A3w80AP
AvsOl/IY+vfCr9Po9z+/fV5xBpGfN4A//yn9mfBzqS438DOR+/CYZ+HjsSHZ
dqeCzs6dEi7fuc3xeeTyzfbOiuf+TL0XD3N0gtfGf+f3z6LvHHEOPGsyu+Zx
3vXnxWfv9tVgf96dFyyV8wXGeJ6jcz57k5G3oOcEsA/P4PyQngN0GW8eeu8t
zvPnIJw+fa/ck1esP5/5esL4G/LrM+a7XDyZqxs8qxze5+dRNm7W7NlHDzP0
20/K3vkuwXnqzW+bFZzXzNsZwHzAedeb5/z6zPF5V90J8tfDvDzn2m9pgvU9
ntOP6d552UU7mvfZUNW8eEnLv9RcnS/S66+i/XPLrwk1vz168YTT79ZMe4ft
eqT8W5y5Szi/R7k96/ZXk5YfeX7Mwa94fRtge+bygPXGj4e7bA7KPnrW8TO3
Z/2es3WI26+F2XuTixcx/3iF68dzVs463mVXwPr1iPWzNF9PGv4G0O8jhndP
Z9wnnF+M+I44727LvfgJna8ze+pJz++ZUGzvZr2esZ2wvhvvU49eA+fqhefj
5fp1i/+z0MufJczPVdt5ShjecH16zsTj+fnOPpirg+zbenY9nAeIP89hYn8B
t2r4dbJ+37bs/WpsBTzqPxWWMGftnbO8t8DZ26vHRM6bjnQ581fPw0uvQZwZ
eby/v8jB8fFeB5hx39e9Djy/HV6vXfQH4uDpcv5Z2nvn9LNAjo6fEf/M8Lj2
3nmD8fHYGADujli/7bTV7E010ezFZw8ee6PN1/vyCctFs0e93uXZex5vvO3g
b6ejz6tlrC7P019wmr3tzSumOj1evPce0x3vN/k5yuW7RBNAfMdePnB5Oc+5
oL579OOh914wfgHyb10mnnD606Tbw2OGQMNH7Z7n5WlmXjC+kHXbtVW5fF27
B91+QDFe+/JZq8877mZJt2d8n3A83vnukMuXOH239uEbjPGA85bTH845O8Tr
i/n2l8L6lHG7G3bVFXCeOb348RzW+zn6lZeqnIt3xSo+7sn9+phhHz10koe7
H/rz+7P3DjC+bTVk5bFmz3m3uI8e5ulwzr6VZu1buWS+TjX9iPVtFTdnvr94
nffg49666J+b0349z9fFih777knq3/NMHfTlI/ffCNn2iPmi3cORcR72zDM/
Zw+e2XnT4/v29Uw8i/PTdZzv1cu8t1ZwXvx5jO+k47usHNxHK9guej577i1u
1zhvfx3nTRYucN+6Fw/8eYDv2APg+7Q3fCrxjLbq54rZbC1POWD7zNyP9r17
09N3xc+r9b19Xxz65c1684/ntpp34BL+gNpj6T2XevFXjtif019vevtofp32
PaFlxdH0tz3xeNlHh747p9dvAx6PvdvtZ0JxXw357+r9eOfD43k6ngnzObcm
zx7Kz9CZHDzMtnE5N95nV8q3ZQ0AtXvEeY/5iMfYwzeFnF978l04S8f+gpoX
n3He6fo7su++C859ugTjn0n9gDOQiXfOaPXSk69l6uCuOrenLhVhO2K8ybvN
vL4L+/OC9QX/neD8pGJ85O7VcxtbZ0i3Hy9ifEN21jTR7Gv9+TGH81AlnOfe
fdTui/Pz2HP3GbfN9Huem2ecx/02iPMFDR+9d8zh5Yh77NCHR8eI81ePZvyO
fvzVrkcfsZ5z7aFfL3173mmDvjzKxzEavvTqHcavzby9df2YYH7Ov41z8eM5
Bydi/jrnywOsz/36yeoy8/pjSbNfwhl4G1nT9/o94/oJi/c8bydeuymoaToy
hhd22CG2E77b/bVun41o9ui9mzY4b/bYpscqf5fevcH46v9JL9es+O6Nx97j
u/TZ52W/LO61QS5f0/id987m6NR99r4Y5yOnXzp8LrSsPpZ8ebPPeUPyhGe/
uPOQ1/zkl/KeP87HFTzz/3c99J+iauadL93nL3tffb7tXe/5WHjZG389rPzx
i6Hlhw7mv+u1XjxjvpuV33ra4rzMXp0tYrzk4hTy7A2XR4+90e3ZZ++8aGZ2
7rxyecibrenvOzzOL9TxfwgeC4+3OXegvdfm5Qs9esPvbzCafxdifRN/nnoO
UcsH/316nQvB+PASxl+knrtq9YLv20nDl922zN0xt9DO1RmcR/8dYzzsou0y
vD7i+4zDeO+zdzgfe/Dxuak/j7N0nIszLliv+2iZywOn72mG84T1PYj1HuNH
s8+e9Prco2+Wk4NZttcp9uP8fOL0OwtY7/bXoX7ve/Peg7dij2r4Buthtw1l
3Uv2fcTvNTnbpm119ue1XQ29+TUHSKNnvD8oPnzF+UOC8W0uHyfze+D065xu
T8fWdezLJ90+8XjG+/HM83Ev/YZjaddNW8L6+bA49eLHdG9N4uyUhQNl99Vh
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
tF4nvL2z6c5Zh/GGvyPe8yzdWd0x7/vz4L2r7ZnH/Dvjs7/gcN1hI+C/zMcP
N8P5S+2eRT3gougCmcczv19Q7K7toy3o9ITNy/wsvdHyvbfP+wHgHEB8fDeE
rh03JN0+efqqy8t+9Ccz5rOWD3m4NgcfdtfK5bNajP0xGwfOBToHT2vu7SCf
B2Qtv2s77KIHb14DzgUajO/peXOpJ5/21khRHp7fSyvYD1q+FGbm+Hx72GXj
+X2Pn6OnSrcz5o9UGKBafnGubnnBh1fj+Xpd/PNJs99l+/TC63cH67vnPXWW
1/tZuoT9TrfPvXr25O3XSrjPtT/36RO3p7xa4vU6N38oaA4u4z7snpfzgBGZ
q5N+vNs/z9k40Wsnc3XUg28jD34b4/3GiTw/330ytHdnD156bNx1s3k6HzeS
pp/0fe+pPyF4396teM/zePF66tfHPn039+yn3Vz8tPrvMROnwmDMyZHcnC3T
9vZaLt6MqYa73OC5ec693eI0fNOnn5U+fUfvjMF368fnLD3bm1c9Xi83pIdv
fXiI08jNG+6+Wm5OzbM3H568bqL6PzUdHnz425cbBv/ef/3o+E2h5UcOW4+9
5NdjNhrO0J2tc3jA+K6CVt+Fej3157uQzw8hzl+wnB75b43TOy7v8VwwXjG7
nGl70ej1eltVTyfMf/pF4vZay3a46+DBy+cJ1mNvdAHBdpe9s4O8AL6n73J1
mctnPx/l4SS//UXi9zfmcwDBeZi7S6Uz9NqzZ90ecu3Jh6e9esD07dZvrzP0
s6Dfz9Ds3IzqAP3T5K+neXk5wmyd4fLov6Prfarh5948c/mjwc7Uec1+TPfW
eL2+e4y8d4eEw7MH75K6fcl/V8rE4dsTp9+l+O5xXrB+V537o+feYP0ewXTE
eu+/z/356wnv6biatPrVpNszZ0+cf7/07bVPT/35qzEzR3fctLEXf6168bJu
rztrF6/jy7QHh7X5jcd1ni7O0KX9dTOZ33OOXrpvIlfabXdMtf34fL+XHvJy
RcMXzx7l4W7Wo+j53SfqPXvMuo0Y3u25PfN3nbm3eXnI3UvZuIz7sw77C/p9
H+O79uQ7+lCv1520DeLyko3nPXe8k445Pe6sk103Tbi70+xr+fas2w/o7Y0K
c6IPb/afvuFyw+Df6693/PZ7Q8viXaF9wGN8IfOuNCtvLoNeX8vFAf8d75kf
ukQuDuO8ybb1WO+xr4Tzbm7OePFwj83Fwv2Qhb8D+P3T8/WlO/R5jLvC/d33
XQqvp+cmrEfw7QWdfgjPYTA/wPXowe/fxTvlI37H6xH/JROPePtw1PR53g7n
6E7l/PtBr9mfElzvrM3SzdW0e9ubp1586t2fJJ1+Mu+ZHyhgu+Ht1fl+M81e
9HrEeezLg/eOcX4z8vdCzi3vtBF8/2vifC0Dp5SJc53y+NSrd1x+ucf53WGR
6dXz3hrl9YtkZl65+xXI7+Gy9OTj/Lxgfc7DWyTz9Ptznz7h9xGajz9E3J59
eZyBewi0/bznRjF/RLk/Y/36MdHwF1OJfs+zdILhkadPEb4fVe0+ee5PEK8f
Ew6/mHfUs08f99PzjN1Gna0THx5hOmsA+fKEzcLprvvxeDd9h/jspwDXXY+e
NXyTh8s+PPXcczUK2n1DzgOmRb9vQH/engPYvXao4+cMHc3CLXFtMxM/MGe4
fsl3bz345futvp+PMQuupWNP+CcvvTl84ct3XW5I/Hv19eDDj4Tf/YM/C23V
/6MnrxwLywaBk4PvrlM0e8b5wi46xPnS7ln02G8/X/fXF3Nx3Cyd9LC999xy
eoPVPvdux4Jq+Jx1ywXcX3i49OYXrA5A/XrdiVM/T1gq/YIFwXN/TlCbu7tU
X5531BrsP094vZDuS5+9nO+ck9vy7cT75XVYz6/r9XZv3Wnoyc8Tzlv+3mWw
3uP8dOrPy576iPvkr+8aaLKXLmI6ePHKOD/ucP4Y4DzXmNPmPZ9nDg9Hzr3b
jN47xvmDj5/PM+Yj7l/l8nASp3f6/VW7mnN47O2vgB5+zYu3N3jPvfTyV+c+
vs7Ykfeecu8XrQZev+aA+vESfh/J/DzddlA1/LWQmwPcPun4sHve7LFLOD9G
83ScfcvnAeOE7yeybi976p0PL/bgkfdvyj35fH/Getb9a7m3G/0uesi9FZz3
WD/psL6+txZxvUPy7/E8ALF+Wmfttri+vd934zV+8twprs/Cddhlz7vs+mZ1
vh44vuyxZ2+d693jHF4pn73owRso4H8/Zt3b++OMV8yejV7wuJ/+2umXhtGF
10qNXKBaeE11rCrd9pomVd13no4LUHz/eX7cL1C9Jhw+/xp9jn8tfB26PgqV
rvP7vOT7+pvV4Uv9nFKvMe9jtLoejwfOvDqs/sc35sy9NeMZD3DX7FbQ6RHn
t5+p47vZVXOmkF9vebzwyZq3Hvz1yOU9ntfm6Vxf3vfVh+s4Xr8d9Hp4ruD9
pXAeewCI+05f5+/lMV45fsF/t0Px3Off6r4a0u8H4bwpfU56LtVl/Hfn9T0k
L94pzb7DGXrW7ofOpN580u0HTwnOd3kun2oWsnGy3y4/7hTN0bPH3u+syXvp
OrkH30dz8/0njAevg2bp0G+vRXo9995Fsy/hPOj13W6GLnH8w4rzmx3Ob/xr
4HwzPl/y31/ldXvnvV9OPj2D8xbvpT9vMvFYq8e8HJqtgx02ot+nfNyM7Ysg
N0ewPeXVj5FuH7NzyGvPuC49edg5T/15nbUbsXtqU43kGboK3yP3SJfX5b12
i8mzJ3geL286oT16xvqk1U8Sj2ftP3v52ktY7/bZmbzbTSckS8dy+Emdre+2
XL9DsN3ie8ZwzbsX/z378Lph3g521De21PX9Bvnx84wdZORJ9r326xH3OzA3
Dzx6GeMJe4XnE35DTm5nn2ryJq8e+H9D9tY0w3/7PMvx89+Jlup3HzNzWpZe
H1q6rs97azt97S1cx9v4uVDx9i56bKNJdV5f/158u7wGvqfr6b599e9l3o9/
v/y6zQrvLzyvAd+7Ez4n/zMv3Z9yBtv75g1md5ose7dXvtSLN348u6uGH6u9
+XO5JFvVYfwQ4nxpXt576xcs7oH+rXtnL0JefXk2XrEen+8wnDNwPd57Lj8M
mkF6b7w3FrV51Pvxfuc18F4EnpuHvbSyxwb6H+nosN/33xNXB7zP2TiUjUTe
Otbsu2ieLmJ859Ap6tXT/vl0nM+FXD7ieeTw6TEnFd/NjnnA+L5JwXrFeeby
tG+ecb6G78frPL6nmdeOe/Kwh5ZxnfV6j/GE87FXH7Nylmw82BznPXdHnf6q
ne5xOC+/G/R7xPldDufrnH4R4zzq9SvLxb159ue3rr7eePJaZb6e8J9wfpHM
2O1POfh5Fv5Y8tJLJh5471tNbg5r+XAusG4EdtKPZB/ehojZkznvPvbtmeuv
U84vs/XM3ZPGj/38o6TfM8+3Gn7eU1/fY6Mz8252Hni9maHfjFwesX5SuX3a
Pw/a/RbMySto+92I55CT4zz4iZsb/73iOfL7BmXl4Y4b07Pn2xlzIR9XZ++h
n98/qzjfb/l8fdcaagC2b2/z9uZrnD/tW5NZXt6VdVp32g0U9rPBjjbe04IV
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
L15/RI6LPdYzl5dZPM7HPWYxnjE/+e9POKxXj56dt/P6/QnD69uN/9715f2u
G8H6KcvpIQu3A2brNG/H7akt7KtrGL+95feYm5dwnbN1eK8t8/j+WeHxHU6z
5zwck5ULWC++PI/3fYrVzWbqdA+uXvdz99qnP0n+YPV/1bB+gPr5A8R3q9vb
Nk+n/fW//l/ff7lH2v6Pvh566JFw7cSLQ8sPHQhLmYcP5J/VYnoJ30/rrBz7
6mtcnfvzbmbOH2W3GeC74fCA+U29d8zhQbcv9eWR33pPuujyrNMvFPbQ+Z11
nGfjcB7x3ZTDccfL9fwAsB16AbXsO5rl85p+2XtXwnjy3mG23bDLuWNsFy3e
5eBglj3n3A4Sr2dfPXvxCfOzfh+5e8Z3yc9J2TgzweyrSVieZ+cbiOcD3oOX
dfrstef5+Xy5A3x5ScfvnTC76Uoe+5xtPxYal8L4bsi27TnSBOPtzDxjfFG3
F/zG2bnr6hy+1qNvgvtJv3+s2TrYZYd9esH16yXr9gq+Tnn2aX/NSuL1K/fn
cjjPGJ930O9PWL/oathnU9WiCvsXrcGdNrSjPnHzY+LNjxjfSp69Nub561jH
18yc7M/P+feLGetxh91G5PKco8ez9sdsL15m76Yyf/dYjztqKRu/nXNyGN95
rp5xvtv16sGDrzP3uM+uOc6r3766vMVeN3tuXAZ+A/BcdtxgD5+w3/L+nKHD
vXvEd4P1dL2O9dGjNytzdrrzFnEeM3fq83NWw/e3nzQ438AsfZnlLmE9+Nm2
5b9FMdf12a+65XLD9N/K1+1fvSf1ExZ1zzbl8OKdN9ivGn2n6cVjDg705D2f
NzN05yzGSyHWK4+XPnItF6eQYz/sMb7Uq16Qx5g+udk5V+fxywp75ExPHrX5
p1+0c/KI6ebcwJ4LyLlDgcvXeva13boO180OH/bwX5Csm1zal0ec76Q5urwj
KO+vs5k4NvOOcV731USsJ84uz+P7yEtfy8Zxu2e3Yp4t7pkH710feu9yhm1H
5PEwN58wPun444r3MkOPO+oyxjdKGG+y7HlPzYjuqSnweeTxzXH+Oovxf+Pi
3Ta7AeubFHJ20egpz56vx+MK9ePx4xTjryefPeTgci7e6v1mnl40gKsPSI/e
HhnraU990udPVMcTGc9lBn8kc/l15LtfBzvuWLunXTeJ268lzE+5OBOQlQM8
vhnWbzxG+2zIm284/bjNzNmU83I1Bw+yc2DPjcH0bszGxz69zsp3yPVJ4PJw
nfDZ5+eZ+fmaDx88eA7X5bL096kfj3P23JfvnwU8dzl6qOPz3jvU8vutjq/z
9jqHl4o0/EbNp+9m8wz+K85LD377GYP1DfbnbdP+9RXdM+GKtePhti/9/cna
6Tv4/IT1XeC3w+os4XvJa7f1NGj1ZyzGN9tDV+TvqNezVu/y673HfrCA8z4T
x/SuS75053sXLo++O8flm+E8cvViFg568S7a5+BjYDa+vncG/Pc1Tg/nNLUi
D306NzgXlg7BbJ1wee7NA84nTn9e8uqX8n55v3fWYbz10VMfPvbl0+/0Qvbb
FbPvcPcsa/Mzqt0LzsM8Xd+kw3nMrCfNXvbKg3aPmXiE9x29tKvO9OZHbaU8
HLo99eE9zh9yfB5x/kAZ500+zuPE9eWK74uq4yLB+utEfzc5eNJ/32t89YL5
ot1bH37m73vFj6d8nnfS42wdz9MTrju9n/33iu3A8dcezPr7epq5S9r8aNbs
Y++e/Hyq2Y/onB3vwVl7RObvF8teu1HS4setli9YD/N2GzzWH4fs++Og2yvO
s4a/GGbp2zcVeD1w9nbMyoE9OJ7ny0w983rg+TJbzzi/ZUr9947PL9nisX7a
aPemN7+Fd9pyNg7hvtlnZ3fcRFzvID9+Rz/06UHT7wDuXsqs10wd9O3P1TT5
Bu2obZhevdX402NonkwexzgV/7YV+vYtq46GFdf8ZPj+o49ebnj+W/saf9br
k5+wq+SzK/TiO32mrdlRQ+cGl5iTT/eVtPpBr9vb+bmi987n23qPvdlFC1q9
YCZ470oYP4QYv6C8nrPo0f9uuPzFOsbXuDwfbwicobPU4bw/j7C76MGf15TL
O/1ikGbm0xwd5tSfd1xeMV4y7CO2S88evHdmt7xi/NJB4PKQdZfzdM5m/I+9
+e18js19+WnV7QHnFeMZ5ydVt+9DrLdzdB3M6Wu9+WNwJK2+h2oL7qT1+2iB
y7NeT776JWaW7hAVXXaafRHnzTwdcnuH+Ss81kNmXrp/V6j551f87/bOZbmq
LDnD5agjSucm2p50cbgUEkhC6IIE9tTRUBRQAklIQoiLQAgJVc89cnjiiQfu
saMHHvoR/A498gN44klPHB74AXyN471y5eXPXGsLt10R5XCIiBVnn4sQRVD6
9p/555+VI3k5o9KT1wGdn/144LkfoRdPmA9eez1PuG8PnIf8e+K89ucf5959
8ttf38n76Mh798T23hDTt/McHvv0dO8Na/oJzr233BzJsM+sJzbrPD3P1Et/
/sZ20aen/XeyA4920O5zvv2u7cKTzPubqO0xR+eF21GvvfnZlz4/R9iue3F8
/d4d8OVpTl6s46NvL+6qn/fzdjEHV315icupVi9z+HofIP57r+G1fg87a3z9
/i179zBPB3bhqI4vvfmuvs+zfM5vzzk5uP+2T/N1R8SdvrI/c19+jg0gv404
f32v+fn7cfwv//pvPzWef7RfDw//gmYGrFbfzvhin7xm2+LPeeA5c34Qdfxq
pV6Pel50/KrxvbqLDmv2hccsMB53ywfOV/nuOA+MB2+8cLeYo3P5OG2chyP7
6OP9BtTund8P+V5jfBvvYVbeevCZ8bpXXvfSwQwjZ9iSlr977HvzBeeF9TAT
n2ryd6Rmf0RzLjZP9xpm5T9kvz1oeK/jYQ/dImp4PGFW/vbuuN2Dtw2H6/XE
eq7Zp7zbW7JzTvbQGuu7ev0M8vCE+evAeuO8ZOS06/kWP/3PI9N/EZieT0c4
PQqeuhH26u+DthfWfxvuC8CH5zJ0UMPjeeRY7/Pxnqiun8C6/ZXs1e9IZg7t
sn2er6+yzv9mnXfcPTP/PTF6u/TifWOsn5jeMM5zDV/r8TJ3R3186M2Thhfe
+102F3SnzQuq3yvreQeezNnFXv1XjuswdzcLuv5mrU8v3IdM+1DD7zHjLQO3
nLsrfHhub/1+1uxYn2cN34NefPTf63Ul7/7Mo7xnf3xgvGP+bdhZr9fo4Yu7
cw60pq8evWWZo2e9viw5NqD5Vw5Bd2Y+dZvPpMy4v/nb3/zUeP5Rfv37f/zn
eNj8nf/e9J5m6Lg9M5Jt18r7D2Pfjz80lhf7aaxWP7hT0e/6GGbllfE861Xk
2J+MXbZtwflKvR5m6ZzPvdgvK4w/zbl00QcnWh776nFXTXEfAD37wHlf87cz
FXlPnJfMHPQYnJTMD/V6qtmH+bqhzM8J5+9aTv0UePFI04N/fkq9d/KI9fr3
5KlPfM8aXnpinIFTZNknTz1/lvLrxZO3Hxj/CvbMlqwvavaSfXe7tme2wvlb
gfPYm4c5usT4LjJ+XnbX8P5ZeX2upueftHAe9XrMt2emf80sH9W0+H3+2rDD
Ph3useedN5XZeeB8BzPuLwX+x1l65Lzo+ZHv0+cavu2tVU/elbzfZqJhbuda
Ok+hbw9Z9zo7L9n33+cdN9d55yxl4Sb+iy8P/Xib1LPP/rvdvKtGfHmSpTuN
NXzpz29XeZ9n7bIOF9ZLT17yc2znTem/x8y8ScjNy58Jun5OdP1+i67fN20P
Pj3ifI31Re59/nx/nvV8eqTrN6rhax599e8R22HWDnm/4L14PdHxwvnbXuNH
3z3y3d8HlBl57nV51Ho95t7E3Dvg/sp7NzP85ZWdcXfm5fi3//jPPzWm/9e/
fvlnf001e6lbDKKO57y7AdTmtSYvtXvNwQH2F/V6y7pThsc5O1e/j4wHzkfG
O47B/Jj6zYHtwV9v+jnU5deC545fN03t59wKjR7Zjx4/3VMXPof76aVO4HwA
p8Bz5rzz4WHdAjU//N3cM3/9EOYRhq5Wj3tpQv6d+O/Udy/9+EpfXubkZNc8
cH3osuwx05499sT9A60FmIbnA9ei4UnHL5j/DjV8vWYv+bbM+Xms3Uef/UY+
0pNPu2bJe/e0/czxqdXyP+e3v1TqdOW58F29dqFmj3P0YY6O/HMya6d1fcm7
N23vOf8QnmNf33baqP/+SthJj3480fVXci4u5ec0bJ+4tkkZOrr3RhgPefed
a5iTA/k56ZpYvsP6/hnvuGNPnu6+eZb77py5ZzX7TeK+ZeRZr/4C+vEi55sz
OfuSuZ731vqcvJibg5n4ez4vL3De5eWxL092209yPd/zfd/V8Hui829VcvFx
jx1wvwtavner+f+NTn2mPs/gS5ZOnKkPWXqQg5/79Xnmvq/a3Obeo24v6vkh
81aZHmr8bneO7MXD/NmYAYvaXvJoU/Y6zZ0/Hl/6o0/j3/zd3//UqP4f/fqH
3/7T+OhP/oqy7NPf+xT45gaB8Xlu7oPz27XX9iX3pi3zruK1a73O9wSaWV/L
vZNdNS4HpuI9q8zQTUEevZ+fC1r+njD+xFgZ+/Kx767P4eBnoi8Psu3Vd+cO
MN7l39Z68S1+vD8Uf/2x9uaHquXDzjnoy0u+7dQaz8qnfyf6XmZ83inPfXnJ
sU1sp97Xe+b4gfbpbc+8cD/48GT/HDG/+X935V3Ow9O9s7aXLvflvc9+0DB+
4Fi/wx68Fs7jPJ3j/CboefPfZS2Ps/LPQk+e9fusafiu5N2etZe2prMv3a+w
u3Yd2Y7P+b5AfHdfhzm6mJMzwseHOV9P6gGR9Thbd6XSo8ccXMrI/T6zvTkd
4jvn4EuvnmfqskdvnRjvtPw3vK+W5+o06z5xfnqX5+6fqidP99UnPk/bLruv
NEvHTqHrHet3IBt327jclnuPzC+8eZCXI5wvMvBLT55p+obNs3FvHRxmv8/N
M/0ec3X0/YUD4rzsvpEd9VqvF7br7D1qeL/P1n0etHwP5+u59t6T/ntgt+Ti
G8Mr9f2o92teftH2Oj9Xy7l95zV+w7Spe8fjL77eGn9xdWd87/mfjp+d/mq8
0Ry3v452u+XXN0//svq+fuZT/b1in51+jeyv+xV/fb6W55vpnNh7epo/wx+/
/nPaO5N0fLe5N5qieeYPXsOvANMxu97l2IqGr8zP1XbW1ObpYhYOzszf+Wj1
+LZ5edw5q8xDzYt8xrp2ZqDslJ1yvJc6vel8/VrpybtcnKDbz+J89N4HXV/r
CTj/nfbkT43jjv+o4aW2cWz9hoLxULNHHb96xPdWouEh50D312D2je2Vp4wc
9uhbVr1xfYj7Z5dD5u0SeuybnxWLrONphv4gMz+9rkzP3B/wXrqBcj4fqdXL
qdbr54HzkI3TR8YD54nxcedsodftUD8e5+q4Zt+78bjC+fvM9ZZZuXj08/eh
rt/2uQdF/b5D/fwa2/1OeuzP2156yMgbhdo98J7ycNP7qVZ/LWXaC9/jnN33
wHjz4ndq9ftvRM/D3lqq428y63fy/LzM2vFeeurRS36OzNJPxyPZuJCDG/Jz
5HXS18T0nVCv33Wcn7xhNX3bV78HNfw99tzh/puXRQ0fX0t+QGU9evJkv82c
efS66sV/5ffbaaZOekyMT733XMfP70md/lXJ9lu460Zm8DEzF3fi+Jk7n6Vj
vXpjPfbw48wdePXcXF6Y0Yv5eJKlE3U81vahpt/n99LPuk7z5//i55t5b5s7
j/g8hsfHvOPtkX8tnrQXDnfpDb8r98XR5/DE/XnhPfx+f7A+/uLGfv6ZDnz3
HK/MzBVZ9Yftmj3yPup757mLPjybpytybePeWZwJDwx3x83RGQe93+6TZeOA
NvfMPS1YXMzJVTV+rXcfavZy3wD3B74fHx4lxw9n6vQeJ84YfHJaHjPvZC8t
eu7imQqc1548/Rs6NM5LHUAyb5x2t/y7oTC+NjNfcF5Y/zJfc849XQPvjfVR
z0fOR8YHzpP3Lmj5ee7DzyfOP2fm1+r1JeeL2fnkwZv5fH++U3jqA7fjdWR+
2+eTtifW45xd4PqohfdOywe/fdGn5+eJ4deesreO+U73Ak90vo6895KH3zx2
OC9XWX913bQ9sp5r9GmfzcR12G1HdfndvJee99RSfZ9q9ptwtuyk+v0MaHrc
b5fq+DfywWzcybSnljx5OFu36+r3yHzJwp+c3YWZO/Hbi65/Ybm4ju+1fNzM
9MnCf1/ZaXcr9Ok1U+dN1vDE8X2n5XGfnfnw33A+nt9th7q+H573hOELb+1a
e/dvssZfPFC2S23fWB5n64XjotfzPUO50z7O24VcHcf+d07bD6HOL/vbBsI8
9O1Bhkicz9PXcdbcZfTEr/kw7sPXUu77ypHTzYNl8RRCHX35sPgeRb1da/My
L3cI83Oo6w/D7yH8PvL++jNm6tpn6MI83Z2g3WMuzupJ4Nln/PVO639i/92J
9eLX4Brq9VOYL6/a2nviyn1z0XtX89edjmMNoPT1wfcCL0H53+X787IzTv8e
9PcQDW9Z9lOq7aU3ArV7ybUlTS+eu+CvT7Ug3i9L1+lrtDf/Lvvq7+CO+cj5
WK+X3HrLsnWsT5l26RDv026b1/l18N4NFtIRzu9o3b6o2c9DXx4zbtVjb6ev
nGf+g5bvKt/PZn304FX1vPbm4YRZuk7B9M8wH/v8Wr9PzH40ru2nTTzvCNcv
A+MvPwTWwy67YraO6/i8myb75nLG/cTIvPil995m6mWPTYfr99KzL7S95OVc
x548aPs0g5d22DVsvUA+PajZu2zcLZut0xr+c6ft/Z4b0/iZ5Xsu7z7X7kPu
vfj1bmDPftf0e3XfjbDd766fLLx64MkPnC9ycsV/d6vCeND5lpf3yvvvtCYP
j+zHy7V73HtjO+qtZw8z98z3HtToUdfLc5+dI1570O5L3IuXGbuiDh88d8D4
YXM9bK6HKR83nRX2ozPrdUcrPTfmqz7m/DzH2DCPlPZ9XGyuL3I+uHx+sHJE
J3Iz73VpPt880lnNZ0rz/I6Mw21cx/yb5cD6mIEjvHe++kp9vuapi6/X+O76
8vJZqckj5ytZOJh3V8t3RRYGv57LsnV63nr0XsMD70XTE4v9nJ3nfI33ZT/e
+e/ufvL1Asi+83+umpZnzjPHbeduYLzLwqnM0jnO53+r6r/j3Lsp8dyl1+5K
7v3heIg7ZmUnHTJ+GWr2oSffX/L5d4W3fgkz61nHoxefPHmJ8Tum5xd22zmv
rK/MyCvjNxrGN0cZv8Vsf2a59jpDF/NxKoxnznf5lHX7ioZH3iv/z2J6fC3u
qoH6/Sj67yuafhRZXzuSmfdt1upX81450uUuA/eJzdpdMd4L57F+32HO6y4c
zdJZh913T91MnV3brB3tuqHDmp779sj5C9ObWrPPbN/KmfdxX73W8vPsHfX8
m2tj+U5Zp6eZuxfK/kLfN9q+27a7XnU9ZOTNep0/WfC9vM7ePNthm3n/ttH4
b7SO320YLvn43fnX9Bz32mIN3++/sT11mJOHPjx97bb17P2uO8vXcX179d97
P73cH+isnWM+5uAFXb/InjyZ9WbO69fSTP1x5h7U9fUeQLW+Hcvjkbo/6/Q7
MqOUGC8HOE/3B0chT9b4OyV8T7xfzbw3zoP/fQXuRSS3FrNt3S559NN/rPvt
3H3EGadNw7fqd+n/fjTGu7x67McHf30tC0fr0UHv62ePy+x67csjS08961Hb
F/66MzR8jfWhDiAavuA89uSjvy5ynvh+AvV58defFH35/Hf0EXR99N/ZHJ2r
18teIqzRr/E8PfXmkfHvxgNgPPXXVcvH/Ls3kF0vuTis5ReZ9Ut5hg5z6vOM
PO+l48z79P6gyLfDev1zz/bqfjrR8Rt66H3V8aE3f7OSizMrffnI+cfK+irn
ZTbO9emR3/iZ5owC50PvvnMJNX3IukP//ddwHzB6EGr18TGeb7OOv8q19VR7
p7x78ec9Nn+ect5m6uOxDJ3M+7iTHn16ouk7kIGrzJ/eyjV88enRfrvn9DzP
0G/knr3qe9PwttvmudXvi1n77dCr3/W6nr13X+meepitdz370n/vNb0xfjJq
e8nQhYxc8eFPNo+T85iTm15PHD9ozhuXoSNevK7rzQPf5TXsyeseO+Q31+dF
uwPn1XcPM/X4XjVPB+r5ro6PHju8XvIZ93GvHXG4YUma7cY9eFnXc37O0ntm
eP49hfHD5Xfhuexu9zWDftqNy6ynw56mi7ST1ervfamDL1kNfrCc/ezE+bX8
+SnJ7VONjf125Pj7wH3jv7ufAE0/QMY7zle0ehvvaz67mv+OdtXFGXnMwYlz
8jAj31avr2W6rx4Httu17a9jxtd0tfL+xDMevXxFHb/OdttX4+8NCh8e6nJ8
Lt47qGPk/bL83wt5OFnnlx576cnXOf+B6vU+x/4w/ztdTTX6Y9498z738CXj
tsp48d8J47Oe7yvj5WCN/tUYZ+gGBefDjHzS74nxnJGXX9/mE7X8ttfwt2p7
6TaU9ZqNozo+sr7is58VtiPnn5zN+a9/EXgetXzkfXyt7dR2zz4wP13cUcuM
71Dd/oFq+c5lYD9p+/wesVvq7GlmbgS76mq595fNg6f9eTqg8a98rzX8Dp+J
yh57mbMTzsuh/Bzqy29ATX+Ldt1Rf534LrznOfs4Xwe8zz7+55arcwNq+Teg
fs87azUjx9XucXetr+1jXp734r8o6/iq5S0nn67n98e+p59Z372VWL/HOv2A
tb3wHzLxQ15e91bFi7dQ6nqbqYfcHOE/1+Mj23viw0fOO9bj68GTp1n2WLeP
vfmDKuclQ0f1uXCetL3X91TPV+0Ozyuc1zo/7sNZYZZzr/1nPLskvfw++d6M
+3nPK+t5vi+4KP4o5az00t+XmTfLh9XX3Px7zLJ1PvpaVk5Lzb7NT9/yOMB+
fMzBkXq99OSR/WtBs9cyckJm3sV0kPEh967genFO2GP/A8zgnXo9X+m9V316
6vM7gV78qf9edyuMh1r+FNcltC+/xjV78fDFvDvZFXDXvA5uls7tnA19Jsqy
PVJvfuL7AGboqG5PXPc1+6FyHr13ifN5Tr6vnI/9eNlLx4xfkpm6yHnU9ale
v5Nflxp/0vM4J1+r06v3DnfN8xyd1PCV8Rt1LR9r9bNBxyvnE+Mft+j5s1j9
u3C9xvhQmxfWy76aYrYONX3w4cl9QMPkL69lBmff/QPOvH/k8+5HMmv3ROv1
8t6E6Hep31/FOj7W8LlnT98vs75zzfx5HZixI19eys1Nh2bsODdHZupl59yM
aHuo489sWb9+2mt6ZTxq+hmbsXf1+9ifvyn1/Mj6F7rzrou8x7n65vRmoXcv
/Xnt0ds+HPPf4Wz9y1yjp5m5rOtx353uvcHce+H+QrnbVvjfD7pesvLUn4f+
O9eb9317zMqP3Hc78KSfr/P0b20nHXK90PJwfwDXouGL+j2+Ht5X5nMtf7Ds
6/fC+8xb861dbH5m5h67eO/CvlfMp2leSztkpS9f1NBRgzuuR1/dh7H32OFr
h6rdir7+nQrnax77Wo2+zXMXe/HVGbowJxb78XfhvfgIubgl281jX83AKfR8
9rnnfvwPquWtP39ar9cj/8M+upoPz9Xmi5696PlT0/ZSs+f+fK47nIzd/Jzs
CNB+fCXLXrJwHOdzBo7cg9muuUPdO6u9+hXQ88veY+8YDx48x/ilfaflB0uw
q0YYv7hnfI/1e/HfiY4n3u/l/XS0Xz7W6rcqfXnU89yXn0MNHzjvavUwR1fj
/A3j/GTNhzfCOjvU3kdns7z8GszHu0/8LTU9aPe0c/aSZN0+rPBdDn+esmpZ
Z195pH498+Mx6yUHF/LxJnhXve6wu/x4XHjvYZbe5u3WVcPr9776lD34OR+3
88267rDLjN9UL/7Eddtbm+4FiNWJu7TLfpO0ve68mdlknm+F/fTA+pngzZP6
veypp731kJWjfnvh+x4fX9PXDPyb1puXWn6v5terZuTtG//TIca/YV0PdXyd
p8dM3Mz3vubZ59Nlzd4F1ndhny1peZqtB56j/057+JHzoOn1694G1ovON+9e
n3Ps6XFJMm8j7wP7mf/DyHj+rD0e+NcX31WeW21f2c51+/xe83NzSRiZOf/7
a1nTF7yU2oByHPvzov+N07aHBnbSuPsF0faV+TnXj694+CC31u4vWubia7Nz
tWzbojYf5uWxLy89d5d7Bxyv9eTBu5c9dxUtj7rZMRW99ieOtdaT/wG0PLC+
YDz67cIOHPf95PnJuKjXF3l4oWYv/jv+vY3x4r2DfnzBeajXp1r92pFl3a0d
WSZu3FWD2TgpFwfm6QYwIz/kI3zvwxxdv8ivB74vWb3ec174Drpe8nBux71z
23mXjdwfEN83Wb9jTz7smSfGM/eLvrx47ddhd43V7bEv39WMHOP8ZAvnO0WG
bWS25OL99zR8J+bpjWBePtbvk/++yLd9CHx/APPuj4n16s2//JDr+pKJV8nC
1QzcSta9ZOHRThus41tuzgTU8Ceumb4vZ+vXme9bwHzbb3MBeE86Hufi5fUZ
P0/v+vQzVtMv8nTQf0/XO7rDzvXnxaunvDc/vmp6ycpF1rOu783tccZ9Yj96
85D7XMdPfjuqze/x8Xoe2S4ZuE7bB13fZdbL6WlmnrEdM/BV94MnH/15Nd/e
Z/PxhfdLxvneIuyyqZ0lyL1HlkutXnU7nyWs52e2o9YfLNnn7D4gsZ45upRP
Zi1wHuvw2G9HlkOd32oAWIcPPjt9r43pNa9fmBGIe2bbcnDEM9+q3eX6ozE+
ct7tooOe/N2gz/WEnj766qUGID15naUzn311t030w7lH20lrOv6Hse6ciz35
Wh6e8/pVegQ4L6f195rO9315uy841XuhYdGXP3Za3nNe/JAfjO86W380ru2k
w92zlJezemh8xyycoOP7MEeXZ+NCfr3unT2D8a5e7zmPe2aJ87d4Bx3P1Pfo
M2cxfsMYj1p+rtaXL+v2OC/fhbl58dlPzjwmTX92Hl4Lu0ch034U7gNqX1fs
o6vsuuE98x3ZTSczdkmrk5fu+4btT/hzct9g9wMd6dkr71N/XvT8I1e7nxgF
D95V0/fCeNpHf1U0vnjygPWo7wPnO7wLh16Xnn1iPXB+grPyvuJaft49x3vp
KU9ng3bcEfNnYs2+ru11rl7YPY277EN2Tujd2y77xHPs2TPng67vQb++52bv
+JG88gfku+vNBd/+PO64BY0vrNcM3Fe+pi81fMi906O1e9b2MIuH7/Uc6yFD
J9TszduHvXrYc6s7b9+Ctse9daLhc60evXmi5wfA7+GSZ73N3ImON95jLX8Y
7gXU786aXjQ1cf7ux4bzH43xquuR9/k14vya1e3VRyc+uxXkO2TXxvq+7ItH
7Y4751oz7o7saGb9GXPxxWx8O9+Hcdcs8tzxP/weoQ/v99eJjg+cdd67Sq3e
9cbzZ9t78r/kczr2ebllDT8yupqDd69WnweWg0dviP479NcD14eg5dV/p/l3
wneo1VMP/wRycA65Xo+cR13/bix59rqfjvvyZR7Oa6vZu72z4LsTzi+2cV7Y
bn15zcS5ve33ydOOWd4zK+wWjU/+vOeVej177+YlD2djXM+/exr68WWtXvU8
Mr456bGs238bmF3uqem0crvt/qA2Nxc5L3NzjzgH54H27skPlxhP75V8d6y/
DKy/8h3k4gHvw/660mePh2fn4bnO20nt/tpTOKl2v8FaXrLxn9mO+ut1XZ/P
M56Xy8zN2ffM+ri/dibX8i9AD/8C5uKT/54zcSEbv8jNc716qOHP+vr9pLB+
tmR9L87YUw0gzci9Zf6/YO2fvXiyx15eQ+ZHbW+ePPDpFdm25tGLPXr15kne
js7dx313b32tPtb2nSfPduPka+C78B6y8Po4W7do9wPeaw9eu8V3Tuf7Hn24
Br9evg94DzP2h+rJE84nxpOevwPsZM98OlMF5z+SDy/v+PzAzDZP/cBpdezd
R/0OnI+75pDrzmsH+t7lAgnHj0rGu7k5y2Qpc+7CvPzaZz6L2Xig35H1quHX
8MS6eGXvq2blfrJ7BanPx/sGYvoPzHrw6MW5+uL3/+Tm8cv7i1Cfd/m2zPdV
YfonX69nj4KyPXjsi9w71fBSA8i6XnKWBsz4KdhJp9for6c8+8j4t57tfIqa
Pc7KOy0v/rsXLUcycbyWpx49cj7W6hfyPQEd0e7pSB7enGTXt3E++u7WS77j
3DzreGF9nfOyS6bSS6+y/4zXVfvX5ugrR/z31INvtLvyPfjsL3umo6bvXJbz
HefZP9JT1vF9DR9999nD73mPc3Yd9OGLF4/22mxlrjudX2G9aPribLK23uM5
ug3z582gPy/sqqd8/efGeZqN34M8Heb8jLB+x2t716vPml73290MvnvW7Mr6
OeF985j4nmbm4B4g1fbzDD377rm+35sP/fqib2+sF+9dV/fVi+Z/rY/Od4/c
XwB9D9n3pO11D07gfOjr24571PXMdpm/C337wdKBr+XD3J2bvUNfHtT0B+4a
PPWJ54vGfb1X0Nfeqx8uPx4R14jziVky0ybs5Nq7efEPrT+fPNOrOGcPGT2S
a1fJri3za/lneGT7WZ76kPenerDNc7eKObYfvV5XXh8Fj32F54VfL/jw3aN5
7dCD59kZtHzw26HnXfU73i8Av+0aWB/q9XE+4GKN79EvIK9V8oBsFt60vOO8
eurLWTqXhUM9ecnKg9687JrTDCes2R96xt8BzqcDjO9Drd5xfhk4D7tmMRPH
c76F9QuWb9sTvsshHb/Nnvst8N/xrBz16re1vp85z/35uXpf3uXj3LSevHF+
vdT06rPnU+F8p+Z9C5zvBPYXdXznscPHeL8QevQ8P59Y+iX557+zr70MPXhg
fXFGULfX3NtH3LOPe27k+ol68Sauxjk7yM65Jtl4MkOP83Y5Q0e0fIf33JGe
dz78Z4UnLzJePHmZ5S9y336aawAtfXv15E2X9XvaV5uydGZ2lPWq72/uOE++
9eshLw/m7XSfHWTmZdazH58Y/zo/lx5+1av3Uuv9ou174t+T51S/h9o7aHu/
w97n5eWePefiAuvz+288+4Xjyv03Qb8D12G/rXH9ne/dI+/Ro1fj/SJ694zj
A9Txi1afHyjjzYNnj+bz0/elR8+z64lnP7t7TNz2njb0whlzE98ukp6X+abg
n3de/TArL/cCun/mUL/HwPUJoC4PnrvBSmA7evMqO2cHXKun2XjsCztWH8EJ
bJeZej1x/k68+DYf77U8zJ5J7m2Rlxdr5ujlg3q9cL3Q8qee9VjHRz/9vcj5
2I+H06rl7c/kNLvW8aEXrzV6zLY99lp+9YNpePHSC9+lxrN6qJwfxL58yrXl
bFvLwmHWLx+MsR/fx/x6ZLzsqkHO4046qde36nlk/LbpeNTy88/rnA+z8vSe
9O7nPsf5tnzbCuOB85M32uv25+f8nJ/zc37Oz/n5f3l+/X/gz3B+zs/5OT/n
5/ycnx///Pq/ANOICCs=
    "], {{0, 366}, {506, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{506, 366},
  PlotRange->{{0, 506}, {0, 
   366}}]], "Input",ExpressionUUID->"3a67c0fb-9e74-464c-935d-6dd5b7c23ffe"]], \
"Text",
 CellChangeTimes->{
  3.7893878325404525`*^9},ExpressionUUID->"0f0fe2ef-ffb4-4b75-8946-\
39de599f6afe"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"aa921f28-2b3d-42b3-8af8-9817ced222ea"],

Cell[CellGroupData[{

Cell["\:5b66\:4e60\:76ee\:6807", "Section",
 CellChangeTimes->{{3.71994775976054*^9, 3.7199477622405987`*^9}, {
   3.720191968879251*^9, 3.720191974055264*^9}, {3.720894915481367*^9, 
   3.72089491754312*^9}, {3.720897534619431*^9, 3.72089753512813*^9}, 
   3.7269459274619637`*^9, {3.727461147456134*^9, 3.727461151826571*^9}, {
   3.790003948039835*^9, 
   3.79000395284108*^9}},ExpressionUUID->"c8b36510-120c-4e68-aac4-\
9a4c7d528c9a"],

Cell[CellGroupData[{

Cell["\:8868\:8fbe\:5f0f", "Subsection",
 CellChangeTimes->{{3.776515771873722*^9, 3.776515778594734*^9}, {
  3.7765774794575233`*^9, 3.7765775017605886`*^9}, {3.7765775520261393`*^9, 
  3.7765775803962517`*^9}, {3.779797244963832*^9, 3.7797972466330547`*^9}, {
  3.789798803595317*^9, 3.7897988051731405`*^9}, {3.7900039625989103`*^9, 
  3.7900039648955927`*^9}},ExpressionUUID->"1d223e45-6ec2-43fb-a61c-\
cea7a54eb4b5"],

Cell[CellGroupData[{

Cell["\:539f\:5b50\:5143\:7d20", "Item",
 CellChangeTimes->{{3.739097187913869*^9, 3.739097191392139*^9}, 
   3.739097678237544*^9, {3.776515787519165*^9, 3.776515788369754*^9}, {
   3.7765777107800903`*^9, 3.776577725059293*^9}, {3.776578368050127*^9, 
   3.776578372363997*^9}, {3.78979881226554*^9, 3.7897988147650623`*^9}, {
   3.7899658401687098`*^9, 3.7899658409606037`*^9}, {3.790003970102603*^9, 
   3.7900039745380588`*^9}},ExpressionUUID->"502f4891-0a79-4f27-861b-\
9f8c11e3878f"],

Cell["\:4e00\:5207\:90fd\:662f\:8868\:8fbe\:5f0f", "Item",
 CellChangeTimes->{{3.739097187913869*^9, 3.739097191392139*^9}, 
   3.739097678237544*^9, {3.776515787519165*^9, 3.776515788369754*^9}, {
   3.7765777107800903`*^9, 3.776577718280579*^9}, {3.779794253106132*^9, 
   3.779794265872705*^9}, 3.7897988193433685`*^9, {3.7900030162620487`*^9, 
   3.790003017280507*^9}, {3.790003997660858*^9, 
   3.790004004941975*^9}},ExpressionUUID->"67ebb6ce-8e87-457a-b8e6-\
ecf3ef0bcf7a"],

Cell[TextData[{
 "\:4f7f\:7528\:8868\:8fbe\:5f0f\:ff1a ",
 StyleBox[ButtonBox["Head",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Head"],
  FontWeight->"Bold"],
 "\:3001",
 StyleBox[ButtonBox["Length",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Length"],
  FontWeight->"Bold"],
 " \:548c ",
 StyleBox[ButtonBox["Part",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Part"],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.7765360917722263`*^9, 3.776536092331378*^9}, {
   3.7765367845703487`*^9, 3.776536843877664*^9}, {3.776536917995006*^9, 
   3.776536965624295*^9}, {3.776578407958171*^9, 3.7765784126242037`*^9}, {
   3.7765792403131857`*^9, 3.7765792403133297`*^9}, 3.7897988233199897`*^9, {
   3.789965674002101*^9, 3.7899656787026367`*^9}, {3.7899657724633427`*^9, 
   3.789965780059112*^9}, {3.789999833834548*^9, 3.789999846249793*^9}, {
   3.790004014545463*^9, 
   3.7900040258100142`*^9}},ExpressionUUID->"23223b3b-e770-47fa-8381-\
2b45115be187"],

Cell["\:8868\:8fbe\:5f0f\:548c\:7528\:6cd5\:7684\:7ea7\:522b", "Item",
 CellChangeTimes->{{3.7765360917722263`*^9, 3.776536092331378*^9}, {
  3.7765367845703487`*^9, 3.776536843877664*^9}, {3.776536917995006*^9, 
  3.776536965624295*^9}, {3.776578407958171*^9, 3.7765784126242037`*^9}, {
  3.7765792411368103`*^9, 3.7765792443154507`*^9}, {3.789798829006406*^9, 
  3.7897988312559743`*^9}, {3.790004037731172*^9, 
  3.7900040486418953`*^9}},ExpressionUUID->"ac1fbbda-a67f-40a0-8912-\
9ebf3a157a52"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:8d4b\:503c", "Subsection",
 CellChangeTimes->{{3.7765360917722263`*^9, 3.776536092331378*^9}, {
   3.7765367845703487`*^9, 3.776536843877664*^9}, {3.776536917995006*^9, 
   3.77653699688404*^9}, {3.776578415967952*^9, 3.7765784242222643`*^9}, {
   3.7810411215708866`*^9, 3.781041126787777*^9}, 3.7897988571572876`*^9, {
   3.7899657134153366`*^9, 3.789965753606475*^9}, 3.789992565435255*^9, {
   3.7900040575677724`*^9, 
   3.790004058932989*^9}},ExpressionUUID->"eb21ca4c-6314-4208-981b-\
a7af39ca1266"],

Cell[CellGroupData[{

Cell["\:76f4\:63a5\:4e0e\:5ef6\:8fdf\:8d4b\:503c", "Item",
 CellChangeTimes->{{3.7765360917722263`*^9, 3.776536092331378*^9}, {
   3.7765367845703487`*^9, 3.776536843877664*^9}, {3.776536917995006*^9, 
   3.77653699688404*^9}, {3.776578415967952*^9, 3.7765784242222643`*^9}, {
   3.7810411215708866`*^9, 3.781041126787777*^9}, 3.7897988571572876`*^9, {
   3.7899657134153366`*^9, 3.789965753606475*^9}, {3.789992571853146*^9, 
   3.7899925891400642`*^9}, {3.7899998531164913`*^9, 
   3.7899998588894053`*^9}, {3.790004069601868*^9, 
   3.790004085481759*^9}},ExpressionUUID->"9694c383-6616-4257-ae2c-\
5097177c83a2"],

Cell["\:6e05\:9664\:503c", "Item",
 CellChangeTimes->{{3.7765360917722263`*^9, 3.776536092331378*^9}, {
   3.7765367845703487`*^9, 3.776536843877664*^9}, {3.776536917995006*^9, 
   3.77653699688404*^9}, {3.776578415967952*^9, 3.7765784242222643`*^9}, {
   3.7810411215708866`*^9, 3.781041126787777*^9}, 3.7897988571572876`*^9, {
   3.7899657134153366`*^9, 3.789965753606475*^9}, {3.789992571853146*^9, 
   3.789992585039307*^9}, {3.790004105190456*^9, 
   3.790004108547531*^9}},ExpressionUUID->"828edf58-04b2-40ba-991d-\
c73404d87da3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:4e00\:4e9b\:57fa\:672c\:51fd\:6570", "Subsection",
 CellChangeTimes->{{3.779797261156719*^9, 3.779797263473893*^9}, {
  3.779799113209724*^9, 3.77979911751845*^9}, {3.789798848799532*^9, 
  3.7897988528143663`*^9}, {3.790004114643046*^9, 
  3.7900041204497046`*^9}},ExpressionUUID->"85a71566-c653-4400-aeaf-\
2031eee1e047"],

Cell[CellGroupData[{

Cell["\:8fed\:4ee3", "Item",
 CellChangeTimes->{{3.739097187913869*^9, 3.739097191392139*^9}, 
   3.739097678237544*^9, {3.776515787519165*^9, 3.776515788369754*^9}, {
   3.7765777107800903`*^9, 3.776577733511861*^9}, {3.777700772906725*^9, 
   3.777700802110635*^9}, 3.778499648365648*^9, {3.779794317632127*^9, 
   3.779794317992456*^9}, {3.789798861112175*^9, 3.7897988715791473`*^9}, {
   3.7900041268750353`*^9, 
   3.790004129714391*^9}},ExpressionUUID->"360d665e-a899-4ef4-9d08-\
22d5fd37f825"],

Cell["\:8ba1\:6570\:548c\:5206\:7ec4", "Item",
 CellChangeTimes->{{3.7778089897369623`*^9, 3.7778089904506273`*^9}, {
   3.7810411370660686`*^9, 3.7810411394630795`*^9}, 3.789798876187454*^9, {
   3.7900041487274885`*^9, 
   3.7900041557694483`*^9}},ExpressionUUID->"412d82b7-0e18-43fd-8fd4-\
1533235fd9e2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:5217\:8868\:4e0e\:5173\:8054", "Subsection",
 CellChangeTimes->{{3.776578472957322*^9, 3.776578479116289*^9}, {
  3.7897988841545277`*^9, 3.7897988872163677`*^9}, {3.7900041650771103`*^9, 
  3.7900041706349235`*^9}},ExpressionUUID->"b03d28ff-8a6d-434f-b650-\
a7059054374b"],

Cell[CellGroupData[{

Cell["\:6784\:5efa\:548c\:64cd\:4f5c\:5217\:8868", "Item",
 CellChangeTimes->{{3.7765360917722263`*^9, 3.776536092331378*^9}, {
  3.7765367845703487`*^9, 3.776536843877664*^9}, {3.776536917995006*^9, 
  3.776536965624295*^9}, {3.7765784859992523`*^9, 3.776578492139163*^9}, {
  3.7897988953241386`*^9, 3.7897989033535414`*^9}, {3.7900041771172075`*^9, 
  3.7900041863779097`*^9}},ExpressionUUID->"ec4799bf-4a50-43b9-83c7-\
2771c5782d3b"],

Cell[TextData[{
 "\:6784\:5efa\:4e00\:4e2a ",
 StyleBox[ButtonBox["Association",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Association"],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.7765360917722263`*^9, 3.776536092331378*^9}, {
   3.7765367845703487`*^9, 3.776536843877664*^9}, {3.776536917995006*^9, 
   3.776536965624295*^9}, {3.7765784859992523`*^9, 3.776578494377853*^9}, {
   3.776578640401319*^9, 3.776578640401538*^9}, 3.7897989014947805`*^9, 
   3.789999866612726*^9, {3.7900043208277855`*^9, 
   3.7900043216573157`*^9}},ExpressionUUID->"8fbbeda6-4caa-4f10-87e6-\
7062a1635adf"],

Cell["Association \:4e2d\:7684\:5404\:79cd\:64cd\:4f5c", "Item",
 CellChangeTimes->{{3.739097187913869*^9, 3.739097191392139*^9}, {
   3.739097227694779*^9, 3.739097228342688*^9}, 3.7390973006029797`*^9, {
   3.7810411625477347`*^9, 3.78104116514668*^9}, 3.7897989091046095`*^9, {
   3.7900043269622684`*^9, 
   3.790004341120147*^9}},ExpressionUUID->"41955664-2d8b-44ca-bc67-\
acef94a99442"],

Cell["\:521b\:5efa\:5173\:8054\:7684\:51fd\:6570", "Item",
 CellChangeTimes->{{3.739097187913869*^9, 3.739097191392139*^9}, {
   3.739097227694779*^9, 3.739097228342688*^9}, 3.7390973006029797`*^9, {
   3.7810411625477347`*^9, 3.78104116514668*^9}, {3.7897989091046095`*^9, 
   3.7897989202115865`*^9}, {3.7900043483080254`*^9, 
   3.7900043558866787`*^9}},ExpressionUUID->"98be4efa-78d9-4552-bf7e-\
93e44ace64e4"],

Cell[TextData[StyleBox[ButtonBox["Dataset",
 BaseStyle->"Link",
 ButtonData->"paclet:ref/Dataset"],
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.739097187913869*^9, 3.739097191392139*^9}, {
   3.739097227694779*^9, 3.739097228342688*^9}, 3.7390973006029797`*^9, {
   3.7810411625477347`*^9, 3.78104116514668*^9}, {3.7897989091046095`*^9, 
   3.789798923367152*^9}, 
   3.789999872889821*^9},ExpressionUUID->"c47cd379-c62a-46d7-9271-\
c96cbe166342"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"50f12808-627a-4632-b6f2-477afd1ae009"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.779798991137438*^9, 
  3.779798992956984*^9}},ExpressionUUID->"c3c75d1f-b9f9-42c7-a54d-\
66f6ebdd8e48"],

Cell["\<\
\:8868\:8fbe\:5f0f
\
\>", "Title",
 CellChangeTimes->{{3.779798973122558*^9, 3.7797989759853153`*^9}, 
   3.781015233574415*^9, {3.7811266106631126`*^9, 3.781126611906399*^9}, {
   3.788610575705429*^9, 3.7886105776150384`*^9}, {3.790004364553708*^9, 
   3.790004381848794*^9}},ExpressionUUID->"ab2440dd-06ca-4e2b-81d5-\
178f6b352ea9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"eb5308a7-8036-4f76-8eed-61cf47d6c4f2"],

Cell[CellGroupData[{

Cell["\:539f\:5b50\:5143\:7d20", "Section",
 CellChangeTimes->{
  3.7777047916430187`*^9, 3.7784996309822063`*^9, {3.781020874143722*^9, 
   3.7810208795474486`*^9}, 3.781021153902781*^9, {3.7831883377811456`*^9, 
   3.783188341941863*^9}, {3.7881098166409426`*^9, 3.7881098209064913`*^9}, {
   3.7893200357916875`*^9, 3.7893200368249598`*^9}, {3.789965855218696*^9, 
   3.78996585598466*^9}, {3.789999876976453*^9, 3.789999877730946*^9}, {
   3.7900043911774464`*^9, 
   3.790004395678867*^9}},ExpressionUUID->"1afc5a83-db0e-45e8-b457-\
2c174d831340"],

Cell["Wolfram \:8bed\:8a00\[Trademark] \:4e2d\:7684\:6240\:6709\:8868\:8fbe\
\:5f0f\:6700\:7ec8\:90fd\:662f\:7531\:5c11\:91cf\:4e0d\:540c\:7c7b\:578b\:7684\
\:539f\:5b50\:5143\:7d20\:6784\:5efa.", "Text",
 CellChangeTimes->{{3.777558199215016*^9, 3.7775581996643085`*^9}, {
  3.7900044354909453`*^9, 
  3.7900045107468095`*^9}},ExpressionUUID->"0a151648-8df0-4806-a5aa-\
e561241002ec"],

Cell[CellGroupData[{

Cell[TextData[StyleBox[ButtonBox["Integer",
 BaseStyle->"Link",
 ButtonData->"paclet:ref/Integer"],
 FontWeight->"Bold"]], "Subitem",
 CellChangeTimes->{{3.706454934425679*^9, 3.706454943056511*^9}, 
   3.789999897217484*^9},ExpressionUUID->"bf117b47-cff6-45e8-a061-\
df9dc5ffecf7"],

Cell[TextData[StyleBox[ButtonBox["Real",
 BaseStyle->"Link",
 ButtonData->"paclet:ref/Real"],
 FontWeight->"Bold"]], "Subitem",
 CellChangeTimes->{{3.706454934425679*^9, 3.7064549545627117`*^9}, 
   3.7899998995491457`*^9},ExpressionUUID->"af41302d-e314-426b-859d-\
a0203c30c63b"],

Cell[TextData[StyleBox[ButtonBox["String",
 BaseStyle->"Link",
 ButtonData->"paclet:ref/String"],
 FontWeight->"Bold"]], "Subitem",
 CellChangeTimes->{{3.706454934425679*^9, 3.706454971712401*^9}, 
   3.789999902208001*^9},ExpressionUUID->"5021cf23-5288-4c93-9a5a-\
f7cc209c15ac"],

Cell[TextData[StyleBox[ButtonBox["Rational",
 BaseStyle->"Link",
 ButtonData->"paclet:ref/Rational"],
 FontWeight->"Bold"]], "Subitem",
 CellChangeTimes->{{3.706454934425679*^9, 3.70645495688863*^9}, {
   3.781021719121876*^9, 3.7810217191328807`*^9}, 
   3.789999905656048*^9},ExpressionUUID->"d32ed35f-d711-4075-a57e-\
5012d6e25588"],

Cell[TextData[StyleBox[ButtonBox["Symbol",
 BaseStyle->"Link",
 ButtonData->"paclet:ref/Symbol"],
 FontWeight->"Bold"]], "Subitem",
 CellChangeTimes->{{3.706454934425679*^9, 3.70645495688863*^9}, {
   3.7810217205781703`*^9, 3.781021721571662*^9}, 
   3.789999908756399*^9},ExpressionUUID->"c4289f68-854a-4e9f-84b0-\
ba9459686ed0"]
}, Open  ]],

Cell[TextData[{
 StyleBox[ButtonBox["AtomQ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/AtomQ"],
  FontWeight->"Bold"],
 " \:53ef\:7528\:4e8e\:68c0\:6d4b\:4e00\:4e2a\:8868\:8fbe\:5f0f\:662f\:5426\
\:662f\:4e00\:4e2a\:539f\:5b50\:ff1a"
}], "Text",
 CellChangeTimes->{{3.777558437404812*^9, 3.7775584725665083`*^9}, {
  3.7798020333936367`*^9, 3.7798020340038157`*^9}, {3.789999914260516*^9, 
  3.7899999235264463`*^9}, {3.7900045203543034`*^9, 
  3.790004540534734*^9}},ExpressionUUID->"bee58f2d-6c96-4d76-a16d-\
fbaf95325556"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"10", "  ", 
  RowBox[{"(*", " ", "\:6574\:6570", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"AtomQ", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", "%%", "]"}]}], "Input",
 CellChangeTimes->{{3.781021638036559*^9, 3.781021657327436*^9}, 
   3.7810223197006445`*^9, {3.788109970098915*^9, 3.788109970528349*^9}, {
   3.788180675301995*^9, 3.7881806877048607`*^9}, {3.7893233030460835`*^9, 
   3.789323317436576*^9}, {3.7900831913140836`*^9, 3.7900831957698574`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"4b6fe478-d040-493e-9b35-3b71d2de49e1"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.7810216577701907`*^9, 3.7810223221124587`*^9, 
  3.788109973293749*^9, 3.7893233179332438`*^9, 3.7905121068169413`*^9, 
  3.813370572167775*^9, 3.813371137720346*^9, 3.813433344694689*^9, 
  3.813434962295031*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"a5bab213-2ba6-4445-b042-a633c6993d23"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7810216577701907`*^9, 3.7810223221124587`*^9, 
  3.788109973293749*^9, 3.7893233179332438`*^9, 3.7905121068169413`*^9, 
  3.813370572167775*^9, 3.813371137720346*^9, 3.813433344694689*^9, 
  3.813434962304685*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"c71acf05-b400-4abf-ac8e-150e95fca231"],

Cell[BoxData["Integer"], "Output",
 CellChangeTimes->{3.7810216577701907`*^9, 3.7810223221124587`*^9, 
  3.788109973293749*^9, 3.7893233179332438`*^9, 3.7905121068169413`*^9, 
  3.813370572167775*^9, 3.813371137720346*^9, 3.813433344694689*^9, 
  3.813434962313162*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"93aabac2-0a10-456b-94c5-be27f75e7998"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"12.5", " ", 
  RowBox[{"(*", " ", "\:5b9e\:6570", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"AtomQ", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", "%%", "]"}]}], "Input",
 CellChangeTimes->{{3.7810216679961567`*^9, 3.78102166960457*^9}, 
   3.7810217058992043`*^9, {3.788109976227936*^9, 3.7881099764525986`*^9}, {
   3.7881806837145452`*^9, 3.7881806932350335`*^9}, {3.7893233206649327`*^9, 
   3.7893233242623076`*^9}, 3.7900832034072866`*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"5b566abf-ffaa-4f11-9b39-e7a4ec7c64b7"],

Cell[BoxData["12.5`"], "Output",
 CellChangeTimes->{3.781021670046214*^9, 3.7810217063097005`*^9, 
  3.788109976939651*^9, 3.789323324633317*^9, 3.7905125066308002`*^9, 
  3.813370588816515*^9, 3.813371149317102*^9, 3.813433366349287*^9, 
  3.813434985738677*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"75502f65-0c41-415c-bba7-86b766da5f5d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.781021670046214*^9, 3.7810217063097005`*^9, 
  3.788109976939651*^9, 3.789323324633317*^9, 3.7905125066308002`*^9, 
  3.813370588816515*^9, 3.813371149317102*^9, 3.813433366349287*^9, 
  3.813434985749461*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"62477b3a-ad95-4fa9-9b90-49837d2cabdb"],

Cell[BoxData["Real"], "Output",
 CellChangeTimes->{3.781021670046214*^9, 3.7810217063097005`*^9, 
  3.788109976939651*^9, 3.789323324633317*^9, 3.7905125066308002`*^9, 
  3.813370588816515*^9, 3.813371149317102*^9, 3.813433366349287*^9, 
  3.81343498575746*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"83ae36be-ac10-4c50-a592-2f8f97f06768"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\"\<Wish you a wonderful day\>\"", " ", 
  RowBox[{
  "(*", " ", "\:5b57\:7b26\:4e32", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"AtomQ", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", "%%", "]"}]}], "Input",
 CellChangeTimes->{{3.781021677045679*^9, 3.781021701884033*^9}, {
   3.7881099810527506`*^9, 3.78810998122637*^9}, {3.7881806958431015`*^9, 
   3.7881807014510603`*^9}, {3.7893233343261704`*^9, 3.789323337374017*^9}, 
   3.7900832097694845`*^9},
 CellLabel->"In[69]:=",ExpressionUUID->"64e245fc-b69b-4398-91e1-42a69862ff25"],

Cell[BoxData["\<\"Wish you a wonderful day\"\>"], "Output",
 CellChangeTimes->{3.7810217024844704`*^9, 3.7881099817803297`*^9, 
  3.7893233377640076`*^9, 3.7905125091911983`*^9, 3.813370596258196*^9, 
  3.813371157958557*^9, 3.8134333817560797`*^9, 3.8134349947446404`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"a1f872e2-53c5-4ab0-b37d-f7f02b0dedb6"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7810217024844704`*^9, 3.7881099817803297`*^9, 
  3.7893233377640076`*^9, 3.7905125091911983`*^9, 3.813370596258196*^9, 
  3.813371157958557*^9, 3.8134333817560797`*^9, 3.813434994754752*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"c148de18-4fb4-41a6-a474-24c0ffc05368"],

Cell[BoxData["String"], "Output",
 CellChangeTimes->{3.7810217024844704`*^9, 3.7881099817803297`*^9, 
  3.7893233377640076`*^9, 3.7905125091911983`*^9, 3.813370596258196*^9, 
  3.813371157958557*^9, 3.8134333817560797`*^9, 3.8134349947629337`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"68e83657-4f26-410d-b5c0-56e0d730cd95"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"1", "/", "2"}], " ", 
  RowBox[{
  "(*", " ", "\:6709\:7406\:6570", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"AtomQ", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", "%%", "]"}]}], "Input",
 CellChangeTimes->{{3.739022024145245*^9, 3.739022024876561*^9}, {
   3.7810213629942694`*^9, 3.7810213656514297`*^9}, {3.781021726114332*^9, 
   3.781021732691605*^9}, {3.788109987968134*^9, 3.7881099882996116`*^9}, {
   3.788180703341056*^9, 3.7881807071298714`*^9}, {3.7893233412406645`*^9, 
   3.789323344416169*^9}, 3.7900832670495596`*^9},
 CellLabel->"In[72]:=",ExpressionUUID->"78b81afe-b673-4f88-b256-e8b771cec0aa"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.7775582491635*^9, 3.78102136596517*^9, 
  3.781021733051716*^9, 3.7881099887937183`*^9, 3.7893233448281*^9, 
  3.7905125122385187`*^9, 3.8133706016029167`*^9, 3.8133711650025673`*^9, 
  3.813433394841795*^9, 3.813435003089003*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"29e05623-a317-4fa2-ad7d-d38e1405dd35"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7775582491635*^9, 3.78102136596517*^9, 
  3.781021733051716*^9, 3.7881099887937183`*^9, 3.7893233448281*^9, 
  3.7905125122385187`*^9, 3.8133706016029167`*^9, 3.8133711650025673`*^9, 
  3.813433394841795*^9, 3.813435003099058*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"eac4190f-dae0-4a0d-a896-0d970e7e5aa0"],

Cell[BoxData["Rational"], "Output",
 CellChangeTimes->{3.7775582491635*^9, 3.78102136596517*^9, 
  3.781021733051716*^9, 3.7881099887937183`*^9, 3.7893233448281*^9, 
  3.7905125122385187`*^9, 3.8133706016029167`*^9, 3.8133711650025673`*^9, 
  3.813433394841795*^9, 3.8134350031075563`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"815e18b9-e255-4d5f-8b48-810ecf55d519"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:7b26\:53f7", "Subsection",
 CellChangeTimes->{{3.779814411600832*^9, 3.7798144162200317`*^9}, {
  3.7810209868770566`*^9, 3.781020987964344*^9}, {3.7900045563866477`*^9, 
  3.7900045587712803`*^9}},ExpressionUUID->"adc21216-3548-442d-acab-\
1f1de844f7a7"],

Cell["\:7b26\:53f7\:662f\:7b26\:53f7\:578b\:6570\:636e\:7684\:6700\:7ec8\:539f\
\:5b50\:ff1a", "Text",
 CellChangeTimes->{{3.7776410240023794`*^9, 3.7776410254083734`*^9}, {
   3.7776411099606905`*^9, 3.777641109962736*^9}, {3.7830963465154343`*^9, 
   3.7830963496440687`*^9}, 3.789999931104907*^9, {3.7900045932944913`*^9, 
   3.790004610769474*^9}},ExpressionUUID->"59c44d5e-f597-4e3b-8133-\
fec75d6e78f0"],

Cell[CellGroupData[{

Cell[BoxData[{"var", "\[IndentingNewLine]", 
 RowBox[{"AtomQ", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", "%%", "]"}]}], "Input",
 CellChangeTimes->{{3.7810217557524967`*^9, 3.781021774504133*^9}, {
  3.7881099939187393`*^9, 3.7881099942213025`*^9}, {3.7893233478788996`*^9, 
  3.789323350974157*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"d35dc054-d9ee-41ab-bf3b-5ba92e417b31"],

Cell[BoxData["var"], "Output",
 CellChangeTimes->{3.7810217750012646`*^9, 3.788109994718938*^9, 
  3.789323351340214*^9, 3.790512575047544*^9, 3.813370617284232*^9, 
  3.8133711826057253`*^9, 3.813433412663121*^9, 3.813435016273706*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"1032602d-a60c-44ed-b061-1c73fdef1b24"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7810217750012646`*^9, 3.788109994718938*^9, 
  3.789323351340214*^9, 3.790512575047544*^9, 3.813370617284232*^9, 
  3.8133711826057253`*^9, 3.813433412663121*^9, 3.813435016285355*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"4ce66f61-69a3-4d93-9d5a-8abb7d2e267a"],

Cell[BoxData["Symbol"], "Output",
 CellChangeTimes->{3.7810217750012646`*^9, 3.788109994718938*^9, 
  3.789323351340214*^9, 3.790512575047544*^9, 3.813370617284232*^9, 
  3.8133711826057253`*^9, 3.813433412663121*^9, 3.813435016293077*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"a7634687-4df1-4dc2-9262-cc495891325c"]
}, Open  ]],

Cell["\:7b26\:53f7\:53ef\:4ee5\:88ab\:8fd0\:7b97\:ff1a", "Text",
 CellChangeTimes->{{3.7893233617224174`*^9, 3.789323377186296*^9}, {
  3.7894075856842823`*^9, 3.78940759138004*^9}, {3.790004631539584*^9, 
  3.7900046461282063`*^9}},ExpressionUUID->"5421899d-7955-42eb-9d2c-\
51aac4886cb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "^", "2"}], "+", 
  RowBox[{"a", "^", "2"}], "+", 
  RowBox[{"a", "^", "2"}]}]], "Input",
 CellChangeTimes->{{3.789323379808278*^9, 3.789323386872377*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"8e2848c4-fc23-48d7-9b70-68051ab6bd07"],

Cell[BoxData[
 RowBox[{"3", " ", 
  SuperscriptBox["a", "2"]}]], "Output",
 CellChangeTimes->{3.7893233873281956`*^9, 3.790512624121731*^9, 
  3.813370627861267*^9, 3.813371197082224*^9, 3.813433424903666*^9, 
  3.813435032955982*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"2c853eb2-804b-446d-8c6e-976a3773f8af"]
}, Open  ]],

Cell["\:53ef\:4ee5\:8d4b\:503c\:ff1a", "Text",
 CellChangeTimes->{{3.789320000445283*^9, 3.7893200059406104`*^9}, {
  3.790004655501853*^9, 
  3.790004661425438*^9}},ExpressionUUID->"fd6ab191-65f5-4d1e-8a5e-\
db8947e7b6ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"var", "=", "10"}], ";"}]], "Input",
 CellChangeTimes->{{3.7893200071902285`*^9, 3.789320015849059*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"cf84afc2-4a29-4a77-97f6-6f9dc1559abc"],

Cell[CellGroupData[{

Cell[BoxData["var"], "Input",
 CellChangeTimes->{{3.8134350428739967`*^9, 3.8134350445042667`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"7435205a-ec26-4b8b-9141-e63f351672ba"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.813435046883821*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"97f9636d-efb5-4990-a5d8-73d2adff28f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var", "+", "10"}]], "Input",
 CellChangeTimes->{{3.813435048609805*^9, 3.8134350524098682`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"f00bd62c-8898-4a57-a7f5-e8a42aea91b0"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.813435054319972*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"9086b37d-d046-487e-bb3e-79ed3a418650"]
}, Open  ]],

Cell["\:4f8b\:5b50\:ff1a", "Text",
 CellChangeTimes->{{3.7893234503545246`*^9, 3.789323452198593*^9}, {
  3.790004667314062*^9, 
  3.790004667689849*^9}},ExpressionUUID->"bafbedec-1085-4a08-b254-\
0570d1cb4673"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Plot", ",", " ", "x2", ",", " ", "String", ",", " ", "$Version", ",", " ", 
   "\[Alpha]\[Beta]\[Gamma]"}], "}"}]], "Input",
 CellChangeTimes->{{3.7893234547218003`*^9, 
  3.789323485601163*^9}},ExpressionUUID->"8d2daf9a-d0c2-4fdd-8ebe-\
a0ca92c0d49b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x2", "=", "10"}]], "Input",
 CellChangeTimes->{{3.813435105627285*^9, 3.8134351073442*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"5cc90311-dc14-4aa6-9d49-c19315453855"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.813435108858984*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"13968192-8406-49ed-bfb9-c6266c978a2b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"2", "x"}]], "Input",
 CellChangeTimes->{{3.813435133294477*^9, 
  3.813435134307974*^9}},ExpressionUUID->"246c9d79-46a5-4725-ae69-\
3fb9577563a5"],

Cell[TextData[{
 "\:5f53\:7b26\:53f7\:540d\:79f0\:88ab\:8bc6\:522b\:65f6\:ff0c\:8bed\:6cd5\
\:989c\:8272\:4ece",
 StyleBox["\:84dd\:8272", "Input",
  FontColor->RGBColor[0., 0., 1.]],
 "\:53d8\:6210",
 StyleBox["\:9ed1\:8272", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.73197576177941*^9, 3.731975784912862*^9}, {
   3.734970225199082*^9, 3.734970228154793*^9}, 3.73497028915499*^9, {
   3.74324141292319*^9, 3.743241426824597*^9}, {3.7434267502776012`*^9, 
   3.743426799926374*^9}, {3.790004683230942*^9, 
   3.7900047600816107`*^9}},ExpressionUUID->"9d23375a-d118-4f8a-832d-\
4ae4a99aed86"],

Cell["\:7b26\:53f7\:7684\:540d\:79f0\:ff1a", "Text",
 CellChangeTimes->{{3.7776410240023794`*^9, 3.7776410254083734`*^9}, {
   3.7776411109046707`*^9, 3.7776411220276165`*^9}, {3.7776827292664614`*^9, 
   3.777682729287449*^9}, {3.779814297019073*^9, 3.7798143006637917`*^9}, {
   3.779814358744224*^9, 3.779814362551168*^9}, {3.7830963659893684`*^9, 
   3.7830963690461607`*^9}, 3.7899999439008293`*^9, {3.7900047643921423`*^9, 
   3.790004770741503*^9}},ExpressionUUID->"4f98744e-0566-4432-9fed-\
84e7bf600b92"],

Cell[CellGroupData[{

Cell["\:7531\:5b57\:6bcd\:3001\:6570\:5b57\:548c\:5176\:4ed6\:5b57\:7b26\:7ec4\
\:6210 .", "Item",
 CellChangeTimes->{{3.7776410240023794`*^9, 3.7776410254083734`*^9}, {
   3.7776411109046707`*^9, 3.7776411220276165`*^9}, 3.777682740291539*^9, {
   3.779814305703897*^9, 3.779814374083987*^9}, 3.789999948018881*^9, {
   3.7900048199417205`*^9, 
   3.790004840776704*^9}},ExpressionUUID->"4492ebf9-4b41-4a22-a033-\
8b8c7181c5b1"],

Cell["\:4e0d\:80fd\:4ee5\:6570\:5b57\:5f00\:5934.", "Item",
 CellChangeTimes->{{3.583573757046896*^9, 3.5835738252617188`*^9}, {
   3.583574896165764*^9, 3.583574902748777*^9}, {3.5835751776242743`*^9, 
   3.5835751874943457`*^9}, {3.591186033618814*^9, 3.591186034577346*^9}, {
   3.595586120554611*^9, 3.595586125984639*^9}, {3.734095255151857*^9, 
   3.734095268645473*^9}, {3.743241786624977*^9, 3.743241786627399*^9}, 
   3.789999949699976*^9, {3.7900048471770363`*^9, 
   3.7900048575390997`*^9}},ExpressionUUID->"6d23d63a-f5a4-4c6c-9792-\
a8ae97880ef4"],

Cell[TextData[{
 "\:4e0d\:80fd\:5305\:542b\:67d0\:4e9b\:4fdd\:7559\:7684\:7279\:6b8a\:5b57\
\:7b26\:ff08\:4f8b\:5982\:ff1a",
 StyleBox["!", "Input"],
 ", ",
 StyleBox["@", "Input"],
 ", ",
 StyleBox["#", "Input"],
 ", ",
 StyleBox["%", "Input"],
 ", ",
 StyleBox["^", "Input"],
 ", ",
 StyleBox["+", "Input"],
 ", ",
 StyleBox["-", "Input"],
 ", ",
 StyleBox["_", "Input"],
 ", ",
 StyleBox["=", "Input"],
 ", ",
 StyleBox["&", "Input"],
 ", ",
 StyleBox["(", "Input"],
 ", ",
 StyleBox[")", "Input"],
 ", ",
 StyleBox["{", "Input"],
 ", ",
 StyleBox["}", "Input"],
 ", ",
 StyleBox["[", "Input"],
 ", ",
 StyleBox["]", "Input"],
 ", \:7b49\:ff09."
}], "Item",
 CellChangeTimes->{{3.583573757046896*^9, 3.5835738252617188`*^9}, {
  3.583574896165764*^9, 3.583574902748777*^9}, {3.5835751776242743`*^9, 
  3.5835751874943457`*^9}, {3.591186033618814*^9, 3.591186034577346*^9}, {
  3.595586120554611*^9, 3.595586125984639*^9}, {3.734095255151857*^9, 
  3.734095268645473*^9}, {3.743241787697652*^9, 3.74324182760882*^9}, {
  3.743241892920335*^9, 3.743241893406685*^9}, {3.743847718522636*^9, 
  3.7438477218015003`*^9}, {3.789319975131023*^9, 3.7893199759229393`*^9}, {
  3.789999952817217*^9, 3.789999959641108*^9}, {3.7900048678052154`*^9, 
  3.790004899861846*^9}},ExpressionUUID->"5cfc19b7-843c-4f10-81f7-\
0abac71a8a27"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellLabel->"In[83]:=",ExpressionUUID->"1099cded-e634-42c3-81f4-01ad4ce6b232"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"f7916716-3628-47aa-9ac9-667ea67493e1"],

Cell[CellGroupData[{

Cell["\:8868\:8fbe\:5f0f", "Section",
 CellChangeTimes->{
  3.7777047916430187`*^9, 3.7784996309822063`*^9, {3.781020874143722*^9, 
   3.7810208795474486`*^9}, 3.781021153902781*^9, {3.7831883377811456`*^9, 
   3.783188341941863*^9}, {3.7881098166409426`*^9, 3.7881098209064913`*^9}, {
   3.7893200357916875`*^9, 3.7893200368249598`*^9}, {3.7893201326355734`*^9, 
   3.789320134341957*^9}, 
   3.790004910293871*^9},ExpressionUUID->"88033296-57ed-4603-8e5a-\
3086cff34530"],

Cell["\:53ef\:4ee5\:4f7f\:7528\:539f\:5b50\:5bf9\:8c61\:6784\:5efa\:66f4\:591a\
\:7684\:8868\:8fbe\:5f0f.", "Text",
 CellChangeTimes->{{3.789320139292709*^9, 3.789320146388754*^9}, {
   3.789992646287158*^9, 3.789992678909357*^9}, {3.789999971986319*^9, 
   3.789999972264328*^9}, {3.790004917355822*^9, 3.7900049389662037`*^9}, 
   3.790005094570836*^9, {3.79000522472388*^9, 
   3.790005235695609*^9}},ExpressionUUID->"a75079f9-48e3-4873-b74a-\
5c181f0662f7"],

Cell[CellGroupData[{

Cell["\:6570\:5b66\:516c\:5f0f", "Subsubsection",
 CellChangeTimes->{{3.7893201612509856`*^9, 3.789320166215661*^9}, 
   3.7893212278555927`*^9, {3.7899659022745314`*^9, 3.789965903676812*^9}, {
   3.789999976051955*^9, 3.789999991409279*^9}, {3.790005100536416*^9, 
   3.79000510627413*^9}},ExpressionUUID->"fe0aa75f-0ebc-486d-982c-\
5fad33aa43fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "^", "2"}], "+", 
  RowBox[{"y", "^", "2"}]}]], "Input",
 CellChangeTimes->{{3.789320171100625*^9, 
  3.7893201765251055`*^9}},ExpressionUUID->"cfe43cec-511c-45ab-a4c0-\
f9b7a55e6593"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AtomQ", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], "+", 
   RowBox[{"y", "^", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7893206313918347`*^9, 3.7893206349034*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"b678769e-2ae7-4495-a5a7-9696cd326686"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.7893206352963457`*^9, 3.790513231533736*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"eead8eea-8ad4-44c1-b30d-2c0eabfedfba"]
}, Open  ]],

Cell["\:68c0\:67e5\:5b8c\:5168\:683c\:5f0f\:ff1a", "Text",
 CellChangeTimes->{{3.789320226824464*^9, 3.7893202305724807`*^9}, {
  3.790005112614497*^9, 
  3.790005124329786*^9}},ExpressionUUID->"5e06c388-5d9b-4dd6-94e8-\
659faf3f960e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], "+", 
   RowBox[{"y", "^", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.789320231888957*^9, 3.7893202366412287`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"4f713a62-6349-4904-bbd1-26d48af157d3"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{
     RowBox[{"Power", "[", 
      RowBox[{"x", ",", "2"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"y", ",", "2"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.789320236973302*^9, 3.7905132993213177`*^9, 
  3.813435184874381*^9},
 CellLabel->
  "Out[84]//FullForm=",ExpressionUUID->"11b0adfe-25fd-4588-acf6-7987e384fc74"]
}, Open  ]],

Cell[TextData[{
 "\:4e0a\:9762\:8868\:8fbe\:5f0f\:7684\:539f\:5b50\:5bf9\:8c61\:ff1a\n\n",
 StyleBox["\:6574\:6570\:ff1a",
  FontSlant->"Italic"],
 " 2\n",
 StyleBox["\:7b26\:53f7\:ff1a",
  FontSlant->"Italic"],
 " ",
 StyleBox[ButtonBox["Plus",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Plus"],
  FontWeight->"Bold"],
 "\:3001",
 StyleBox[ButtonBox["Power\:3001",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Power"],
  FontWeight->"Bold"],
 Cell[BoxData[
 "x"], "Input",ExpressionUUID->"9559c058-1cb1-48d4-8d92-b0c748535cc7"],
 " \:548c ",
 Cell[BoxData[
 "y"], "Input",ExpressionUUID->"40bb4b60-a229-4fc5-b100-2db4433af756"]
}], "Text",
 CellChangeTimes->{{3.7893202437372046`*^9, 3.7893202700697703`*^9}, {
  3.7893206514930363`*^9, 3.789320652523245*^9}, {3.789999997622199*^9, 
  3.789999999104437*^9}, {3.7900030828842773`*^9, 3.790003086403593*^9}, {
  3.7900031171713133`*^9, 3.790003122290729*^9}, {3.7900052475228367`*^9, 
  3.7900053044212394`*^9}},ExpressionUUID->"395cccf4-3db6-4aac-b860-\
aad656aadb87"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:4ee3\:7801", "Subsubsection",
 CellChangeTimes->{{3.7893201913843527`*^9, 3.78932019301099*^9}, 
   3.790000004641015*^9, 
   3.790005309354412*^9},ExpressionUUID->"722e40a6-7173-4603-a6e5-\
91aa45b5c6b5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "y"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", ">", "y"}], ",", "\"\<x is greater\>\"", ",", 
    "\"\<y is greater\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AtomQ", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.7893201951043496`*^9, 3.789320216890049*^9}, {
  3.789320294668913*^9, 3.7893203788865786`*^9}, {3.789320658676778*^9, 
  3.7893206624606886`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"3a3aa135-17f1-4d60-bed5-896e1636901c"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.7893206627389536`*^9, 3.790513572731885*^9, 
  3.8134352100097322`*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"7955b982-862e-4bce-b45b-8b6f76df483e"]
}, Open  ]],

Cell["\:539f\:5b50\:5bf9\:8c61\:ff1a", "Text",
 CellChangeTimes->{{3.789320356913369*^9, 3.7893203643683805`*^9}, {
  3.79000531628944*^9, 
  3.7900053192037725`*^9}},ExpressionUUID->"b1e468ec-4127-4647-b045-\
9a118110c7bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", ">", "y"}], ",", "\"\<x is greater\>\"", ",", 
    "\"\<y is greater\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7893202840612993`*^9, 3.7893202993992453`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"120fd0a3-73e6-4620-ae1d-c1ed6310c36b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"Greater", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", "\"\<x is greater\>\"", ",", 
     "\"\<y is greater\>\""}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.789320299905924*^9, 3.7893203178209457`*^9}, {
   3.7893203690299063`*^9, 3.7893203811933947`*^9}, 3.7905135802600727`*^9, 
   3.813435222120173*^9},
 CellLabel->
  "Out[88]//FullForm=",ExpressionUUID->"8f062748-b22e-43cd-9f12-c9a56da66a26"]
}, Open  ]],

Cell[TextData[{
 "\:539f\:5b50\:5bf9\:8c61\:ff1a\n\n",
 StyleBox["\:5b57\:7b26\:4e32\:ff1a",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
 "\"\<x is greater\>\""], "Input",ExpressionUUID->
  "d1392cea-1a27-463a-978e-5cf46c8447de"],
 ", ",
 Cell[BoxData[
 "\"\<y is greater\>\""], "Input",ExpressionUUID->
  "42b275fe-1c3e-4f48-973a-f5964a8132ec"],
 "\n",
 StyleBox["\:7b26\:53f7\:ff1a",
  FontSlant->"Italic"],
 " ",
 StyleBox[ButtonBox["If",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/If"],
  FontWeight->"Bold"],
 "\:3001",
 StyleBox[ButtonBox["Greater",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Greater"],
  FontWeight->"Bold"],
 "\:3001",
 Cell[BoxData[
 "x"], "Input",ExpressionUUID->"56008d28-9539-48b6-b9e3-ccb167c0b41c"],
 " \:548c ",
 Cell[BoxData[
 "y"], "Input",ExpressionUUID->"9133677b-f942-4cfa-b8d7-75092c116208"]
}], "Text",
 CellChangeTimes->{{3.7893203081239*^9, 3.789320312572991*^9}, {
   3.7893203838991175`*^9, 3.789320405037549*^9}, 3.7893210375857773`*^9, {
   3.79000003875494*^9, 3.790000042056986*^9}, {3.790003129525704*^9, 
   3.790003142992076*^9}, {3.790005331505724*^9, 
   3.790005375747383*^9}},ExpressionUUID->"2c91510f-4a6d-4d85-b10c-\
242807ca98ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:6570\:636e\:7ed3\:6784\:ff1aList", "Subsubsection",
 CellChangeTimes->{{3.7893204334036736`*^9, 3.7893204355967693`*^9}, {
   3.7893209798223906`*^9, 3.7893209815826826`*^9}, 3.7893210248000293`*^9, {
   3.7900000503634443`*^9, 3.790000055369285*^9}, {3.790005385915558*^9, 
   3.7900053902860565`*^9}},ExpressionUUID->"be818725-9fd2-4b20-bfdd-\
47ae6338fdb5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "10.8", ",", "50"}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"AtomQ", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.7893204475318356`*^9, 3.7893204615044336`*^9}, {
  3.7893206688705344`*^9, 3.789320676857128*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"97d9a2cb-2c3d-4a2c-b1f8-5b73b4ca0991"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.7893204618884397`*^9, {3.7893206727790794`*^9, 3.7893206772720313`*^9}, 
   3.790513627828124*^9, 3.8134352496593*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"4c230686-051d-4d2a-89f1-a9fa86f74270"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "10.8", ",", "50"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.789320462776067*^9, 3.7893204704873943`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"33940757-d520-4393-b105-f8552e3aabcc"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{"1", ",", "2", ",", "10.8`", ",", "50"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.7893204712004843`*^9, 3.790513631006277*^9, {3.813435255743579*^9, 
   3.813435263203608*^9}},
 CellLabel->
  "Out[92]//FullForm=",ExpressionUUID->"efeecf1c-4631-4a9f-81f0-804ff21d61e0"]
}, Open  ]],

Cell[TextData[{
 "\:539f\:5b50\:5bf9\:8c61\:ff1a\n\n",
 StyleBox["\:6574\:6570\:ff1a",
  FontSlant->"Italic"],
 " 1, 2, 50\n",
 StyleBox["\:5b9e\:6570\:ff1a",
  FontSlant->"Italic"],
 " 10.8\n",
 StyleBox["\:7b26\:53f7\:ff1a",
  FontSlant->"Italic"],
 " ",
 StyleBox[ButtonBox["List",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/List"],
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.7893204861814313`*^9, 3.7893205083460865`*^9}, 
   3.790001929635846*^9, {3.790005404627839*^9, 
   3.7900054349954443`*^9}},ExpressionUUID->"11c82c20-58e7-4407-8ede-\
ca2b29f186db"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellLabel->"In[93]:=",ExpressionUUID->"65230bf1-61a8-4456-83d9-1dcdedfd7591"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"33bb0245-6a18-4db3-b514-865dcb3b3610"],

Cell[CellGroupData[{

Cell["\:4e00\:5207\:90fd\:662f\:8868\:8fbe\:5f0f", "Section",
 CellChangeTimes->{
  3.7777047916430187`*^9, 3.7784996309822063`*^9, {3.781020874143722*^9, 
   3.7810208795474486`*^9}, 3.781021153902781*^9, {3.790000072151379*^9, 
   3.790000082607432*^9}, {3.7900054449587393`*^9, 
   3.790005451738855*^9}},ExpressionUUID->"467aae82-069f-4709-a54e-\
c5b2aef20ddd"],

Cell[TextData[{
 "Wolfram \:8bed\:8a00\:4e2d\:7684\:6bcf\:4e2a\:5bf9\:8c61\:90fd\:6709\:76f8\
\:540c\:7684\:57fa\:672c\:7ed3\:6784\:ff0c\:79f0\:4e4b\:4e3a",
 StyleBox["\:8868\:8fbe\:5f0f\n",
  FontSlant->"Italic"],
 "(",
 StyleBox[ButtonBox["\:4e00\:5207\:90fd\:662f\:8868\:8fbe\:5f0f",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/EverythingIsAnExpression"],
  FontWeight->"Bold"],
 ").\n\t\t\t\n\t\t\t",
 StyleBox["f[e1, e2, e3,...]",
  FontSize->20,
  FontWeight->"Plain"],
 "\n\ne1\:3001e2\:3001e3 \:53ef\:4ee5\:662f\:539f\:5b50\:5bf9\:8c61\:6216\
\:8868\:8fbe\:5f0f\:81ea\:8eab.\n\ne1: ef1[e1s1, e1s2, e1s3...]\ne2: \
ef2[e2s1, e2s2, e2s3...]\ne3: ef3[e3s1, e3s2, e3s3...]\n\n\:5e38\:89c4\:5f62\
\:5f0f\:5982\:4e0b\:ff1a"
}], "Text",
 CellChangeTimes->{{3.7893213252389865`*^9, 3.789321339460924*^9}, {
   3.7893216912455845`*^9, 3.7893216937877812`*^9}, {3.789322326205233*^9, 
   3.7893223686167345`*^9}, 3.789322410656622*^9, {3.789322459431542*^9, 
   3.789322464087079*^9}, 3.789322494835793*^9, {3.789322671128168*^9, 
   3.789322685439868*^9}, 3.7893227171520486`*^9, {3.7893230971211605`*^9, 
   3.7893231179005566`*^9}, {3.789323231656168*^9, 3.7893232331182175`*^9}, {
   3.7893235807894588`*^9, 3.7893235822964363`*^9}, {3.790000092972206*^9, 
   3.790000119733766*^9}, 3.790003164146834*^9, {3.7900054649292974`*^9, 
   3.7900055136433945`*^9}, {3.7900055498099337`*^9, 
   3.7900056527823043`*^9}, {3.7905137779443808`*^9, 
   3.790513778132202*^9}},ExpressionUUID->"779c1232-8291-41ea-aec7-\
9d3d9c2729c5"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
ev+jy8o3fHJupu3uTJsXLMwNZuG8nMHckCc+efzLO5+cI7u7zETDYTXw0acq
/Y8bVb3d3Wp4NKzgbezu5lbsWZwZ3CyclzOYwfPEJ7Oj43xybuzu7q3Y84KF
ucEsnJczmBvyxCePf3nnk3Nkd5cZdneYysTd3ZmOfcr+2Nx6fECla/RKn/ra
2i2qWIo/gycfE050tqknnviuWlxWqqzzXbSqVqV+rEl+nkN7tiv7c6WNjf9b
eR/nVQjba5aruz/jwYVqJHpHpauzpUE1t/Uot8j3DB4Zu6laWprVupoqFQoG
lfXnNrR0qtSfZ1jVVVWoya83qN7uv65M4fdzM213Z9q8YGFu8BrOqxCYG3Lj
98c/p/j9HNndze7KR2dVY+OzqrJiqZq8vypRfVdGVSoXzx1Xi+aHlPXxoQWP
qGL/3SJyw+4uNbfM4szgXsN5FQIzeG78Pjtmy+/nxu5udm6ZFyzMDV7DeRUC
c0Nu/P745xS/nyO7u9mxu0M6TNzdNW2uVJP3CSF1aTym5jJyZUCtLp+v5rrv
zDe3zOBne7vVsWNH1A++U6Xsz3lef7tf2R165Qll//1WS6ufVt7HeeVVdEQt
DAbU5HlsVXNLfn/+1H5QheLzTaK+a2HlFoWawbu7u1VH/CwSrVpSru7+uaEF
6nr8gf76lAf7WGRMVVeUq1S30z3tvcoUfj8303Z3ps0LFuYGr+G88oq5gbnB
Rfx+juzuZjf0yQequ/uYatndqEri91klU+63Vm1sVDM+fuAdZf/99p3upfE7
Ct7E7m4mt83izOBew3nlFTM4M3gR+f3c2N1N57Z5wcLc4DWcV14xNzA3uIjf
z5Hd3ezY3SEdRu3uYmG1vDSgJu/75qv6+vrZ27RJVVYsV/bbes/gqCqW4s/g
qSRnmR3fXqGs81pes11ZBnva1ENrNijrtTIH+0+qZ59+Wp0aGFLm4ryccPVM
h7L/nH5p2UqV6ud804Z1anFZmbI+LrS4SiUul8ngkpm8K9ZrTkdGr6gFoYCy
/vx9HWeUpXlLldq255CKfB5VnW++pp597qfqVjiqTOeXczNmd2fovGBhbjAF
5+UE5gbmBi/wyzmyu8vMu4f3qsnzKlVXwzEVDQ+riq8+oI73XVDjo8Nq94vP
qZ+3dil4G7s798/izOCm4LycwAzODO5Gfjk3dnfunhcszA2m4LycwNzA3OAF
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
85FUr/3xx//ztkrFul08WvmIam0/ov7Q3qaWLFqoXnrjqMpWvs7P+jk9df4j
5bWPzxS7u8yxu0tid5cZdnfZYXdn1gzO7o7d3VTs7tjdJbC7mx27u+ywuzNr
bmB3x+4uN+zu2N259+Mz5eXd3euNG5X9vvrIuc9UvoyN3FDj4XH1nRULlSm7
u2j4lvrpc8+qf+vpV5a33nhZVcXvR6qm3JdYBo63qrvfk2CZuhZ/HEkU/8FV
L2z5vroyGlF21699pm5fPKWs5zy57u6GzveokmBAWV9nsKRcnR4YUukq/nkl
/5X0DzetUYd7+tTEP32+Mz46ov5p3Rpl/TnNb/aoYp9fShPXuK1aEFJ3z6f0
ayo50eRDYc8zFadn8KGBU2rbs8+pi8NjKhYNqw3VFcr+HNHStLlSWV9PRW2D
soSHL6r6H7ys7P9235pNn93yQ3VtZFxZB/unzoMqFP/coVk+f7oOvbJF2R8X
Hqpcp8YiMeWVc5tLS8P31fz5IeWZ3V10XK15qFzZv187X+1QTinWvDBw4k21
5+BhZV0THo3PDolefqJGWV9PS2efypVf54bIyKCqrHxY1dfXz9qRk+dVusyb
G+yS9zyHXnlCfWl1jRoei6hcmT833Jt1LeSC+WXKK7u7oj/+RUfV4tKQqlm3
SaX6ua55eKUKLa5S2f6dqnlzRPJXNq5aoPYeflel8kz1V1Xj628rp3lud5en
eaWr9efqxd2vK+vv7oav9KsHvlqhJne51tczohbG70sXTrk/tc8P5zr2q5Rz
he3vfjv7hpTdyIWTyprPU91OU8rT+Z3+t33K/vn+5697lNs/Plvs7jLH7o7d
3VTFPy92d85id8fuzj3nNhd2d+lhd5dfxX8cTGJ3x+6O3Z05cwO7O4fOkd3d
HXZ37O7c9vHZ8uLubjR+e040PxRQ9jP7/XtXVKHsql+jTNnd9bbvUZNnmvy3
uNXVlaq8olqleuyKha+psvj9SdmU+5R1Tz6v6qofVUfOXVRzS043S+KfY4kD
u7tfvbBB2W83VgtWbVTpPocu9nlFRwbU7+L3o7+7x31pLDKiFsd/ZhItrX5a
Zcrp80vF/lqsd2f9hStUvt7ToNDnmYrTM/jT1UuV9fmsa1NXrkj2xCuHVCp9
nS1q8rliifrZnn2qsuoxdTM+X9yc5SKL0eFraq5rArfXLFdLq7eq9H2u/qE8
oFLdPjOdRYt9bqlY11L8eF+Hql+zRHlld3fzg6Mq1fcpEAip/uthla1izwvX
hq6pVGLhq6o0/rUk2tN+UuXKr3PDaw3fV7nebuxMmxvsOvZtVaH5y9TQWEQ5
xfS5IRXr76y+W/u46vjVLuWV3V2xH//6/vg7dfrjYTUX65rkHXsPq8yZOkdM
fx7VenxApfLqthq17kf7ldO8trtzfF4Zv6Tsr6GxYmWlml9Wpt4ZGFKpNNRW
KOvjyx9ao/65aYeqi3/v6u7x/evvOqgCwfvV7fhd4+173D1urlyoMn2Pr3zN
ezvXr1T2z7dy/U7l9o/PFru73LG7m47dHbs7L8/g7O5mx+6O3V0Cu7vMsLtj
dzcbt5yXhd1dfrC7Y3eXUOxzZHfH7m427O7Y3eVLV9tetW5dtQrF55RQMNX3
P3GfFlSVa6rVax09Kl9M291dPtup7Pcpi1ZVq6GxsJrL7q1r1d3ZqWS+6jg9
oNLn7O6u/+3Xlf12E5o3TwUC5epm/CE80Vzcd173Zj3HX13XqDLl9PlZ17g0
Pr1JVa5+UKW+j5/48+KPa4lq1m1Q718eVYWW63mm4vQM3vJcrbKf4+aX9qu5
ri2xdpXL5odUtrfzuVi7u4z/Tf6Exo2rlP3xIDTRP2x4QaXLbecWGRtS36l9
Slm7UK/t7qzX0F9UElQz70eS//1XRz9Q6XL7vGBn7e6+PH+ZmnFtTJb8NjdY
18pa12SWLV6utr24W10eGVXZMnVusF8L5fRrP1j8Nzckn9U2PbNR9V8ZVZP3
n97Y3RX78e/zWFTNaeL2UFE2T/VdC6tsmTdHJG+Pjy0vUdbfDYzGH2tGp12L
mbyGcuXiUvV2/5Bymtd2d47PKxPXgleUl6hs778vnPytyvZ2dWhXvQoEl6rx
+K+N3+P3v/HyJmX9XdOl+G++dK8PsP7n5mneK/Y1r1wzm5rbZ3F2d7Njd8fu
zowZ/N7Y3bG7Y3fH7i5b7O6mY3fH7s6MuYHdXQK7u6RinyO7O3Z3s2F3x+7O
r0zb3VmGLpxXvaeSWa/Vn7ZYRFnvBT0yHlGZc3Z3Z7He0/ns+Qvq1p+PqXT/
7bCde84r5R+g1twfVK919qlsOX1+3uPsedo5PYNbr11+9lSv+ujCiMpUeHRI
9Z46qxKXHzlxCdKV/i71k31vqGzZ34N+aGRcWTPHmideURl8QpecW/L29sLT
tWpwOKwsXtvdWcZHhlR37ykViX6uHv5yQB165y/KPMnv58GXn1HvXhxSTvHb
3HD2eLuqqVmjykIhNfncO3mN2RtHT6tsmTY3ND1eqaz3uvjju31q355GZb0H
wL7W36hcrzn1y9xgXeNovwbea7s79zz+3du1vk61uGqLypWpc8TFc0eU9Xda
5UtWqb6PL6idGx9Th46fU/nitd2dxel5JTI+orq7e9XoeFRl6vJHZ9X5C0Mq
Xe17nlbWLm5gJKpSubvrm/i+vRf/Zr2XwTcsX/Oe/XHFax+fKXZ3uWN3lwK7
O3Z3BszgqbG7Y3eXPnZ3s2N3x+5uGnZ37O4MmBvY3U3H7s4d58jujt3dVOzu
3PHxmWJ3l7t87+6a6r+uvvjQt5T/5Gd3Z2fNWg+s3apMMzLYoxYsW6vmes+A
TJl+fnb5Pk/HZ3CXGb7wgWrc8bi6e21jMKT2d5xWTrFe03f3b08qr+lpa1Yt
nX3Kzqu7O7u7r8E/r0RdGI0qU5x+u119+xsrlHWO8xdVqIGhMZWrYu3u3CO5
G+3rOayWlJco6zlKZ98VlSvPPu7FxtXSxPssJd7H5UsVqutkv7J2iCODfeqh
+Nmpyjrl1OOdZ88vhfDwoHrs+w3K/lruntvdeUTzliqV78d3r88Rlo9Pv6Xm
h4LKur3s/OVRlW9e3d3ZeX1euX7+hLJeu2Gu93ix3sPEehz9y+2YypbXz69Y
frHjWyrwxYfUX+O/9tdif1Eew+4u39jdOYHdnbPY3eWG3V1m2N2Zgd1dobC7
uyd2d3nB7q442N1lht0du7sEdnfexO4ud/ne3eX787tffnd3sciYqlz+FXVy
cFiZI/lqpVseq1LnLt5UTjH//Ozye54Wv8zgkfCoOty6V03Oktm9Z7zd0H90
qUUV1SrxsswOvBVAwYxe6VcbdzSrVEzZ3R18vk5t3dOuTHXjyqBqeqZWWee5
YNVGZX/Onyl2d9OFb15US+aHVEVtg8qW1x/3Pr/5gbJud+t+tF+lMnCiVVm/
P9XfIaTL6+c3w8S1y0/Vfkeles8ZdncOm3jN/8WlZepaOKac5vU5YlLykaV9
30tqz2utqqpikbJuN0+8ckjl+jiUiim7O1PmlY79L6hgfOZO1LS3VXUfO6Z+
+frP1cJ5ARUsW60Sr86Qyys7mXJ+hXZg53oVuG+lSvzImHj3nk/s7vKN3V1u
2N05i92dk9jd3Ru7OzOxuyssdnfTsbtzGLu74mB3lyF2d+zuZmJ35y3s7nLH
7i7f8rO7Gx2+oOoe+4ZK9z25veZI/P440aF3BpRT/HJ+dvk6TzvfzeAT7M8R
97T3qkz19xxWlWsfU0NjYeUZE88Fax+pUG1Hjqnu7u5Ze/jBMvXgw3XK+vXh
W2HlFKdn7lg0rA42/ZPa/NJ+ldyQ+8fd9wyYuBbl0vgdla0f169Uf7dkrUJS
18HnVWDJGpUpUx73/jb8nrJ+jut3HVIpRT5TpfHfm2jDC79SmTLl/Ow6WxrU
E417Var76Ze21alAoEx1xH8t0fsfXla58tvcYF1zXfl4k3Ka5+cIm/Y9W9Xj
Ta3KYj0Ov7ChWlm3n+a2HuW0wu/u/p9a8ncBtfaZXSpTps8r4yPXlHV/1X/p
qhq/3q9C8e9Voi3Nb6pMmX5+hcLuLnfs7vKN3V0u2N05i91dfrG7m8Duzlez
HLu7wmB3l8Tuzlns7oqD3V1m2N2xu7sXdnfewO4ud+zu8s3Z3d2po/9LNb6y
Ww2PhpVp+t/5tfplx2nlFL+cn12+zjMVv83gd8Vuq/uDAbX/yDk1t8/VL55/
Sh34TaeKxu4oz/n8ttpWX6/q5+hL80Nq/peWKevXT394QznFqZn79qf96pnn
dqjT5y8ov/rLO4dUIFCqPovcUdlibpjdf57uUEurt6p0Gfe4F7mhyuL3sYnm
umb2zsSzg5X3BZR1TV26jDs/m3898DM11/30wyuXKes1Ib4b/7VEe9/oUrny
29xgvXdEW8+gyp1hc8SE2PglZe1e3vnLbTXzN0bV9ppVKrS0Wjl97Wzhd3fT
77/W7zyg0uX3eWX31rUqNH+ZSvWaAKn4/fycxu4ud+zu8o3dXTbY3TmL3V2B
sLtLYnfnK+zuCoPd3QR2d45id1cc7O7Sw+6O3V0u2N25C7u73LG7y7f8vleF
aaz3fv+XXx9VqSUfjUdGbinMrljn6bcZ/K7oiFo4r0TxnvHpMeW9Kvxq4Hir
emDtVpUr5obZtTY9rl5/u1/5XePGVSq0uFJF4g9jkdmepNuumX27/7pCZniv
CmdERwdVadmDajw+IowzJqQU+eycsm4XKXd3E/587A0VvH+N8vvuzq8GTx5S
wWCJOnruokJxsbvLHbu7fGN3lwl2d85id1dg7O6ywu7O29jdFQa7u+nY3RUW
uztnsLvLDLs7dnfZYHfnTuzucsfuLt/Y3aWj/9/b1SNrN6hUr5V87Ngx1fRM
reoZHFWYrtjnadoMPnjmD+rZF3+qUl0z1fHqTpXte1T4Fbs7d2rb92P18zcP
K/u1V7HImHq89ltqYGhM5co3c8PEe7q8+soL6u13B9Td//fEa2MfPtiknnz5
DYWk8PCgKi8JqqbW48quo6VBVW/do5AddnfO6GlrVrUNLQpzSW7ftq6tUFWb
G9XMa4GTv+9nT1arF1tPKKexu3O3wTNd6quLF6l3+q8ouAO7u9yxu8s3dnfp
KPauyTTFPk/TZnB2d/nF7s6d2N3lGbu7nLC7Kyx2d85gd5cpdnfs7tLH7s7d
2N1lLjJ2Ux070qEeKi9RgdB81dZ+RA3dHFO58s0MbjP0yQeqbe9LKhi/f0+0
ZHWNOnbsHZXyGg+fON/TrqzXoA2kWdmD31a8N/d0bjlP02bw8yc71P1lpSoY
KlFPbt+u9v/LHtXTf0EhM+zu3Knl+Y1qXjCoFjzwoHrplV3q1V+2KKdfu983
c8PE7q5h41oVjJ9xovvmzVNV1bXqcE+/wuxuXulXtd9Ypb5Z/V311Pc3qRd3
v678Pm/lit1drpK7pdqKMsXfPWcmGh5TzY1b1T/+Y42y3kvlye99T73+2xPK
6WtlLezu3CF8a1gd6ehUv2hqUq/sfk2NhqMK7sLuLnPs7gqD3V163LJrMoVb
ztO0GZzdXX6xu3Mndnd5xu7OEezuCoPdXa7Y3eWC3R27u6nY3XkTuzv3880M
DuCumTP4PHXoaLdKdQ2vU39nAH/64GyvSnX7emlbnTL3uaEZmBsA/2FugBu4
b45gdwdzsLtzP2ZwwH+YwVEM7pu5kQ3mBsB/mBvgBu6bI9jdwRzs7tyPGRzw
n5kzeHodeOs9BWRj/cr7VPq3OXZ3bsTcAPgPcwPcwH1zBLs7mIPdnfsxgwP+
wwyOYnDfzI1sMDcA/sPcADdw3xzB7g7mYHfnfszggP+M3RxSqa454NoX5MNc
17rMrFfxGvbuYs0N876yUmV6P8L9C+A9zA1wA6fmiFvDl1Xuj11H1VfmBRS7
O3gZuzv3Y3cH+A8zOIqB3Z0Z2N0B/sPcADdgdwfkD7s792N3BwAA0mXNDZle
O8e1dQAAN+g+tEs5/TjG7g5exu7O/djdAQCAdLG7AwB4Gbs7YCZ2d+7H7g4A
AKTr8ofvK6euleXaOgBAITl3zez0PvhkSAFexO7O/djdAQCAdLG7AwB4Gbs7
YCZ2d+5n7e6CJeWqvr7ekXre/1QBAAAAAADAIeEbyqn9zYol5YrdnXuxuwMA
AAAAAPAIdne+w2tOAwAAAAAAeMTtT5TTexx2d+7F7g4AAAAAAMAj2N0BAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAIA8+/8+AG+K
    "], {{0, 129}, {1263, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{379.29999999999995`, Automatic},
  ImageSizeRaw->{1263, 129},
  PlotRange->{{0, 1263}, {0, 
   129}}]], "Input",ExpressionUUID->"4b1e66f1-d530-495d-901a-14135c9d0a5b"]], \
"Text",
 CellChangeTimes->{{3.7893213252389865`*^9, 3.789321339460924*^9}, {
   3.7893216912455845`*^9, 3.7893216937877812`*^9}, {3.789322326205233*^9, 
   3.7893223686167345`*^9}, 3.789322410656622*^9, {3.789322459431542*^9, 
   3.789322464087079*^9}, 3.789322494835793*^9, {3.789322671128168*^9, 
   3.789322685439868*^9}, 3.7893227171520486`*^9, {3.7893230971211605`*^9, 
   3.7893231200069184`*^9}},ExpressionUUID->"54bb0727-aeae-405a-9fb8-\
60c0d4c9c86c"],

Cell[TextData[{
 "\:5176\:4e2d ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "i"], TraditionalForm]],ExpressionUUID->
  "81d3440b-362a-436d-85f0-3dcc91be0e32"],
 " \:548c ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],ExpressionUUID->
  "f066f5c3-3f6d-4653-93b9-6082ed4653ab"],
 " \:662f\:539f\:5b50\:5bf9\:8c61."
}], "Text",
 CellChangeTimes->{{3.7893231263758717`*^9, 3.7893232007318916`*^9}, {
  3.790000138360897*^9, 3.790000176249221*^9}, {3.790005658415078*^9, 
  3.7900056753334084`*^9}},ExpressionUUID->"fcda0702-5573-4464-82da-\
0d45f3810773"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["\:8303\:4f8b",
 FontWeight->"Plain"]], "Subsection",
 CellChangeTimes->{{3.789322712388748*^9, 3.789322714591852*^9}, 
   3.789992715930903*^9, 
   3.790005681869647*^9},ExpressionUUID->"50f5f8e1-9060-4c6a-af1f-\
c204b4dc4ced"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "+", 
   RowBox[{"b", "^", "c"}]}], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.734098443997217*^9, 3.734098449610694*^9}, {
  3.7810206062705555`*^9, 3.7810206078628454`*^9}, {3.788110691592346*^9, 
  3.7881106918691316`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"51f6016e-3621-4c80-9d63-227af947342c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{"a", ",", 
     RowBox[{"Power", "[", 
      RowBox[{"b", ",", "c"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.781020608376754*^9, 3.783096029499989*^9, 
  3.788110692335657*^9, 3.790513858878154*^9, 3.813435334100175*^9},
 CellLabel->
  "Out[94]//FullForm=",ExpressionUUID->"7cb4f371-bdf6-4962-9462-95a24655fc1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"5", ">", "1"}], ",", "\"\<true\>\"", ",", "\"\<false\>\""}], 
    "]"}], "//", "FullForm"}], "//", "HoldForm"}]], "Input",
 CellChangeTimes->{{3.7881100336434994`*^9, 3.788110070001897*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"dac2c0fd-9e8a-464e-8188-5cc2d5f859c2"],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox[
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"Greater", "[", 
       RowBox[{"5", ",", "1"}], "]"}], ",", "\"\<true\>\"", ",", 
      "\"\<false\>\""}], "]"}],
    ShowSpecialCharacters->False,
    ShowStringCharacters->True,
    NumberMarks->True],
   FullForm],
  HoldForm]], "Output",
 CellChangeTimes->{{3.788110063126115*^9, 3.7881100703764563`*^9}, 
   3.790513927693553*^9, 3.813435362950984*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"10616506-33f0-4e42-818a-38af518c53e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13"}],
    "}"}], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.781020828123707*^9, 3.7810208316087027`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"54375d7d-4906-4b24-a9a2-9f02186ebd7d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
    "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13"}], "]"}],
   
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.781020832075529*^9, 3.7905139307416162`*^9, 
  3.813435387799756*^9},
 CellLabel->
  "Out[96]//FullForm=",ExpressionUUID->"5c31656e-b7ba-4ba6-88d3-fa7dec85611e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["10", "4"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["10", "3"], " ", "20"}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["10", "2"], " ", 
     SuperscriptBox["20", "2"]}]}], "//", "FullForm"}], "//", 
  "HoldForm"}]], "Input",
 CellChangeTimes->{{3.781020626090207*^9, 3.781020642322356*^9}, 
   3.7881100925385094`*^9},
 CellLabel->"In[97]:=",ExpressionUUID->"f4d018e9-babd-49ba-baf5-733f08292a1b"],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox[
    RowBox[{"Plus", "[", 
     RowBox[{
      RowBox[{"Power", "[", 
       RowBox[{"10", ",", "4"}], "]"}], ",", 
      RowBox[{"Times", "[", 
       RowBox[{"4", ",", 
        RowBox[{"Power", "[", 
         RowBox[{"10", ",", "3"}], "]"}], ",", "20"}], "]"}], ",", 
      RowBox[{"Times", "[", 
       RowBox[{"6", ",", 
        RowBox[{"Power", "[", 
         RowBox[{"10", ",", "2"}], "]"}], ",", 
        RowBox[{"Power", "[", 
         RowBox[{"20", ",", "2"}], "]"}]}], "]"}]}], "]"}],
    ShowSpecialCharacters->False,
    ShowStringCharacters->True,
    NumberMarks->True],
   FullForm],
  HoldForm]], "Output",
 CellChangeTimes->{{3.781020631504882*^9, 3.7810206427772946`*^9}, 
   3.788110093520032*^9, 3.813435402465124*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"18bf7b71-5552-4e89-8772-ce30dc9230d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "=", "2"}], ")"}], "//", "FullForm"}], "//", 
  "HoldForm"}]], "Input",
 CellChangeTimes->{{3.7810206616772194`*^9, 3.781020674479903*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"01e3cea3-4093-4d8c-95b2-f65e1fb9342c"],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox[
    RowBox[{"Set", "[", 
     RowBox[{"x", ",", "2"}], "]"}],
    ShowSpecialCharacters->False,
    ShowStringCharacters->True,
    NumberMarks->True],
   FullForm],
  HoldForm]], "Output",
 CellChangeTimes->{{3.781020668117875*^9, 3.781020674864538*^9}, 
   3.79051396846312*^9, 3.8134354295512543`*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"21f4aa1e-d813-4756-b025-f64c57380bdd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "=", "2"}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", "3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"z", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "+", "y"}], ")"}], "^", "2"}]}]}], ")"}], "//", 
   "FullForm"}], "//", "HoldForm"}]], "Input",
 CellChangeTimes->{{3.781020691046364*^9, 3.781020694716409*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"6c8264b3-8e6b-454f-84eb-82d3261034f3"],

Cell[BoxData[
 TagBox[
  TagBox[
   StyleBox[
    RowBox[{"CompoundExpression", "[", 
     RowBox[{
      RowBox[{"Set", "[", 
       RowBox[{"x", ",", "2"}], "]"}], ",", 
      RowBox[{"Set", "[", 
       RowBox[{"y", ",", "3"}], "]"}], ",", 
      RowBox[{"Set", "[", 
       RowBox[{"z", ",", 
        RowBox[{"Power", "[", 
         RowBox[{
          RowBox[{"Plus", "[", 
           RowBox[{"x", ",", "y"}], "]"}], ",", "2"}], "]"}]}], "]"}]}], "]"}],
    ShowSpecialCharacters->False,
    ShowStringCharacters->True,
    NumberMarks->True],
   FullForm],
  HoldForm]], "Output",
 CellChangeTimes->{3.7810206952103367`*^9, 3.7905139725887003`*^9, 
  3.8134354484260883`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"c8a3303e-c75a-4be0-bb8d-20bb805fbbfa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
4tfImpM0IRhboK2TP28F/wfhHn9l
        "]]},
      Annotation[#, "Charting`Private`Tag$2997#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   BaseStyle->{},
   DisplayFunction->Identity,
   Frame->{{None, None}, {None, None}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{161.62812499999976`, Automatic},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-3, 3}, {-79.97043195833112, 79.9639382741392}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], "//", "FullForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 15001.},
 CellChangeTimes->{
  3.7067028105893784`*^9, {3.780930077138362*^9, 3.7809300805818067`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"853143fc-8628-45cc-94b6-c94ac145f3a5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"List", "[", 
      RowBox[{
       RowBox[{"List", "[", 
        RowBox[{
         RowBox[{"List", "[", "]"}], ",", 
         RowBox[{"List", "[", "]"}], ",", 
         RowBox[{"Annotation", "[", 
          RowBox[{
           RowBox[{"List", "[", 
            RowBox[{
             RowBox[{"RGBColor", "[", 
              RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}], 
              "]"}], ",", 
             RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
             RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"List", "[", 
               RowBox[{
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "2.6491571167619403`"}], ",", 
                  RowBox[{"-", "79.97043195833112`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "2.635332698579087`"}], ",", 
                  RowBox[{"-", "77.85164648445532`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "2.518454107086743`"}], ",", 
                  RowBox[{"-", "61.7569248659627`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "2.3916691850510325`"}], ",", 
                  RowBox[{"-", "46.24056173473892`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "2.273345279410731`"}], ",", 
                  RowBox[{"-", "33.49582473547731`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "2.1451150432270625`"}], ",", 
                  RowBox[{"-", "21.478295945731332`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "2.019223374459211`"}], ",", 
                  RowBox[{"-", "11.396211273938121`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "2.0173885205158912`"}], ",", 
                  RowBox[{"-", "11.261339149294542`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "2.015553666572572`"}], ",", 
                  RowBox[{"-", "11.126806620637367`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "2.0118839586859334`"}], ",", 
                  RowBox[{"-", "10.858759115805583`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "2.0045445429126554`"}], ",", 
                  RowBox[{"-", "10.326725667736682`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.9898657113661002`"}], ",", 
                  RowBox[{"-", "9.27883583129281`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.9605080482729897`"}], ",", 
                  RowBox[{"-", "7.247210903702012`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.9017927220867685`"}], ",", 
                  RowBox[{"-", "3.436152081878106`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.899803081728709`"}], ",", 
                  RowBox[{"-", "3.312809318870535`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.8978134413706496`"}], ",", 
                  RowBox[{"-", "3.189842590417925`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.8938341606545306`"}], ",", 
                  RowBox[{"-", "2.9450356619121507`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.8858755992222924`"}], ",", 
                  RowBox[{"-", "2.4599168916404537`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.8699584763578163`"}], ",", 
                  RowBox[{"-", "1.5075714831927627`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.838124230628864`"}], ",", 
                  "0.3262565242296347`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.7744557391709594`"}], ",", 
                  "3.716107052460579`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.772598302194078`"}], ",", 
                  "3.8095391529275346`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.770740865217197`"}], ",", 
                  "3.902665473795082`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.7670259912634343`"}], ",", 
                  "4.08800205839033`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.7595962433559094`"}], ",", 
                  "4.455019970629486`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.7447367475408595`"}], ",", 
                  "5.174506540167712`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.7150177559107593`"}], ",", 
                  "6.555856842405248`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.7131603189338782`"}], ",", 
                  "6.639662921321715`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.7113028819569969`"}], ",", 
                  "6.7231734739052555`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.7075880080032344`"}], ",", 
                  "6.889309281731833`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.7001582600957093`"}], ",", 
                  "7.21804867963111`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.6852987642806592`"}], ",", 
                  "7.861470377279389`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.655579772650559`"}], ",", 
                  "9.092659562896372`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.6537588757895498`"}], ",", 
                  "9.165704727374717`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.6519379789285407`"}], ",", 
                  "9.238475726300614`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.6482961852065225`"}], ",", 
                  "9.38319643499203`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.641012597762486`"}], ",", 
                  "9.669361148211905`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.6264454228744132`"}], ",", 
                  "10.228651377828314`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.5973110730982674`"}], ",", 
                  "11.295616008395008`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.5954901762372582`"}], ",", 
                  "11.360037604815425`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.593669279376249`"}], ",", 
                  "11.424194695658898`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.590027485654231`"}], ",", 
                  "11.551716568111928`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.5827438982101945`"}], ",", 
                  "11.803599528560888`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.5681767233221215`"}], ",", 
                  "12.294789931458851`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.5390423735459755`"}], ",", 
                  "13.227409623882288`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.5370666902702261`"}], ",", 
                  "13.28827443608062`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.535091006994477`"}], ",", 
                  "13.348839264782626`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.5311396404429787`"}], ",", 
                  "13.469070514044336`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.5232369073399816`"}], ",", 
                  "13.705950176424285`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.507431441133988`"}], ",", 
                  "14.165464528016976`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.4758205087220004`"}], ",", 
                  "15.028204309787988`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.473844825446251`"}], ",", 
                  "15.079660901077055`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.471869142170502`"}], ",", 
                  "15.130829847642215`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.4679177756190036`"}], ",", 
                  "15.23230634894739`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.4600150425160066`"}], ",", 
                  "15.431824580683045`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.444209576310013`"}], ",", 
                  "15.817208332062286`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.4125986438980254`"}], ",", 
                  "16.534055957706837`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.4107551640034544`"}], ",", 
                  "16.573667668849083`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.4089116841088836`"}], ",", 
                  "16.61303966319558`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.4052247243197415`"}], ",", 
                  "16.6910657544845`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.3978508047414575`"}], ",", 
                  "16.84425511832763`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.3831029655848899`"}], ",", 
                  "17.139252738128413`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.3536072872717546`"}], ",", 
                  "17.68428488261523`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.3517638073771836`"}], ",", 
                  "17.716381026198004`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.3499203274826126`"}], ",", 
                  "17.748247476849826`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.3462333676934708`"}], ",", 
                  "17.81129255234366`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.338859448115187`"}], ",", 
                  "17.934640170973864`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.3241116089586193`"}], ",", 
                  "18.170435445857716`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.294615930645484`"}], ",", 
                  "18.598987482546335`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.292617664336173`"}], ",", 
                  "18.625969643801557`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.290619398026862`"}], ",", 
                  "18.652693729529496`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.28662286540824`"}], ",", 
                  "18.705369270246262`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.2786298001709957`"}], ",", 
                  "18.807640999622592`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.262643669696507`"}], ",", 
                  "18.99995641734038`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.2606454033871959`"}], ",", 
                  "19.02285724544148`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.258647137077885`"}], ",", 
                  "19.04550638138629`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.254650604459263`"}], ",", 
                  "19.09005117264977`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.2466575392220185`"}], ",", 
                  "19.17613800357145`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.2306714087475301`"}], ",", 
                  "19.33639002618756`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.2286731424382191`"}], ",", 
                  "19.355311655070416`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.2266748761289081`"}], ",", 
                  "19.37398797516797`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.222678343510286`"}], ",", 
                  "19.410606284849926`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.2146852782730417`"}], ",", 
                  "19.480916753060477`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.2126870119637307`"}], ",", 
                  "19.497887082560162`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.2106887456544195`"}], ",", 
                  "19.514615294960052`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.2066922130357973`"}], ",", 
                  "19.547346964303156`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1986991477985531`"}], ",", 
                  "19.609922452061955`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.196700881489242`"}], ",", 
                  "19.62496701566245`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.194702615179931`"}], ",", 
                  "19.639772653848638`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.190706082561309`"}], ",", 
                  "19.668668749820835`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1827130173240645`"}], ",", 
                  "19.723611391063756`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1667268868495762`"}], ",", 
                  "19.822187837937648`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1647651606561373`"}], ",", 
                  "19.833253483180634`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1628034344626983`"}], ",", 
                  "19.844095006078486`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1588799820758204`"}], ",", 
                  "19.86510719472824`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1510330773020647`"}], ",", 
                  "19.904458712670593`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.149071351108626`"}], ",", 
                  "19.913741948378977`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1471096249151869`"}], ",", 
                  "19.92280408152124`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.143186172528309`"}], ",", 
                  "19.940266549996885`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1353392677545533`"}], ",", 
                  "19.97255486493931`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1333775415611145`"}], ",", 
                  "19.980079849345277`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1314158153676754`"}], ",", 
                  "19.98738675096414`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1274923629807976`"}], ",", 
                  "20.001347815730067`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1255306367873588`"}], ",", 
                  "20.008002733821897`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1235689105939197`"}], ",", 
                  "20.014441079016134`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1196454582070419`"}], ",", 
                  "20.02666956060135`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.117683732013603`"}], ",", 
                  "20.03246045193708`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.115722005820164`"}], ",", 
                  "20.03803628026474`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1117985534332862`"}], ",", 
                  "20.048544257785334`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1098368272398473`"}], ",", 
                  "20.053477161923027`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1078751010464085`"}], ",", 
                  "20.05819651294216`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1039516486595307`"}], ",", 
                  "20.06699606551423`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1019899224660916`"}], ",", 
                  "20.07107702201193`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.1000281962726528`"}], ",", 
                  "20.074945935280574`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.098066470079214`"}], ",", 
                  "20.07860318279255`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0961047438857752`"}], ",", 
                  "20.082049142020225`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0941430176923364`"}], ",", 
                  "20.085284190435978`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0921812914988973`"}], ",", 
                  "20.08830870551219`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0882578391120195`"}], ",", 
                  "20.093727645535505`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0862961129185806`"}], ",", 
                  "20.096122825427365`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0843343867251416`"}], ",", 
                  "20.098308981869188`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0823726605317026`"}], ",", 
                  "20.100286492333368`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0804109343382637`"}], ",", 
                  "20.10205573429227`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.078449208144825`"}], ",", 
                  "20.103617085218282`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0764874819513859`"}], ",", 
                  "20.104970922583767`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0745257557579468`"}], ",", 
                  "20.106117623861124`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.072564029564508`"}], ",", 
                  "20.107057566522716`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0706023033710692`"}], ",", 
                  "20.107791128040923`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0686405771776302`"}], ",", 
                  "20.108318685888126`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0666788509841911`"}], ",", 
                  "20.1086406175367`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0647171247907523`"}], ",", 
                  "20.108757300459025`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0627553985973135`"}], ",", 
                  "20.10866911212748`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0607936724038745`"}], ",", 
                  "20.10837643001444`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0588319462104354`"}], ",", 
                  "20.10787963159229`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0568702200169966`"}], ",", 
                  "20.107179094333397`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0549084938235578`"}], ",", 
                  "20.106275195710147`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0529467676301187`"}], ",", 
                  "20.105168313194916`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0509850414366797`"}], ",", 
                  "20.103858824260083`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0490233152432409`"}], ",", 
                  "20.10234710637802`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.047061589049802`"}], ",", 
                  "20.100633537021114`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.045099862856363`"}], ",", 
                  "20.098718493661742`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.043138136662924`"}], ",", 
                  "20.096602353772276`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0411764104694852`"}], ",", 
                  "20.094285494825094`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0393468876572245`"}], ",", 
                  "20.091944219909216`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0375173648449638`"}], ",", 
                  "20.089429002303223`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0338583192204425`"}], ",", 
                  "20.083877963759775`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0320287964081818`"}], ",", 
                  "20.080842755191718`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0301992735959211`"}], ",", 
                  "20.07763482867238`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0265402279713998`"}], ",", 
                  "20.07070204651867`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.024710705159139`"}], ",", 
                  "20.06697780325371`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0228811823468784`"}], ",", 
                  "20.063082066776285`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.019222136722357`"}], ",", 
                  "20.054777338922854`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0119040454733146`"}], ",", 
                  "20.036123436793424`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.010074522661054`"}], ",", 
                  "20.031035821000465`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0082449998487932`"}], ",", 
                  "20.025779161472688`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "1.0045859542242719`"}], ",", 
                  "20.014759935951446`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9972678629752293`"}], ",", 
                  "19.99070643221801`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9954383401629687`"}], ",", 
                  "19.984275039718142`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.993608817350708`"}], ",", 
                  "19.977677052961077`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9899497717261867`"}], ",", 
                  "19.963982521414188`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.982631680477144`"}], ",", 
                  "19.93460779936107`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9808021576648833`"}], ",", 
                  "19.926852225975374`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9789726348526226`"}], ",", 
                  "19.918932507810112`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9753135892281013`"}], ",", 
                  "19.902601861879738`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9679954979790587`"}], ",", 
                  "19.867984304791268`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9661659751667981`"}], ",", 
                  "19.85892414634082`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9643364523545375`"}], ",", 
                  "19.849702292588447`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9606774067300161`"}], ",", 
                  "19.830774723916747`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9533593154809734`"}], ",", 
                  "19.790992715077248`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9515297926687127`"}], ",", 
                  "19.780647567383134`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9497002698564521`"}], ",", 
                  "19.770143173864724`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9460412242319307`"}], ",", 
                  "19.748657874093865`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9387231329828881`"}], ",", 
                  "19.703789796787667`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9240869504848028`"}], ",", 
                  "19.606532316491176`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9221026412578021`"}], ",", 
                  "19.592581183850108`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9201183320308013`"}], ",", 
                  "19.57844851303034`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9161497135767998`"}], ",", 
                  "19.549640119491492`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.9082124766687967`"}], ",", 
                  "19.489862063274266`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.8923380028527905`"}], ",", 
                  "19.36174838194316`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.8903536936257898`"}], ",", 
                  "19.344939517547175`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.888369384398789`"}], ",", 
                  "19.327955365519735`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.8844007659447874`"}], ",", 
                  "19.293462761207294`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.8764635290367844`"}], ",", 
                  "19.22239129000988`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.8605890552207783`"}], ",", 
                  "19.071990804986434`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.8586047459937776`"}], ",", 
                  "19.052424217591533`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.8566204367667769`"}], ",", 
                  "19.032688593112425`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.8526518183127754`"}], ",", 
                  "18.992711795538405`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.8447145814047723`"}], ",", 
                  "18.91074694438484`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.8288401075887661`"}], ",", 
                  "18.73885972571711`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.7970911599567538`"}], ",", 
                  "18.36395528423131`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.7952390541109313`"}], ",", 
                  "18.340829234540344`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.7933869482651088`"}], ",", 
                  "18.31756678957951`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.7896827365734638`"}], ",", 
                  "18.27063398450251`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.7822743131901738`"}], ",", 
                  "18.17514560830717`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.7674574664235938`"}], ",", 
                  "17.977748948390683`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.7378237728904338`"}], ",", 
                  "17.55784525157137`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.7359716670446113`"}], ",", 
                  "17.53051211437518`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.7341195611987887`"}], ",", 
                  "17.503052747143354`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.7304153495071437`"}], ",", 
                  "17.447756593227062`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.7230069261238538`"}], ",", 
                  "17.335663502163875`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.7081900793572737`"}], ",", 
                  "17.105545343754713`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.6785563858241136`"}], ",", 
                  "16.62215037492205`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.676549493563551`"}], ",", 
                  "16.588321445810866`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.6745426013029885`"}], ",", 
                  "16.554356272602977`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.6705288167818633`"}], ",", 
                  "16.486018810495565`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.6625012477396128`"}], ",", 
                  "16.347726739703717`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.646446109655112`"}], ",", 
                  "16.064764541327573`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.6143358334861102`"}], ",", 
                  "15.474052153531174`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.5501152811481067`"}], ",", 
                  "14.199269302767066`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.42401274388791677`"}], ",", 
                  "11.378428598972928`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.30637122302313563`"}], ",", 
                  "8.440876135034367`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.17882337161498782`"}], ",", 
                  "5.019009048280147`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"-", "0.059736536602248806`"}], ",", 
                  "1.6907588114691354`"}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.05701173099467323`", ",", 
                  RowBox[{"-", "1.6137881501362492`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.183666329134962`", ",", 
                  RowBox[{"-", "5.152248699340273`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.30185991087984193`", ",", 
                  RowBox[{"-", "8.32348667731951`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.42995982316808856`", ",", 
                  RowBox[{"-", "11.519822356482816`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.5557211680405183`", ",", 
                  RowBox[{"-", "14.315256805557393`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.5575539856729718`", ",", 
                  RowBox[{"-", "14.352989373206782`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.5593868033054252`", ",", 
                  RowBox[{"-", "14.390628293517974`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.5630524385703322`", ",", 
                  RowBox[{"-", "14.465623960758064`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.5703837091001459`", ",", 
                  RowBox[{"-", "14.614477982135146`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.5850462501597735`", ",", 
                  RowBox[{"-", "14.90756781588554`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.6143713322790287`", ",", 
                  RowBox[{"-", "15.47472299464024`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.6162041499114822`", ",", 
                  RowBox[{"-", "15.509306157872137`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.6180369675439357`", ",", 
                  RowBox[{"-", "15.543785822824209`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.6217026028088426`", ",", 
                  RowBox[{"-", "15.61243342652119`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.6290338733386563`", ",", 
                  RowBox[{"-", "15.748473109512542`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.643696414398284`", ",", 
                  RowBox[{"-", "16.01546142129347`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.6730214965175392`", ",", 
                  RowBox[{"-", "16.52852217531721`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.6750091005647327`", ",", 
                  RowBox[{"-", "16.562263561816337`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.6769967046119263`", ",", 
                  RowBox[{"-", "16.59587161478546`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.6809719127063134`", ",", 
                  RowBox[{"-", "16.66268614969996`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.6889223288950876`", ",", 
                  RowBox[{"-", "16.794697942397942`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.7048231612726361`", ",", 
                  RowBox[{"-", "17.05216447498128`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.736624826027733`", ",", 
                  RowBox[{"-", "17.540165774589127`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.7386124300749266`", ",", 
                  RowBox[{"-", "17.56944575434633`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.7406000341221202`", ",", 
                  RowBox[{"-", "17.598579837103742`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.7445752422165073`", ",", 
                  RowBox[{"-", "17.65640874118544`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.7525256584052815`", ",", 
                  RowBox[{"-", "17.770298510580332`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.76842649078283`", ",", 
                  RowBox[{"-", "17.9909179500075`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.8002281555379268`", ",", 
                  RowBox[{"-", "18.402812877103138`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.8020835562039421`", ",", 
                  RowBox[{"-", "18.425610293676623`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.8039389568699573`", ",", 
                  RowBox[{"-", "18.448269651151527`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.8076497582019879`", ",", 
                  RowBox[{"-", "18.493172911357917`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.8150713608660491`", ",", 
                  RowBox[{"-", "18.581308670663304`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.8299145661941716`", ",", 
                  RowBox[{"-", "18.7508256077747`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.8317699668601869`", ",", 
                  RowBox[{"-", "18.771375755340642`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.8336253675262022`", ",", 
                  RowBox[{"-", "18.791782734017307`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.8373361688582328`", ",", 
                  RowBox[{"-", "18.83216590725511`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.8447577715222939`", ",", 
                  RowBox[{"-", "18.911200175134944`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.8596009768504163`", ",", 
                  RowBox[{"-", "19.062268859441673`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.8614563775164316`", ",", 
                  RowBox[{"-", "19.08048998134889`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.8633117781824469`", ",", 
                  RowBox[{"-", "19.098562824576128`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.8670225795144775`", ",", 
                  RowBox[{"-", "19.134262397542983`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.8744441821785386`", ",", 
                  RowBox[{"-", "19.203868147392527`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.8892873875066609`", ",", 
                  RowBox[{"-", "19.335834525685122`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.8911427881726762`", ",", 
                  RowBox[{"-", "19.351644865282427`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.8929981888386915`", ",", 
                  RowBox[{"-", "19.36730181640905`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.8967089901707221`", ",", 
                  RowBox[{"-", "19.398154275802586`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.9041305928347833`", ",", 
                  RowBox[{"-", "19.458004481017102`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.9189737981629056`", ",", 
                  RowBox[{"-", "19.57021450008609`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.9207926587130487`", ",", 
                  RowBox[{"-", "19.583271549937777`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.9226115192631918`", ",", 
                  RowBox[{"-", "19.59617628900341`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.9262492403634782`", ",", 
                  RowBox[{"-", "19.621527631326114`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.9335246825640509`", ",", 
                  RowBox[{"-", "19.67038934858424`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.935343543114194`", ",", 
                  RowBox[{"-", "19.68221948799455`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.9371624036643371`", ",", 
                  RowBox[{"-", "19.693894909717955`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.9408001247646234`", ",", 
                  RowBox[{"-", "19.71678039665362`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.948075566965196`", ",", 
                  RowBox[{"-", "19.760681520327374`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.9498944275153391`", ",", 
                  RowBox[{"-", "19.77126549408944`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.9517132880654824`", ",", 
                  RowBox[{"-", "19.781692343263742`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.9553510091657686`", ",", 
                  RowBox[{"-", "19.80207346439863`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.9626264513663412`", ",", 
                  RowBox[{"-", "19.84093697366054`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.9771773357674864`", ",", 
                  RowBox[{"-", "19.91100166692879`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.9789961963176296`", ",", 
                  RowBox[{"-", "19.91903554377377`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.9808150568677727`", ",", 
                  RowBox[{"-", "19.92690748222927`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.9844527779680591`", ",", 
                  RowBox[{"-", "19.9421643405214`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.9917282201686317`", ",", 
                  RowBox[{"-", "19.97072155847718`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.9935470807187748`", ",", 
                  RowBox[{"-", "19.977451504053313`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.995365941268918`", ",", 
                  RowBox[{"-", "19.984017104339117`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"0.9990036623692043`", ",", 
                  RowBox[{"-", "19.99665406558926`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.006279104569777`", ",", 
                  RowBox[{"-", "20.019942606650766`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0080979651199202`", ",", 
                  RowBox[{"-", "20.02534936575119`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0099168256700632`", ",", 
                  RowBox[{"-", "20.030589372660412`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0135545467703495`", ",", 
                  RowBox[{"-", "20.040567926454834`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0153734073204927`", ",", 
                  RowBox[{"-", "20.045305871614822`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0171922678706358`", ",", 
                  RowBox[{"-", "20.04987586113318`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.020829988970922`", ",", 
                  RowBox[{"-", "20.058510769794594`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0226488495210653`", ",", 
                  RowBox[{"-", "20.062575087212437`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0244677100712083`", ",", 
                  RowBox[{"-", "20.066470245538213`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0281054311714946`", ",", 
                  RowBox[{"-", "20.07375188146319`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0299242917216378`", ",", 
                  RowBox[{"-", "20.07713775733715`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.031743152271781`", ",", 
                  RowBox[{"-", "20.08035327066864`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0353808733720673`", ",", 
                  RowBox[{"-", "20.08627200625373`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0373545203369505`", ",", 
                  RowBox[{"-", "20.089196704628247`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.039328167301834`", ",", 
                  RowBox[{"-", "20.091919363565488`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0413018142667172`", ",", 
                  RowBox[{"-", "20.094439598669844`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0432754612316004`", ",", 
                  RowBox[{"-", "20.096757025545724`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0452491081964836`", ",", 
                  RowBox[{"-", "20.098871259797498`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0472227551613669`", ",", 
                  RowBox[{"-", "20.10078191702956`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.04919640212625`", ",", 
                  RowBox[{"-", "20.10248861284631`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0511700490911333`", ",", 
                  RowBox[{"-", "20.10399096285214`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0531436960560165`", ",", 
                  RowBox[{"-", "20.105288582651436`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0551173430208998`", ",", 
                  RowBox[{"-", "20.106381087848582`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0570909899857832`", ",", 
                  RowBox[{"-", "20.10726809404799`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0590646369506664`", ",", 
                  RowBox[{"-", "20.107949216854035`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0610382839155497`", ",", 
                  RowBox[{"-", "20.108424071871113`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.063011930880433`", ",", 
                  RowBox[{"-", "20.108692274703614`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0649855778453163`", ",", 
                  RowBox[{"-", "20.108753440955926`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0669592248101996`", ",", 
                  RowBox[{"-", "20.108607186232454`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0689328717750828`", ",", 
                  RowBox[{"-", "20.108253126137576`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.070906518739966`", ",", 
                  RowBox[{"-", "20.10769087627569`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0728801657048492`", ",", 
                  RowBox[{"-", "20.106920052251176`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0748538126697325`", ",", 
                  RowBox[{"-", "20.105940269668444`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0768274596346157`", ",", 
                  RowBox[{"-", "20.104751144131882`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.078801106599499`", ",", 
                  RowBox[{"-", "20.103352291245862`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0807747535643824`", ",", 
                  RowBox[{"-", "20.101743326614795`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0827484005292656`", ",", 
                  RowBox[{"-", "20.09992386584307`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0847220474941488`", ",", 
                  RowBox[{"-", "20.09789352453507`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0866956944590322`", ",", 
                  RowBox[{"-", "20.095651918295196`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0886693414239155`", ",", 
                  RowBox[{"-", "20.09319866272783`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0906429883887987`", ",", 
                  RowBox[{"-", "20.090533373437367`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.092616635353682`", ",", 
                  RowBox[{"-", "20.0876556660282`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0945902823185651`", ",", 
                  RowBox[{"-", "20.08456515610473`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.0985375762483316`", ",", 
                  RowBox[{"-", "20.077744191132396`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1005112232132148`", ",", 
                  RowBox[{"-", "20.07401296729233`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.102484870178098`", ",", 
                  RowBox[{"-", "20.070067403355512`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1064321641078645`", ",", 
                  RowBox[{"-", "20.061531717609206`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1084058110727477`", ",", 
                  RowBox[{"-", "20.0569408270085`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.110379458037631`", ",", 
                  RowBox[{"-", "20.052134058728605`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1143267519673976`", ",", 
                  RowBox[{"-", "20.041871351548846`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1163003989322808`", ",", 
                  RowBox[{"-", "20.036414643857757`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1182740458971643`", ",", 
                  RowBox[{"-", "20.030740520905052`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1222213398269307`", ",", 
                  RowBox[{"-", "20.01873849163236`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1301159276864636`", ",", 
                  RowBox[{"-", "19.992108536540815`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1320895746513469`", ",", 
                  RowBox[{"-", "19.984901743679757`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.13406322161623`", ",", 
                  RowBox[{"-", "19.977474460392216`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1380105155459965`", ",", 
                  RowBox[{"-", "19.961956884955242`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1459051034055296`", ",", 
                  RowBox[{"-", "19.928258935556713`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1478787503704129`", ",", 
                  RowBox[{"-", "19.91927745620674`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1498523973352963`", ",", 
                  RowBox[{"-", "19.91007241126541`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1537996912650628`", ",", 
                  RowBox[{"-", "19.89099008702626`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1616942791245957`", ",", 
                  RowBox[{"-", "19.850125738044948`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1635357227083007`", ",", 
                  RowBox[{"-", "19.84007419110047`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1653771662920056`", ",", 
                  RowBox[{"-", "19.82982537164995`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1690600534594155`", ",", 
                  RowBox[{"-", "19.80873466639526`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1764258277942357`", ",", 
                  RowBox[{"-", "19.764172248622472`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1782672713779405`", ",", 
                  RowBox[{"-", "19.752533779780904`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1801087149616456`", ",", 
                  RowBox[{"-", "19.740695540762225`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1837916021290558`", ",", 
                  RowBox[{"-", "19.716418503357954`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1911573764638757`", ",", 
                  RowBox[{"-", "19.665453449233066`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1929988200475807`", ",", 
                  RowBox[{"-", "19.652208077125785`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1948402636312856`", ",", 
                  RowBox[{"-", "19.638760437170298`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.1985231507986955`", ",", 
                  RowBox[{"-", "19.611257104879197`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.2058889251335154`", ",", 
                  RowBox[{"-", "19.55380948892769`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.2206204738031554`", ",", 
                  RowBox[{"-", "19.429080516757285`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.2224619173868603`", ",", 
                  RowBox[{"-", "19.41256139401266`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.2243033609705654`", ",", 
                  RowBox[{"-", "19.39583500807768`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.2279862481379755`", ",", 
                  RowBox[{"-", "19.36175919780111`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.2353520224727954`", ",", 
                  RowBox[{"-", "19.291106681772796`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.2500835711424352`", ",", 
                  RowBox[{"-", "19.13972813302518`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.2795466684817152`", ",", 
                  RowBox[{"-", "18.796117490444345`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.2815428984801602`", ",", 
                  RowBox[{"-", "18.77084212743976`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.2835391284786053`", ",", 
                  RowBox[{"-", "18.745311421228493`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.2875315884754954`", ",", 
                  RowBox[{"-", "18.693482388216907`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.295516508469276`", ",", 
                  RowBox[{"-", "18.586742703054167`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.3114863484568366`", ",", 
                  RowBox[{"-", "18.36084776190421`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.3134825784552817`", ",", 
                  RowBox[{"-", "18.331439178521588`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.3154788084537268`", ",", 
                  RowBox[{"-", "18.301768888056134`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.3194712684506171`", ",", 
                  RowBox[{"-", "18.24164159490766`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.3274561884443976`", ",", 
                  RowBox[{"-", "18.118229022957202`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.3434260284319584`", ",", 
                  RowBox[{"-", "17.858682842175902`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.3454222584304034`", ",", 
                  RowBox[{"-", "17.82503921639663`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.3474184884288487`", ",", 
                  RowBox[{"-", "17.791127519658353`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.3514109484257388`", ",", 
                  RowBox[{"-", "17.722498322335746`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.359395868419519`", ",", 
                  RowBox[{"-", "17.582005575523056`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.37536570840708`", ",", 
                  RowBox[{"-", "17.287993578961398`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.4073053883822015`", ",", 
                  RowBox[{"-", "16.647150819962683`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.4091694149994685`", ",", 
                  RowBox[{"-", "16.607549596113795`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.4110334416167352`", ",", 
                  RowBox[{"-", "16.56770355759855`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.4147614948512688`", ",", 
                  RowBox[{"-", "16.487275741221325`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.4222176013203363`", ",", 
                  RowBox[{"-", "16.32346808364683`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.437129814258471`", ",", 
                  RowBox[{"-", "15.983972129752114`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.4669542401347404`", ",", 
                  RowBox[{"-", "15.256877351255604`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.4688182667520073`", ",", 
                  RowBox[{"-", "15.209281434980582`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.470682293369274`", ",", 
                  RowBox[{"-", "15.16143034125841`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.4744103466038077`", ",", 
                  RowBox[{"-", "15.064961326124966`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.4818664530728751`", ",", 
                  RowBox[{"-", "14.868946917668573`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.4967786660110098`", ",", 
                  RowBox[{"-", "14.464540048532228`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.526603091887279`", ",", 
                  RowBox[{"-", "13.60563378564109`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.5284305783886736`", ",", 
                  RowBox[{"-", "13.550810349837661`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.5302580648900683`", ",", 
                  RowBox[{"-", "13.495731688525801`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.5339130378928578`", ",", 
                  RowBox[{"-", "13.384807468722954`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.5412229838984368`", ",", 
                  RowBox[{"-", "13.159882895823806`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.5558428759095944`", ",", 
                  RowBox[{"-", "12.697660860235452`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.5850826599319094`", ",", 
                  RowBox[{"-", "11.723178376969031`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.5869101464333042`", ",", 
                  RowBox[{"-", "11.660036363817554`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.588737632934699`", ",", 
                  RowBox[{"-", "11.596629359926766`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.5923926059374882`", ",", 
                  RowBox[{"-", "11.469019159273437`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.599702551943067`", ",", 
                  RowBox[{"-", "11.210605441902722`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.6143224439542245`", ",", 
                  RowBox[{"-", "10.680936386288835`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.6435622279765396`", ",", 
                  RowBox[{"-", "9.56968493864185`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.6455445008926743`", ",", 
                  RowBox[{"-", "9.491820130454414`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.647526773808809`", ",", 
                  RowBox[{"-", "9.413632021652305`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.6514913196410788`", ",", 
                  RowBox[{"-", "9.256284344373043`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.659420411305618`", ",", 
                  RowBox[{"-", "8.937692246297537`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.6752785946346964`", ",", 
                  RowBox[{"-", "8.284833837543395`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.7069949612928532`", ",", 
                  RowBox[{"-", "6.915722261341912`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.7704276946091668`", ",", 
                  RowBox[{"-", "3.918336807919431`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.7722777641441234`", ",", 
                  RowBox[{"-", "3.8256317918225378`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.77412783367908`", ",", 
                  RowBox[{"-", "3.7326234718943`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.777827972748993`", ",", 
                  RowBox[{"-", "3.545695654076013`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.785228250888819`", ",", 
                  RowBox[{"-", "3.1681864413176086`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.8000288071684714`", ",", 
                  RowBox[{"-", "2.3984827851169257`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.8296299197277759`", ",", 
                  RowBox[{"-", "0.7997671724077406`"}]}], "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.8888321448463852`", ",", "2.6394362748206603`"}], 
                 "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.8908370007960817`", ",", "2.7616393478711387`"}], 
                 "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.8928418567457785`", ",", "2.8842224269129986`"}], 
                 "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.8968515686451717`", ",", "3.1305302146533265`"}], 
                 "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.9048709924439584`", ",", "3.627723590538835`"}], 
                 "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.9209098400415314`", ",", "4.64051179815452`"}], 
                 "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"1.952987535236678`", ",", "6.740416070568905`"}], 
                 "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"2.0171429256269704`", ",", "11.243312314562573`"}], 
                 "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"2.143115138991739`", ",", "21.305109412510042`"}], 
                 "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"2.2606263359610983`", ",", "32.22205282012138`"}], 
                 "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"2.3880438634738246`", ",", "45.82563625117565`"}], 
                 "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"2.5070003745911422`", ",", "60.27353026968518`"}], 
                 "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"2.623618318292643`", ",", "76.15867851956025`"}], 
                 "]"}], ",", 
                RowBox[{"List", "[", 
                 RowBox[{"2.6486227879319997`", ",", "79.9639382741392`"}], 
                 "]"}]}], "]"}], "]"}]}], "]"}], ",", 
           "\"\<Charting`Private`Tag$2997#1\>\""}], "]"}]}], "]"}], ",", 
       RowBox[{"List", "[", "]"}], ",", 
       RowBox[{"List", "[", "]"}]}], "]"}], ",", 
     RowBox[{"Rule", "[", 
      RowBox[{"AspectRatio", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"GoldenRatio", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"Rule", "[", 
      RowBox[{"Axes", ",", 
       RowBox[{"List", "[", 
        RowBox[{"False", ",", "False"}], "]"}]}], "]"}], ",", 
     RowBox[{"Rule", "[", 
      RowBox[{"AxesLabel", ",", 
       RowBox[{"List", "[", 
        RowBox[{"None", ",", "None"}], "]"}]}], "]"}], ",", 
     RowBox[{"Rule", "[", 
      RowBox[{"AxesOrigin", ",", 
       RowBox[{"List", "[", 
        RowBox[{"0", ",", "0"}], "]"}]}], "]"}], ",", 
     RowBox[{"Rule", "[", 
      RowBox[{"BaseStyle", ",", 
       RowBox[{"List", "[", "]"}]}], "]"}], ",", 
     RowBox[{"Rule", "[", 
      RowBox[{"DisplayFunction", ",", "Identity"}], "]"}], ",", 
     RowBox[{"Rule", "[", 
      RowBox[{"Frame", ",", 
       RowBox[{"List", "[", 
        RowBox[{
         RowBox[{"List", "[", 
          RowBox[{"None", ",", "None"}], "]"}], ",", 
         RowBox[{"List", "[", 
          RowBox[{"None", ",", "None"}], "]"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"Rule", "[", 
      RowBox[{"FrameLabel", ",", 
       RowBox[{"List", "[", 
        RowBox[{
         RowBox[{"List", "[", 
          RowBox[{"None", ",", "None"}], "]"}], ",", 
         RowBox[{"List", "[", 
          RowBox[{"None", ",", "None"}], "]"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"Rule", "[", 
      RowBox[{"FrameTicks", ",", 
       RowBox[{"List", "[", 
        RowBox[{
         RowBox[{"List", "[", 
          RowBox[{"Automatic", ",", 
           RowBox[{"Charting`ScaledFrameTicks", "[", 
            RowBox[{"List", "[", 
             RowBox[{"Identity", ",", "Identity"}], "]"}], "]"}]}], "]"}], 
         ",", 
         RowBox[{"List", "[", 
          RowBox[{"Automatic", ",", 
           RowBox[{"Charting`ScaledFrameTicks", "[", 
            RowBox[{"List", "[", 
             RowBox[{"Identity", ",", "Identity"}], "]"}], "]"}]}], "]"}]}], 
        "]"}]}], "]"}], ",", 
     RowBox[{"Rule", "[", 
      RowBox[{"GridLines", ",", 
       RowBox[{"List", "[", 
        RowBox[{"None", ",", "None"}], "]"}]}], "]"}], ",", 
     RowBox[{"Rule", "[", 
      RowBox[{"GridLinesStyle", ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"GrayLevel", "[", 
         RowBox[{"0.5`", ",", "0.4`"}], "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"Rule", "[", 
      RowBox[{"ImagePadding", ",", "All"}], "]"}], ",", 
     RowBox[{"Rule", "[", 
      RowBox[{"ImageSize", ",", 
       RowBox[{"List", "[", 
        RowBox[{"161.62812499999976`", ",", "Automatic"}], "]"}]}], "]"}], 
     ",", 
     RowBox[{"Rule", "[", 
      RowBox[{"Method", ",", 
       RowBox[{"List", "[", 
        RowBox[{
         RowBox[{"Rule", "[", 
          RowBox[{"\"\<DefaultBoundaryStyle\>\"", ",", "Automatic"}], "]"}], 
         ",", 
         RowBox[{"Rule", "[", 
          RowBox[{"\"\<DefaultMeshStyle\>\"", ",", 
           RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
         RowBox[{"Rule", "[", 
          RowBox[{"\"\<ScalingFunctions\>\"", ",", "None"}], "]"}], ",", 
         RowBox[{"Rule", "[", 
          RowBox[{"\"\<CoordinatesToolOptions\>\"", ",", 
           RowBox[{"List", "[", 
            RowBox[{
             RowBox[{"Rule", "[", 
              RowBox[{"\"\<DisplayFunction\>\"", ",", 
               RowBox[{"Function", "[", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Function", "[", 
                    RowBox[{"Identity", "[", 
                    RowBox[{"Slot", "[", "1", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"Part", "[", 
                    RowBox[{
                    RowBox[{"Slot", "[", "1", "]"}], ",", "1"}], "]"}], "]"}],
                   ",", 
                  RowBox[{
                   RowBox[{"Function", "[", 
                    RowBox[{"Identity", "[", 
                    RowBox[{"Slot", "[", "1", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"Part", "[", 
                    RowBox[{
                    RowBox[{"Slot", "[", "1", "]"}], ",", "2"}], "]"}], 
                   "]"}]}], "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"Rule", "[", 
              RowBox[{"\"\<CopiedValueFunction\>\"", ",", 
               RowBox[{"Function", "[", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Function", "[", 
                    RowBox[{"Identity", "[", 
                    RowBox[{"Slot", "[", "1", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"Part", "[", 
                    RowBox[{
                    RowBox[{"Slot", "[", "1", "]"}], ",", "1"}], "]"}], "]"}],
                   ",", 
                  RowBox[{
                   RowBox[{"Function", "[", 
                    RowBox[{"Identity", "[", 
                    RowBox[{"Slot", "[", "1", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"Part", "[", 
                    RowBox[{
                    RowBox[{"Slot", "[", "1", "]"}], ",", "2"}], "]"}], 
                   "]"}]}], "]"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
        "]"}]}], "]"}], ",", 
     RowBox[{"Rule", "[", 
      RowBox[{"PlotRange", ",", 
       RowBox[{"List", "[", 
        RowBox[{
         RowBox[{"List", "[", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "]"}], ",", 
         RowBox[{"List", "[", 
          RowBox[{
           RowBox[{"-", "79.97043195833112`"}], ",", "79.9639382741392`"}], 
          "]"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"Rule", "[", 
      RowBox[{"PlotRangeClipping", ",", "True"}], "]"}], ",", 
     RowBox[{"Rule", "[", 
      RowBox[{"PlotRangePadding", ",", 
       RowBox[{"List", "[", 
        RowBox[{
         RowBox[{"List", "[", 
          RowBox[{
           RowBox[{"Scaled", "[", "0.02`", "]"}], ",", 
           RowBox[{"Scaled", "[", "0.02`", "]"}]}], "]"}], ",", 
         RowBox[{"List", "[", 
          RowBox[{
           RowBox[{"Scaled", "[", "0.05`", "]"}], ",", 
           RowBox[{"Scaled", "[", "0.05`", "]"}]}], "]"}]}], "]"}]}], "]"}], 
     ",", 
     RowBox[{"Rule", "[", 
      RowBox[{"Ticks", ",", 
       RowBox[{"List", "[", 
        RowBox[{"Automatic", ",", "Automatic"}], "]"}]}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.81343545834201*^9},
 CellLabel->
  "Out[100]//FullForm=",ExpressionUUID->"b5ce88d7-8595-4160-aeb9-\
a424fc1c90a0"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7885382527381277`*^9, 3.7885382606669483`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"b97f0b36-b6d9-4dcc-8d84-1fac97b8ccbd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"8ad9ba7d-b5c9-4e75-a22c-0faf1105a31e"],

Cell[CellGroupData[{

Cell["\:4f7f\:7528\:8868\:8fbe\:5f0f", "Section",
 CellChangeTimes->{
  3.7777047916430187`*^9, 3.7784996309822063`*^9, {3.781020874143722*^9, 
   3.7810208795474486`*^9}, 3.781021153902781*^9, {3.78318827803904*^9, 
   3.7831882810309925`*^9}, {3.7881101474955983`*^9, 3.788110147951476*^9}, {
   3.789383328701786*^9, 3.7893833337752237`*^9}, {3.7900056950151167`*^9, 
   3.790005701275532*^9}},ExpressionUUID->"718659a5-bb81-4bff-b294-\
3a397f487fcb"],

Cell["\:8003\:8651\:4ee5\:4e0b\:8868\:8fbe\:5f0f\:ff1a", "Text",
 CellChangeTimes->{{3.789383409830155*^9, 3.7893834189411945`*^9}, {
  3.7900057071301775`*^9, 
  3.7900057171334486`*^9}},ExpressionUUID->"9519f9ff-ec24-4e32-9560-\
fc9959b77fad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "6", ",", "7"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mathExp", "=", 
   RowBox[{"a", "+", "b", "+", "c", "+", "d"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7893834203723764`*^9, 3.7893834405284414`*^9}, {
  3.789407629095109*^9, 3.789407643075658*^9}, {3.813455627221549*^9, 
  3.813455628829528*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"f544635f-9fb2-4cb8-980b-edfb8592cc37"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullForm", "[", "data", "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullForm", "[", "mathExp", "]"}]}], "Input",
 CellChangeTimes->{{3.7893834453345675`*^9, 3.78938344954725*^9}, {
  3.789383652939946*^9, 3.789383653231217*^9}, {3.789407647184663*^9, 
  3.789407651178012*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"7bd1d411-33cc-4be8-afa7-052d53bfd121"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{"2", ",", "4", ",", "6", ",", "7"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.813455667267117*^9},
 CellLabel->
  "Out[133]//FullForm=",ExpressionUUID->"237cf4cd-6694-4223-b211-\
5acc36d8394c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.813455667277774*^9},
 CellLabel->
  "Out[134]//FullForm=",ExpressionUUID->"214c65f7-1db9-4779-b427-\
25141c6a7023"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:6807\:5934", "Subsubsection",
 CellChangeTimes->{{3.7893834672279778`*^9, 3.789383467720656*^9}, 
   3.789383514260116*^9, {3.789383599278583*^9, 3.7893835997662463`*^9}, 
   3.789992733817321*^9, {3.7900057286098785`*^9, 
   3.7900057337079573`*^9}},ExpressionUUID->"147cfa2d-1daa-4005-a7d3-\
4061f9da710d"],

Cell["\<\
\:8868\:8fbe\:5f0f\:4e2d\:7684\:9886\:5934\:5143\:7d20\:79f0\:4e4b\:4e3a Head\
\:ff1a

head[elem1,elem2,elem3,...]\
\>", "Text",
 CellChangeTimes->{{3.788110169480719*^9, 3.788110185038162*^9}, {
  3.789383474607191*^9, 3.78938347522254*^9}, {3.790000227082073*^9, 
  3.790000227750143*^9}, {3.7900057674802685`*^9, 3.7900057694821024`*^9}, {
  3.7900059420309696`*^9, 
  3.790005964580055*^9}},ExpressionUUID->"efb9b430-275d-4c59-95df-\
3351be4bc33c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Head", "[", "data", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", "mathExp", "]"}]}], "Input",
 CellChangeTimes->{{3.7893834794013557`*^9, 3.7893834897945476`*^9}, {
  3.789407655660019*^9, 3.789407660235736*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"a5671eea-5b4a-47dd-bb51-9e2f1dd2071b"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{3.813455685127864*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"b28f7896-3291-4e12-9682-0d0f46d7fa3f"],

Cell[BoxData["Plus"], "Output",
 CellChangeTimes->{3.813455685143484*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"7dd5d3c2-3541-4d6a-a4f7-06465a86dba0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:957f\:5ea6", "Subsubsection",
 CellChangeTimes->{{3.789383578884177*^9, 3.789383594522313*^9}, 
   3.7899927366848516`*^9, {3.790005971656002*^9, 
   3.790005974018649*^9}},ExpressionUUID->"f4933d28-27ba-4621-b6e2-\
c334f843d73b"],

Cell["\:53c2\:6570\:7684\:6570\:76ee\:53ef\:4ee5\:7528 Length \:627e\:5230\
\:ff1a", "Text",
 CellChangeTimes->{{3.789383625845456*^9, 3.7893836336425905`*^9}, 
   3.790000197425171*^9, {3.7900059994151187`*^9, 
   3.7900060309870224`*^9}},ExpressionUUID->"59fee27f-4a88-4e84-9988-\
3b11d611cdd3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Length", "[", "data", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "mathExp", "]"}]}], "Input",
 CellChangeTimes->{{3.78938363496904*^9, 3.789383642977618*^9}, {
  3.7894076650070047`*^9, 3.789407668298193*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"87107e05-0643-4297-ba44-aec571fc241e"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.813455701451276*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"0d843e64-5dc2-4929-89b3-efd695855339"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.8134557014671373`*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"8b141521-d3dc-47e5-a9e8-ea385cf8a662"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:90e8\:5206\:5143\:7d20", "Subsubsection",
 CellChangeTimes->{{3.789383505147469*^9, 3.789383511955243*^9}, {
   3.789383587505106*^9, 3.7893835919062796`*^9}, 3.7899927397651873`*^9, {
   3.7900060463682137`*^9, 
   3.7900060475695257`*^9}},ExpressionUUID->"0391ef5d-4436-451b-9c84-\
68f3357af1ac"],

Cell["\:53ef\:4ee5\:4f7f\:7528 Part[] \:63d0\:53d6\:90e8\:5206\:5143\:7d20\
\:ff1a", "Text",
 CellChangeTimes->{{3.789383798048624*^9, 3.789383806748348*^9}, {
  3.790000236265349*^9, 3.790000242460795*^9}, {3.790002006232005*^9, 
  3.790002009254436*^9}, {3.7900060514403095`*^9, 
  3.7900060666895757`*^9}},ExpressionUUID->"5d5eaf07-5adf-4427-add8-\
396900c7f0b6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Part", "[", 
  RowBox[{"data", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Part", "[", 
  RowBox[{"mathExp", ",", "3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7893835172500696`*^9, 3.789383529729709*^9}, {
  3.789407674072757*^9, 3.78940767727015*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"69d245b5-9f5e-4c84-bb7e-3192902f3788"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.813455714970276*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"67740122-153f-4ebe-b88b-e16fcb14bda2"],

Cell[BoxData["c"], "Output",
 CellChangeTimes->{3.813455714981971*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"e527096c-1c4d-4931-823a-7f03334b56d8"]
}, Open  ]],

Cell["\:7b80\:5199\:5f62\:5f0f\:ff1a", "Text",
 CellChangeTimes->{{3.7893853061493435`*^9, 3.7893853090944204`*^9}, {
  3.790006090022657*^9, 
  3.7900060961556063`*^9}},ExpressionUUID->"20e474ac-4347-4097-a8fd-\
53356df55e9c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"data", "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"mathExp", "[", 
  RowBox[{"[", "3", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7893853103560452`*^9, 3.7893853158194227`*^9}, {
  3.789407683210256*^9, 3.7894076864037113`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"6ddcd47e-3f93-410a-80a7-be18b3147ebf"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.8134557375701523`*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"73a669c0-a0e7-41a3-ad96-ed704fa48a14"],

Cell[BoxData["c"], "Output",
 CellChangeTimes->{3.8134557375829077`*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"76087398-41e9-4586-8878-55d2a6e9f6da"]
}, Open  ]],

Cell["\:7b2c 0 \:4e2a\:90e8\:5206\:662f\:6807\:5934\:ff1a", "Text",
 CellChangeTimes->{{3.789385355908176*^9, 3.789385361508196*^9}, {
  3.7900002834922247`*^9, 3.790000297260734*^9}, {3.7900061063467865`*^9, 
  3.790006120541641*^9}},ExpressionUUID->"991a4272-34ee-4e9f-9d36-\
e604a862bc18"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"data", "[", 
  RowBox[{"[", "0", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"mathExp", "[", 
  RowBox[{"[", "0", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7893853635816154`*^9, 3.789385386545192*^9}, {
  3.789407696953513*^9, 3.789407699987356*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"51dee8ea-7a3d-4b7f-a242-e88c29a1c280"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{3.813455746479184*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"0a1575e7-b525-4d6d-bf47-f9c031f097b7"],

Cell[BoxData["Plus"], "Output",
 CellChangeTimes->{3.813455746491971*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"74501c28-53e6-43fa-9257-424e0ac847bb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"2aac5a56-ba5c-49cc-a77e-718c21d2d47c"],

Cell[CellGroupData[{

Cell["\:4f7f\:7528\:8868\:8fbe\:5f0f\:ff1a\:5d4c\:5957\:8868\:8fbe\:5f0f", \
"Section",
 CellChangeTimes->{
  3.7777047916430187`*^9, 3.7784996309822063`*^9, {3.781020874143722*^9, 
   3.7810208795474486`*^9}, 3.781021153902781*^9, {3.78318827803904*^9, 
   3.7831882810309925`*^9}, {3.7881101474955983`*^9, 3.788110147951476*^9}, {
   3.789383328701786*^9, 3.7893833337752237`*^9}, {3.789384967077057*^9, 
   3.789384975408764*^9}, {3.7900003199309387`*^9, 3.790000331886619*^9}, {
   3.790002018837495*^9, 3.7900020194641848`*^9}, {3.790006130385003*^9, 
   3.790006143672393*^9}},ExpressionUUID->"189a48a4-8345-4d11-bc5d-\
4c947165d429"],

Cell[CellGroupData[{

Cell["\:8303\:4f8b\:4e00", "Subsubsection",
 CellChangeTimes->{{3.7893854109867463`*^9, 3.789385412653329*^9}, {
  3.7900061505584497`*^9, 
  3.790006153355855*^9}},ExpressionUUID->"72a41e49-252e-45a6-a074-\
26621aecae5d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr3", " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", 
    RowBox[{"{", " ", 
     RowBox[{"0", ",", " ", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{
  3.7893850385463305`*^9, {3.7905142071235437`*^9, 3.790514208199247*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"5395ca4e-cee5-4abc-adf5-d07e99ee9034"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.813455761855493*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"c4279c38-87a6-4842-bbb6-cbf8bf3a4f04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Head", "[", "expr3", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "expr3", "]"}]}], "Input",
 CellChangeTimes->{{3.789385167871349*^9, 3.78938517641154*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"9f515212-a7f1-4695-a39a-0aa0e870215c"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{3.813455765187274*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"68fcca72-fd1f-454d-a913-0f26269842c7"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.813455765198206*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"2f9f5908-23fb-4c77-829e-75f76b0a334a"]
}, Open  ]],

Cell["\:4f7f\:7528\:7b2c\:4e8c\:4e2a\:53c2\:6570\:4ece\:7b2c\:4e8c\:4e2a\:5143\
\:7d20\:4e2d\:9009\:62e9\:5b50\:5143\:7d20\:ff1a", "Text",
 CellChangeTimes->{{3.58357789631579*^9, 3.583578005614019*^9}, {
   3.5911865454503803`*^9, 3.591186546145357*^9}, {3.59585559867407*^9, 
   3.595855601560218*^9}, 3.6218703966349907`*^9, {3.6222037425041637`*^9, 
   3.6222037465900183`*^9}, {3.734970946517033*^9, 3.73497094720284*^9}, {
   3.743441359582159*^9, 3.743441359750057*^9}, {3.7893852730189643`*^9, 
   3.7893852868928614`*^9}, 3.789385329256502*^9, {3.790000336724082*^9, 
   3.7900003409297047`*^9}, 3.790002991307742*^9, 3.790003228951339*^9, {
   3.790006165850692*^9, 
   3.790006228780657*^9}},ExpressionUUID->"f4f2f3ca-d6f3-45fe-93f3-\
70469e25d87b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr3", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7830969857741995`*^9, 3.7830969877059984`*^9}, 
   3.789385331305018*^9},
 CellLabel->
  "In[148]:=",ExpressionUUID->"eed7525e-69fb-4504-a5ca-094418beaa1f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.813455778146536*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"2155ec54-88a6-4f43-ae63-4f916f4bc0a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr3", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.734181254169242*^9, 3.7341812579048777`*^9}, 
   3.789385333559948*^9},
 CellLabel->
  "In[149]:=",ExpressionUUID->"ad465d9d-3b21-49eb-9afe-12f234cb5863"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8134557852076607`*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"1816d7a1-3d16-4f76-b157-540ad58e1f60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr3", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.783097009070881*^9, 3.783097011147365*^9}, 
   3.7893853369060297`*^9},
 CellLabel->
  "In[150]:=",ExpressionUUID->"f5a4cd82-5cda-45e5-82ea-6db6d612fcae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.813455788363102*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"8ff99e3e-9255-457c-83dd-08a5bbce3844"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr3", "[", 
  RowBox[{"[", 
   RowBox[{"3", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.783097017559201*^9, 3.7830970212343597`*^9}, 
   3.789385339428279*^9},
 CellLabel->
  "In[151]:=",ExpressionUUID->"c7088c38-56c3-4bbb-9efd-57a741d4a61e"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[1, 0, 0],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.813455795588077*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"a4e8855f-b47b-45d4-a66b-4cb60b285074"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr3", "[", 
  RowBox[{"[", 
   RowBox[{"3", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.734788931062037*^9, 3.789385341478757*^9},
 CellLabel->
  "In[152]:=",ExpressionUUID->"e368e810-c119-43ce-a8e7-11379533426d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.813455803494337*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"071f03c1-31a5-432e-abf7-5ef612902863"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:8303\:4f8b\:4e8c", "Subsubsection",
 CellChangeTimes->{{3.789385420551153*^9, 3.7893854221848254`*^9}, {
  3.790006241232529*^9, 
  3.790006242043064*^9}},ExpressionUUID->"472486ae-cd36-41cd-aca9-\
1c73d127ccf2"],

Cell["Part \:4f7f\:7528\:4e8e\:4efb\:4f55\:590d\:5408\:8868\:8fbe\:5f0f\:ff0c\
\:4e0d\:53ea\:662f\:5143\:7d20\:5217\:8868\:ff1a", "Text",
 CellChangeTimes->{{3.734181309269676*^9, 3.734181321714827*^9}, {
   3.73418570853585*^9, 3.734185751393556*^9}, 3.734970941890059*^9, {
   3.7434413641341753`*^9, 3.743441370837988*^9}, 3.790000347439034*^9, {
   3.790002029558313*^9, 3.790002033867917*^9}, {3.7900062619906445`*^9, 
   3.7900062972345977`*^9}},ExpressionUUID->"af311494-2a67-4d71-8778-\
7e8d69b5b2e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr4", "=", " ", 
  RowBox[{"a", " ", "+", 
   RowBox[{"b", "*", 
    RowBox[{"c", "/", "d"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7341813285382147`*^9, 3.7341813544128933`*^9}, {
  3.734181618958346*^9, 3.734181622485895*^9}, {3.7830971099432335`*^9, 
  3.7830971120027294`*^9}, {3.789385452853738*^9, 3.789385453019297*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"84770754-927a-4524-b15d-14bb5cedc7d9"],

Cell[BoxData[
 RowBox[{"a", "+", 
  FractionBox[
   RowBox[{"b", " ", "c"}], "d"]}]], "Output",
 CellChangeTimes->{3.813455818896096*^9, 3.813456692577989*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"1a542330-a225-4c7b-86a2-c2802c64ed8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", "expr4", "]"}]], "Input",
 CellChangeTimes->{{3.7341814304065857`*^9, 3.7341814377604923`*^9}, 
   3.783097116035945*^9, {3.7893854568260746`*^9, 3.789385457233982*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"55ee3a00-24f7-4b1e-88a5-1cc9a039d6c7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{"a", ",", 
     RowBox[{"Times", "[", 
      RowBox[{"b", ",", "c", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"d", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.813455822036316*^9},
 CellLabel->
  "Out[154]//FullForm=",ExpressionUUID->"b3202190-f25d-457e-b394-\
cdbcb0ef2368"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr4", "[", 
  RowBox[{"[", "0", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7830971633693657`*^9, 3.7830971660551796`*^9}, {
  3.789385459901842*^9, 3.7893854611594768`*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"992db41d-bba3-443c-8626-e5e0a6464c92"],

Cell[BoxData["Plus"], "Output",
 CellChangeTimes->{3.813455828815248*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"0d36aba2-f3d6-4a4d-90ab-2ab73e3ac6bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr4", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.78309714850115*^9, 3.7830971507540874`*^9}, {
  3.7893854636608257`*^9, 3.7893854640178747`*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"4ec4b92c-6cd6-4796-a8a7-99a35fc66320"],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.813455832793483*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"0157bbce-0e82-4134-9cfa-4e1c57607682"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr4", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.583577949577055*^9, 3.583577953920965*^9}, {
   3.583578009927319*^9, 3.5835780736621103`*^9}, {3.734098702163467*^9, 
   3.7340987080750237`*^9}, {3.734185772771042*^9, 3.7341857784107227`*^9}, 
   3.783097119610388*^9, {3.789385466129215*^9, 3.789385466391477*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"08330031-a956-46c9-b20d-2a5fbfe0c1f6"],

Cell[BoxData[
 FractionBox[
  RowBox[{"b", " ", "c"}], "d"]], "Output",
 CellChangeTimes->{3.8134558365180283`*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"55a5d5db-1f1d-4e0f-a1de-7effde6f7d50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr4", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.583577949577055*^9, 3.583577953920965*^9}, {
   3.583578009927319*^9, 3.5835780736621103`*^9}, {3.734098702163467*^9, 
   3.7340987080750237`*^9}, {3.734185772771042*^9, 3.734185782577883*^9}, 
   3.7830971872315645`*^9, {3.789385473301983*^9, 3.7893854737079344`*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"8236356f-3f55-437b-a59e-6f0db4e12f4c"],

Cell[BoxData[
 FractionBox["1", "d"]], "Output",
 CellChangeTimes->{3.813455853367819*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"5eea27eb-af83-4250-8290-84dd9c675631"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr4", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.583577949577055*^9, 3.583577953920965*^9}, {
   3.583578009927319*^9, 3.5835780736621103`*^9}, {3.734098702163467*^9, 
   3.7340987080750237`*^9}, {3.734185772771042*^9, 3.734185785026311*^9}, 
   3.783097193182694*^9, {3.78938548650465*^9, 3.7893854868437805`*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"f6d43b9c-8533-48eb-bfa9-941c209561a6"],

Cell[BoxData["c"], "Output",
 CellChangeTimes->{3.813455866022232*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"5b85aaf8-df14-48ef-955f-be4d07406ea7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr4", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.583577949577055*^9, 3.583577953920965*^9}, {
   3.583578009927319*^9, 3.5835780736621103`*^9}, {3.734098702163467*^9, 
   3.7340987080750237`*^9}, {3.734185772771042*^9, 3.734185787593966*^9}, 
   3.7830971970962305`*^9, {3.7893854903563795`*^9, 3.7893854906056767`*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"37c8dba9-b884-4473-97ca-fa58c0c8b04e"],

Cell[BoxData["b"], "Output",
 CellChangeTimes->{3.813455871283412*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"c7009c81-6476-4bb5-a121-7f3160d3065b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr4", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.583577949577055*^9, 3.583577953920965*^9}, {
   3.583578009927319*^9, 3.5835780736621103`*^9}, {3.734098702163467*^9, 
   3.7340987080750237`*^9}, {3.734185772771042*^9, 3.734185789515017*^9}, 
   3.78309719973118*^9, {3.7893854929613714`*^9, 3.7893854931897993`*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"51d4a06f-b927-428e-82ef-aae8ee69b973"],

Cell[BoxData[
 FractionBox["b", "d"]], "Output",
 CellChangeTimes->{3.813456723240233*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"c333efe1-762b-41ee-9696-be9c616b1f9c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7885382527381277`*^9, 3.7885382606669483`*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"f1f144c4-3b25-49f6-b66b-3f886a7c99f7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"1baad451-2b54-4fbd-acd5-02a678b87d0d"],

Cell[CellGroupData[{

Cell["\:8868\:8fbe\:5f0f\:4e2d\:7684\:7ea7\:522b", "Section",
 CellChangeTimes->{{3.71994775976054*^9, 3.7199477622405987`*^9}, {
   3.720191968879251*^9, 3.720191974055264*^9}, {3.720894915481367*^9, 
   3.72089491754312*^9}, {3.720897534619431*^9, 3.72089753512813*^9}, 
   3.7269459274619637`*^9, {3.727461147456134*^9, 3.727461151826571*^9}, {
   3.739095135785624*^9, 3.739095139109222*^9}, {3.739095683304378*^9, 
   3.739095684125534*^9}, {3.779811959976192*^9, 3.77981196320827*^9}, 
   3.7798119951943283`*^9, {3.7885378589004154`*^9, 3.788537859044031*^9}, {
   3.790000353990898*^9, 3.7900003546099787`*^9}, {3.7900063093686686`*^9, 
   3.790006316829379*^9}},ExpressionUUID->"b3de91a9-1e66-4b6d-9b05-\
3b95e724cad3"],

Cell[TextData[{
 StyleBox["\:7ea7\:522b",
  FontSlant->"Italic"],
 "\:4e3a\:5e26\:6709\:5d4c\:5957\:5143\:7d20\:7684 Wolfram \:8bed\:8a00\:8868\
\:8fbe\:5f0f\:63d0\:4f9b\:4e86\:6307\:5b9a\:7279\:5b9a\:90e8\:5206\:7684\:901a\
\:7528\:65b9\:6cd5\:ff1a"
}], "Text",
 CellChangeTimes->{{3.734781528178585*^9, 3.734781554168725*^9}, {
   3.740762687598065*^9, 3.7407627223321333`*^9}, 3.743516340031982*^9, {
   3.743517111111424*^9, 3.7435171201179857`*^9}, {3.779811947208535*^9, 
   3.7798119541486387`*^9}, {3.779812024176487*^9, 3.7798120357837667`*^9}, {
   3.790000359706337*^9, 3.790000360540058*^9}, {3.7900064012947083`*^9, 
   3.7900064426480308`*^9}, {3.7900065016032724`*^9, 3.79000653206383*^9}, 
   3.7905144367210083`*^9},ExpressionUUID->"4602eb04-61e5-4c72-94c5-\
e6c2c766d213"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"3", ",", " ", "4"}], "}"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7809306202058797`*^9, 3.7809306218540087`*^9}, {
  3.783170954583726*^9, 3.783170959186364*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"6da5e086-e755-4022-b0b5-bcac4836bfc3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.813455908034657*^9, 3.813456779708333*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"827769f0-2aed-40f0-a300-05f53997da00"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.783170963338205*^9, 3.783170965751813*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"a729df3f-f7e0-4125-8d1b-64637d5c2cf3"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"List", "[", 
      RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
     RowBox[{"List", "[", 
      RowBox[{
       RowBox[{"List", "[", 
        RowBox[{"1", ",", "2"}], "]"}], ",", 
       RowBox[{"List", "[", 
        RowBox[{"3", ",", "4"}], "]"}]}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.813455910241847*^9},
 CellLabel->
  "Out[164]//FullForm=",ExpressionUUID->"8e975af8-561f-4be1-abcd-\
e47a0019f617"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeForm", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.7391094416268177`*^9, 3.739109446162601*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"da3da044-71d7-4ecd-9bb2-011e26528581"],

Cell[BoxData[
 InterpretationBox[
  GraphicsBox[
   TagBox[
    GraphicsComplexBox[{{1.831299685083074, 2.1975596220996887`}, {
     0.7325198740332296, 1.465039748066459}, {0., 0.7325198740332295}, {
     0.7325198740332296, 0.7325198740332295}, {1.4650397480664592`, 
     0.7325198740332295}, {2.9300794961329184`, 1.465039748066459}, {
     2.1975596220996887`, 0.7325198740332295}, {1.831299685083074, 0.}, {
     2.5638195591163035`, 0.}, {3.662599370166148, 0.7325198740332295}, {
     3.2963394331495333`, 0.}, {4.0288593071827625`, 0.}}, {
      {RGBColor[0.55, 0.45, 0.45], 
       LineBox[{{1, 2}, {1, 6}, {2, 3}, {2, 4}, {2, 5}, {6, 7}, {6, 10}, {7, 
        8}, {7, 9}, {10, 11}, {10, 12}}]}, {
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["List", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 1],
         TagBox[
          RowBox[{"{", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}], 
          HoldForm]],
        Annotation[#, 
         HoldForm[{{$CellContext`a, $CellContext`b, $CellContext`c}, {{1, 
           2}, {3, 4}}}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["List", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 2],
         TagBox[
          RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c"}], "}"}], HoldForm]],
        Annotation[#, 
         HoldForm[{$CellContext`a, $CellContext`b, $CellContext`c}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["a",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 3],
         TagBox["a", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`a], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["b",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 4],
         TagBox["b", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`b], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["c",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 5],
         TagBox["c", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`c], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["List", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 6],
         TagBox[
          RowBox[{"{", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1", ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{"3", ",", "4"}], "}"}]}], "}"}], HoldForm]],
        Annotation[#, 
         HoldForm[{{1, 2}, {3, 4}}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["List", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 7],
         TagBox[
          RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], HoldForm]],
        Annotation[#, 
         HoldForm[{1, 2}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["1",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 8],
         TagBox["1", HoldForm]],
        Annotation[#, 
         HoldForm[1], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["2",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 9],
         TagBox["2", HoldForm]],
        Annotation[#, 
         HoldForm[2], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["List", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 10],
         TagBox[
          RowBox[{"{", 
            RowBox[{"3", ",", "4"}], "}"}], HoldForm]],
        Annotation[#, 
         HoldForm[{3, 4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["3",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 11],
         TagBox["3", HoldForm]],
        Annotation[#, 
         HoldForm[3], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["4",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 12],
         TagBox["4", HoldForm]],
        Annotation[#, 
         HoldForm[4], "Tooltip"]& ]}}],
    Annotation[#, 
     VertexCoordinateRules -> {{1.831299685083074, 2.1975596220996887`}, {
      0.7325198740332296, 1.465039748066459}, {0., 0.7325198740332295}, {
      0.7325198740332296, 0.7325198740332295}, {1.4650397480664592`, 
      0.7325198740332295}, {2.9300794961329184`, 1.465039748066459}, {
      2.1975596220996887`, 0.7325198740332295}, {1.831299685083074, 0.}, {
      2.5638195591163035`, 0.}, {3.662599370166148, 0.7325198740332295}, {
      3.2963394331495333`, 0.}, {4.0288593071827625`, 0.}}]& ],
   AspectRatio->NCache[2 Rational[2, 11]^Rational[1, 2], 0.8528028654224418],
   FormatType:>StandardForm,
   FrameTicks->Automatic,
   PlotRange->All,
   PlotRangePadding->Scaled[0.1]],
  TreeForm[{{$CellContext`a, $CellContext`b, $CellContext`c}, {{1, 2}, {3, 
    4}}}],
  Editable->False]], "Output",
 CellChangeTimes->{3.813455920157835*^9},
 CellLabel->
  "Out[165]//TreeForm=",ExpressionUUID->"bfc93bac-7670-4958-addc-\
84b6c9c87f99"]
}, Open  ]],

Cell["\:8bbf\:95ee\:5355\:4e2a\:7ea7\:522b\:ff1a", "Text",
 CellChangeTimes->{{3.78317113986412*^9, 3.7831711466934285`*^9}, {
  3.7900065399613066`*^9, 
  3.7900065486113563`*^9}},ExpressionUUID->"c34c0ce1-8ea9-418d-a3b2-\
e459f8a463c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Level", "[", 
  RowBox[{"data", ",", 
   RowBox[{"{", "3", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.783171041884779*^9, 3.7831710493985825`*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"e5dd8fff-de70-47fc-a071-ef5da775ac06"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.813455971599071*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"3be1ce70-41d6-4aed-9ebd-7cddea887a09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Level", "[", 
  RowBox[{"data", ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.78317105242843*^9, 3.7831710571148024`*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"22ea62b5-f154-4c3b-b579-12163bcbe0dd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.813455976802223*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"522c16ea-8bfa-4c3b-8932-e0aa8cb09a99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Level", "[", 
  RowBox[{"data", ",", 
   RowBox[{"{", "1", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7831710593009515`*^9, 3.7831710633231373`*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"ef6f1baf-aa06-46ad-b6d0-38d7a5332321"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8134559887450314`*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"5d5450f7-17c2-4e26-bddd-b9da499aa051"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Level", "[", 
  RowBox[{"data", ",", 
   RowBox[{"{", "0", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.783171064503936*^9, 3.7831710689171*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"b73350ca-865d-421e-8d0d-0fb33ef75d3d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.813455995350032*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"27062aaf-5269-4c98-803c-ad63e4121d9a"]
}, Open  ]],

Cell["\:5171\:540c\:8bbf\:95ee\:591a\:4e2a\:7ea7\:522b\:ff1a", "Text",
 CellChangeTimes->{{3.783171157692301*^9, 3.78317116685326*^9}, {
  3.790010747058407*^9, 
  3.7900107573205304`*^9}},ExpressionUUID->"14dd40fd-3f42-4f09-b1c7-\
dcd4d91960e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Level", "[", 
  RowBox[{"data", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7831709966368017`*^9, 3.783171001798561*^9}, 
   3.783171173928866*^9},
 CellLabel->
  "In[176]:=",ExpressionUUID->"697e0fb3-c95a-4847-a1c2-cf0bb367c89e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.813457075852398*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"7f67cbcb-e100-427d-b8df-c39ae15f1b8b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7885382527381277`*^9, 3.7885382606669483`*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"7ad079b2-f8ba-417e-98a6-d9ee1ae0b087"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ccfdacd5-fc4c-440a-be14-8c7c64770803"],

Cell[CellGroupData[{

Cell["\:4f7f\:7528\:7ea7\:522b\:7684\:51fd\:6570", "Section",
 CellChangeTimes->{{3.71994775976054*^9, 3.7199477622405987`*^9}, {
   3.720191968879251*^9, 3.720191974055264*^9}, {3.720894915481367*^9, 
   3.72089491754312*^9}, {3.720897534619431*^9, 3.72089753512813*^9}, 
   3.7269459274619637`*^9, {3.727461147456134*^9, 3.727461151826571*^9}, {
   3.739095135785624*^9, 3.739095139109222*^9}, {3.739095683304378*^9, 
   3.739095684125534*^9}, {3.779811959976192*^9, 3.77981196320827*^9}, 
   3.7798119951943283`*^9, {3.788180784430172*^9, 3.7881807879058423`*^9}, {
   3.788180827109036*^9, 3.788180829029892*^9}, {3.790000368019286*^9, 
   3.790000378964662*^9}, {3.7900107685641136`*^9, 
   3.790010775584073*^9}},ExpressionUUID->"e231254f-74a6-4c71-8560-\
5d0bbbf08ff2"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Map",
 FontWeight->"Plain"]], "Subsection",
 CellChangeTimes->{{3.788180920818545*^9, 3.7881809217301383`*^9}, 
   3.788528595104218*^9},ExpressionUUID->"69d62990-496e-43cd-aea3-\
af0fa40e80be"],

Cell[TextData[{
 "\:8bed\:6cd5\:ff1a",
 Cell[BoxData[
  RowBox[{"Map", "[", 
   RowBox[{"f", ",", "expr", ",", "levelspec"}], "]"}]], "Input",
  ExpressionUUID->"5494c85a-50ae-4b43-b768-90237c28bb88"]
}], "Text",
 CellChangeTimes->{{3.7831711930754957`*^9, 3.783171197804555*^9}, {
   3.788180976676151*^9, 3.7881809895198045`*^9}, {3.788181054283595*^9, 
   3.7881810573145337`*^9}, {3.7881815188390026`*^9, 3.78818151956011*^9}, 
   3.789407738918214*^9, {3.78996596787251*^9, 3.789965975976962*^9}, {
   3.7899927591829767`*^9, 3.789992760436885*^9}, {3.790000418786353*^9, 
   3.79000044072431*^9}, {3.790010784555936*^9, 
   3.7900107868066616`*^9}},ExpressionUUID->"b59b5586-e9f6-4585-bb0e-\
6f77d34181ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Sqrt", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.789407744002615*^9, 3.7894077570068054`*^9}},
 CellLabel->
  "In[456]:=",ExpressionUUID->"88f04322-fb99-49a4-9df5-c952ccf27c00"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SqrtBox["2"], ",", 
   SqrtBox["3"], ",", "2", ",", 
   SqrtBox["5"], ",", 
   SqrtBox["6"]}], "}"}]], "Output",
 CellChangeTimes->{3.813925974016426*^9},
 CellLabel->
  "Out[456]=",ExpressionUUID->"57101553-0b14-4061-9977-5e48b9127dfe"]
}, Open  ]],

Cell[TextData[{
 "\:9ed8\:8ba4\:60c5\:51b5\:4e0b\:ff0c",
 StyleBox[ButtonBox["Map",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Map"],
  FontWeight->"Bold"],
 "[] \:4f5c\:7528\:4e8e\:7ea7\:522b 1\:ff1a"
}], "Text",
 CellChangeTimes->{{3.7831711930754957`*^9, 3.783171197804555*^9}, {
   3.788180976676151*^9, 3.7881809895198045`*^9}, {3.788181054283595*^9, 
   3.7881810573145337`*^9}, {3.7881815188390026`*^9, 3.78818151956011*^9}, 
   3.7894077713553734`*^9, {3.7900004467834463`*^9, 3.790000450812107*^9}, {
   3.7900833252940817`*^9, 
   3.7900833468393164`*^9}},ExpressionUUID->"bf349f2b-9a12-4f1c-8f0a-\
135274549f3c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3", ",", " ", "4"}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TreeForm", "[", "data", "]"}]}], "Input",
 CellChangeTimes->{{3.788180947605898*^9, 3.7881809527212567`*^9}},
 CellLabel->
  "In[457]:=",ExpressionUUID->"9bee1847-4c81-4e77-a3b5-f8533e53e4d1"],

Cell[BoxData[
 InterpretationBox[
  GraphicsBox[
   TagBox[
    GraphicsComplexBox[{{1.831299685083074, 2.1975596220996887`}, {
     0.7325198740332296, 1.465039748066459}, {0., 0.7325198740332295}, {
     0.7325198740332296, 0.7325198740332295}, {1.4650397480664592`, 
     0.7325198740332295}, {2.9300794961329184`, 1.465039748066459}, {
     2.1975596220996887`, 0.7325198740332295}, {1.831299685083074, 0.}, {
     2.5638195591163035`, 0.}, {3.662599370166148, 0.7325198740332295}, {
     3.2963394331495333`, 0.}, {4.0288593071827625`, 0.}}, {
      {RGBColor[0.55, 0.45, 0.45], 
       LineBox[{{1, 2}, {1, 6}, {2, 3}, {2, 4}, {2, 5}, {6, 7}, {6, 10}, {7, 
        8}, {7, 9}, {10, 11}, {10, 12}}]}, {
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["List", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 1],
         TagBox[
          RowBox[{"{", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}], 
          HoldForm]],
        Annotation[#, 
         HoldForm[{{$CellContext`a, $CellContext`b, $CellContext`c}, {{1, 
           2}, {3, 4}}}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["List", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 2],
         TagBox[
          RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c"}], "}"}], HoldForm]],
        Annotation[#, 
         HoldForm[{$CellContext`a, $CellContext`b, $CellContext`c}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["a",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 3],
         TagBox["a", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`a], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["b",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 4],
         TagBox["b", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`b], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["c",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 5],
         TagBox["c", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`c], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["List", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 6],
         TagBox[
          RowBox[{"{", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1", ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{"3", ",", "4"}], "}"}]}], "}"}], HoldForm]],
        Annotation[#, 
         HoldForm[{{1, 2}, {3, 4}}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["List", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 7],
         TagBox[
          RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], HoldForm]],
        Annotation[#, 
         HoldForm[{1, 2}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["1",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 8],
         TagBox["1", HoldForm]],
        Annotation[#, 
         HoldForm[1], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["2",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 9],
         TagBox["2", HoldForm]],
        Annotation[#, 
         HoldForm[2], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["List", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 10],
         TagBox[
          RowBox[{"{", 
            RowBox[{"3", ",", "4"}], "}"}], HoldForm]],
        Annotation[#, 
         HoldForm[{3, 4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["3",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 11],
         TagBox["3", HoldForm]],
        Annotation[#, 
         HoldForm[3], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["4",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 12],
         TagBox["4", HoldForm]],
        Annotation[#, 
         HoldForm[4], "Tooltip"]& ]}}],
    Annotation[#, 
     VertexCoordinateRules -> {{1.831299685083074, 2.1975596220996887`}, {
      0.7325198740332296, 1.465039748066459}, {0., 0.7325198740332295}, {
      0.7325198740332296, 0.7325198740332295}, {1.4650397480664592`, 
      0.7325198740332295}, {2.9300794961329184`, 1.465039748066459}, {
      2.1975596220996887`, 0.7325198740332295}, {1.831299685083074, 0.}, {
      2.5638195591163035`, 0.}, {3.662599370166148, 0.7325198740332295}, {
      3.2963394331495333`, 0.}, {4.0288593071827625`, 0.}}]& ],
   AspectRatio->NCache[2 Rational[2, 11]^Rational[1, 2], 0.8528028654224418],
   FormatType:>StandardForm,
   FrameTicks->Automatic,
   PlotRange->All,
   PlotRangePadding->Scaled[0.1]],
  TreeForm[{{$CellContext`a, $CellContext`b, $CellContext`c}, {{1, 2}, {3, 
    4}}}],
  Editable->False]], "Output",
 CellChangeTimes->{3.813925989626608*^9},
 CellLabel->
  "Out[458]//TreeForm=",ExpressionUUID->"02095805-0fcf-4764-9ea0-\
c84e061a0cda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"f", ",", " ", "data"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.6131408458759527`*^9, 3.613140895148767*^9}, 
   3.779812093310836*^9, {3.783171402577098*^9, 3.7831714119125957`*^9}, 
   3.788180993445301*^9},
 CellLabel->
  "In[459]:=",ExpressionUUID->"730664ba-5885-4be4-afe5-846a76639e6a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.813926006176816*^9},
 CellLabel->
  "Out[459]=",ExpressionUUID->"8fc94e7a-0945-4be9-8cd1-d11043f9e2a5"]
}, Open  ]],

Cell["\:628a Map \:5e94\:7528\:4e8e\:5176\:4ed6\:7ea7\:522b\:ff1a", "Text",
 CellChangeTimes->{{3.7881810031463737`*^9, 3.78818100836544*^9}, {
  3.7900108006137395`*^9, 
  3.790010815280342*^9}},ExpressionUUID->"6f78c478-0f2a-4329-b9e0-\
fb83f52459f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"f", ",", " ", "data", ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"applied", " ", "at", " ", "level", " ", "2"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.7809307434081345`*^9, 3.7809307462955885`*^9}, {
  3.7831714141833844`*^9, 3.783171430908614*^9}},
 CellLabel->
  "In[460]:=",ExpressionUUID->"2097a0ab-1086-4633-8de5-27c434fcacc4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "a", "]"}], ",", 
     RowBox[{"f", "[", "b", "]"}], ",", 
     RowBox[{"f", "[", "c", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.813926023220704*^9},
 CellLabel->
  "Out[460]=",ExpressionUUID->"2ae74108-e643-47b4-a90c-2da8b410144c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"f", ",", " ", "data", ",", " ", 
    RowBox[{"{", "3", "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"applied", " ", "at", " ", "level", " ", "3"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{
  3.613140958895401*^9, 3.77981211594629*^9, {3.783171481106329*^9, 
   3.783171490610372*^9}},
 CellLabel->
  "In[461]:=",ExpressionUUID->"0548e375-ac6f-4d23-aaa5-0e9d429a5def"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", "1", "]"}], ",", 
       RowBox[{"f", "[", "2", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", "3", "]"}], ",", 
       RowBox[{"f", "[", "4", "]"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.813926037763566*^9},
 CellLabel->
  "Out[461]=",ExpressionUUID->"cf80e7dd-2de3-45ef-8690-c4dbafb96273"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"f", ",", " ", "data", ",", " ", 
    RowBox[{"{", "1", "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"applied", " ", "at", " ", "level", " ", "1"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.613140916825141*^9, 3.613140917009295*^9}, {
   3.739109316026566*^9, 3.7391093181751547`*^9}, 3.779812099897225*^9, {
   3.783171437383935*^9, 3.7831714412772937`*^9}},
 CellLabel->
  "In[462]:=",ExpressionUUID->"ed7e4ed1-994e-41a6-8284-20acfd91fe24"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.813926058589237*^9},
 CellLabel->
  "Out[462]=",ExpressionUUID->"da7d1726-8025-4f44-97fc-e79a90efe40d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"f", ",", " ", "data", ",", " ", 
    RowBox[{"{", "0", "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"applied", " ", "at", " ", "level", " ", "0"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.613140916825141*^9, 3.613140917009295*^9}, {
   3.739109316026566*^9, 3.7391093181751547`*^9}, 3.779812099897225*^9, {
   3.783171437383935*^9, 3.7831714412772937`*^9}, {3.7831715683259497`*^9, 
   3.7831715726910067`*^9}},
 CellLabel->
  "In[463]:=",ExpressionUUID->"58bdbb09-13e1-45f1-923b-b1fe8a836056"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.8139260644458303`*^9},
 CellLabel->
  "Out[463]=",ExpressionUUID->"0cf7acdd-f61a-4220-b927-b3edbf79eec0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"f", ",", " ", "data", ",", " ", "2"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "applied", " ", "at", " ", "2", " ", "and", " ", "all", " ", "levels", " ",
     "above", " ", "that"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.613140923412476*^9, 3.613140923528575*^9}, 
   3.779812105910864*^9, {3.783172002724698*^9, 3.7831720434267344`*^9}},
 CellLabel->
  "In[464]:=",ExpressionUUID->"e4a2eee2-87de-49da-9ee3-5cb71e93e837"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "a", "]"}], ",", 
      RowBox[{"f", "[", "b", "]"}], ",", 
      RowBox[{"f", "[", "c", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", 
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}], "]"}]}], "}"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8139260769246264`*^9},
 CellLabel->
  "Out[464]=",ExpressionUUID->"03002eb6-bf2a-491a-83ad-fa42b47ffb10"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7885382527381277`*^9, 3.7885382606669483`*^9}},
 CellLabel->
  "In[465]:=",ExpressionUUID->"dc7d3aeb-dc2d-4e88-9ae4-9202a726c681"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"be17a351-28a5-43f3-bc1b-c16634a6aa50"],

Cell[CellGroupData[{

Cell["\:4f7f\:7528\:7ea7\:522b\:7684\:51fd\:6570\:ff08\:7eed\:ff09", "Section",
 CellChangeTimes->{{3.71994775976054*^9, 3.7199477622405987`*^9}, {
   3.720191968879251*^9, 3.720191974055264*^9}, {3.720894915481367*^9, 
   3.72089491754312*^9}, {3.720897534619431*^9, 3.72089753512813*^9}, 
   3.7269459274619637`*^9, {3.727461147456134*^9, 3.727461151826571*^9}, {
   3.739095135785624*^9, 3.739095139109222*^9}, {3.739095683304378*^9, 
   3.739095684125534*^9}, {3.779811959976192*^9, 3.77981196320827*^9}, 
   3.7798119951943283`*^9, {3.788180784430172*^9, 3.7881807879058423`*^9}, {
   3.788180827109036*^9, 3.788180829029892*^9}, {3.7881825579829044`*^9, 
   3.788182560229865*^9}, {3.790000459181855*^9, 3.7900004685720263`*^9}, {
   3.7900108286447086`*^9, 
   3.790010841885106*^9}},ExpressionUUID->"9b567c61-dc2f-495e-aede-\
f07c865e32b8"],

Cell[TextData[{
 "\:63a5\:53d7 \[OpenCurlyDoubleQuote]",
 StyleBox["levelspec",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote] \:53c2\:6570\:7684\:5176\:4ed6\:51fd\:6570\:ff1a"
}], "Text",
 CellChangeTimes->{{3.788181022585375*^9, 3.788181035595612*^9}, {
  3.790000474243679*^9, 3.790000474852964*^9}, {3.790010849036084*^9, 
  3.7900108615958223`*^9}},ExpressionUUID->"bd01066c-c532-40b9-80a8-\
d2980e03364a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"symbols", ",", "symbols2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"symbols", "=", 
     RowBox[{"EntityValue", "[", 
      RowBox[{
      "\"\<WolframLanguageSymbol\>\"", ",", "\"\<TextStrings\>\"", ",", 
       "\"\<EntityAssociation\>\""}], "]"}]}], ";", "\n", 
    RowBox[{"symbols2", "=", 
     RowBox[{"CommonName", "@", 
      RowBox[{"Keys", "@", 
       RowBox[{"Select", "[", 
        RowBox[{"symbols", ",", 
         RowBox[{"AnyTrue", "[", 
          RowBox[{"StringContainsQ", "[", 
           RowBox[{"\"\<levelspec\>\"", ",", 
            RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}], "]"}]}], 
        "]"}]}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"symbols3", "=", 
     RowBox[{"ToString", "/@", "symbols2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "18", ",", "\"\<Times\>\""}], "]"}], "&"}], "/@", 
        "symbols3"}], ",", "5"}], "]"}], "//", "Grid"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.788180883984048*^9, 3.7881808839870815`*^9}, {
  3.7881811064540663`*^9, 3.7881813130785017`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"ab2e9a3e-4763-435f-bae6-d7d1d11b7acf"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Apply\"\>", "Times",
      StripOnInput->False,
      FontSize->18], 
     StyleBox["\<\"Cases\"\>", "Times",
      StripOnInput->False,
      FontSize->18], 
     StyleBox["\<\"Catenate\"\>", "Times",
      StripOnInput->False,
      FontSize->18], 
     StyleBox["\<\"Count\"\>", "Times",
      StripOnInput->False,
      FontSize->18], 
     StyleBox["\<\"DeleteCases\"\>", "Times",
      StripOnInput->False,
      FontSize->18]},
    {
     StyleBox["\<\"FirstCase\"\>", "Times",
      StripOnInput->False,
      FontSize->18], 
     StyleBox["\<\"FirstPosition\"\>", "Times",
      StripOnInput->False,
      FontSize->18], 
     StyleBox["\<\"FreeQ\"\>", "Times",
      StripOnInput->False,
      FontSize->18], 
     StyleBox["\<\"Level\"\>", "Times",
      StripOnInput->False,
      FontSize->18], 
     StyleBox["\<\"Map\"\>", "Times",
      StripOnInput->False,
      FontSize->18]},
    {
     StyleBox["\<\"MapIndexed\"\>", "Times",
      StripOnInput->False,
      FontSize->18], 
     StyleBox["\<\"MemberQ\"\>", "Times",
      StripOnInput->False,
      FontSize->18], 
     StyleBox["\<\"ParallelMap\"\>", "Times",
      StripOnInput->False,
      FontSize->18], 
     StyleBox["\<\"Position\"\>", "Times",
      StripOnInput->False,
      FontSize->18], 
     StyleBox["\<\"Replace\"\>", "Times",
      StripOnInput->False,
      FontSize->18]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.788180891291505*^9, {3.7881811375140004`*^9, 3.7881812298560467`*^9}, {
   3.7881812638700747`*^9, 3.788181313841423*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"87ba530e-22f1-4e14-ab21-9d8c212463d5"]
}, {2}]],

Cell[CellGroupData[{

Cell["Cases", "Subsection",
 CellChangeTimes->{{3.7885286067746096`*^9, 
  3.7885286083134947`*^9}},ExpressionUUID->"a75d2f95-d3c8-442c-b01f-\
532e8f1c2f50"],

Cell[TextData[{
 "\:9ed8\:8ba4\:60c5\:51b5\:4e0b\:ff0c",
 StyleBox[ButtonBox["Cases",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Cases"],
  FontWeight->"Bold"],
 "[] \:4f5c\:7528\:4e8e\:7ea7\:522b 1\:ff1a"
}], "Text",
 CellChangeTimes->{{3.7881814283809257`*^9, 3.788181435846012*^9}, {
  3.7900004795147657`*^9, 3.790000482317168*^9}, {3.79001087382082*^9, 
  3.7900108927679715`*^9}},ExpressionUUID->"0af68013-8f39-4eb9-a1a9-\
571b5c97ca74"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"f", "[", "5.5", "]"}], ",", "20", ",", "y", ",", 
     RowBox[{"f", "[", "8", "]"}], ",", "9", ",", 
     RowBox[{"f", "[", "10", "]"}]}], "}"}], ",", "_Integer"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.788181346651675*^9, 3.7881813478484707`*^9}, {
  3.788181387017553*^9, 3.788181416633396*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"349a9168-af09-4ae4-b717-c1d26b6248c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "20", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.81345747378904*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"ce3213cc-702f-49de-8c84-09080339382e"]
}, Open  ]],

Cell["\:628a Cases[] \:5e94\:7528\:4e8e\:7ea7\:522b 2\:ff1a", "Text",
 CellChangeTimes->{{3.7881814418419275`*^9, 3.7881814496570663`*^9}, {
  3.7900109007943745`*^9, 
  3.7900109173259077`*^9}},ExpressionUUID->"51622233-a002-4284-9ae6-\
f45ae8210cb4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", 
     RowBox[{"f", "[", "a", "]"}], ",", "2", ",", "3", ",", "y", ",", 
     RowBox[{"f", "[", "8", "]"}], ",", "9", ",", 
     RowBox[{"f", "[", "10", "]"}]}], "}"}], ",", "_Integer", ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7881813935680714`*^9, 3.7881813992907295`*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"4abb6ce3-135e-479e-b2f9-663cb54c667c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.813457486750722*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"1019afef-2701-441d-8eb1-5ca5b5df4ad1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"f", "[", "5.5", "]"}], ",", "20", ",", "y", ",", 
    RowBox[{"f", "[", "8", "]"}], ",", "9", ",", 
    RowBox[{"f", "[", "10", "]"}]}], "}"}], "//", "TreeForm"}]], "Input",
 CellChangeTimes->{{3.7881817188630505`*^9, 3.788181720819817*^9}, 
   3.7905959344090652`*^9},
 CellLabel->
  "In[188]:=",ExpressionUUID->"212ebf52-211d-4d40-b58b-05829298b7a0"],

Cell[BoxData[
 InterpretationBox[
  GraphicsBox[
   TagBox[
    GraphicsComplexBox[{{1.5389675281277313`, 1.0259783520851542`}, {0., 
     0.5129891760425771}, {0.5129891760425771, 0.5129891760425771}, {
     0.5129891760425771, 0.}, {1.0259783520851542`, 0.5129891760425771}, {
     1.5389675281277313`, 0.5129891760425771}, {2.0519567041703084`, 
     0.5129891760425771}, {2.0519567041703084`, 0.}, {2.5649458802128855`, 
     0.5129891760425771}, {3.0779350562554626`, 0.5129891760425771}, {
     3.0779350562554626`, 0.}}, {
      {RGBColor[0.55, 0.45, 0.45], 
       LineBox[{{1, 2}, {1, 3}, {1, 5}, {1, 6}, {1, 7}, {1, 9}, {1, 10}, {3, 
        4}, {7, 8}, {10, 11}}]}, {
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["List", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 1],
         TagBox[
          RowBox[{"{", 
            RowBox[{"1", ",", 
              RowBox[{"f", "[", "5.5`", "]"}], ",", "20", ",", "y", ",", 
              RowBox[{"f", "[", "8", "]"}], ",", "9", ",", 
              RowBox[{"f", "[", "10", "]"}]}], "}"}], HoldForm]],
        Annotation[#, 
         HoldForm[{1, 
           $CellContext`f[5.5], 20, $CellContext`y, 
           $CellContext`f[8], 9, 
           $CellContext`f[10]}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["1",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 2],
         TagBox["1", HoldForm]],
        Annotation[#, 
         HoldForm[1], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["f", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 3],
         TagBox[
          RowBox[{"f", "[", "5.5`", "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          $CellContext`f[5.5]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["5.5`",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 4],
         TagBox["5.5`", HoldForm]],
        Annotation[#, 
         HoldForm[5.5], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["20",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 5],
         TagBox["20", HoldForm]],
        Annotation[#, 
         HoldForm[20], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["y",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 6],
         TagBox["y", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`y], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["f", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 7],
         TagBox[
          RowBox[{"f", "[", "8", "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          $CellContext`f[8]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["8",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 8],
         TagBox["8", HoldForm]],
        Annotation[#, 
         HoldForm[8], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["9",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 9],
         TagBox["9", HoldForm]],
        Annotation[#, 
         HoldForm[9], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["f", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 10],
         TagBox[
          RowBox[{"f", "[", "10", "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          $CellContext`f[10]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["10",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 11],
         TagBox["10", HoldForm]],
        Annotation[#, 
         HoldForm[10], "Tooltip"]& ]}}],
    Annotation[#, 
     VertexCoordinateRules -> {{1.5389675281277313`, 1.0259783520851542`}, {
      0., 0.5129891760425771}, {0.5129891760425771, 0.5129891760425771}, {
      0.5129891760425771, 0.}, {1.0259783520851542`, 0.5129891760425771}, {
      1.5389675281277313`, 0.5129891760425771}, {2.0519567041703084`, 
      0.5129891760425771}, {2.0519567041703084`, 0.}, {2.5649458802128855`, 
      0.5129891760425771}, {3.0779350562554626`, 0.5129891760425771}, {
      3.0779350562554626`, 0.}}]& ],
   AspectRatio->NCache[Rational[1, 2] 3^Rational[1, 2], 0.8660254037844386],
   FormatType:>StandardForm,
   FrameTicks->Automatic,
   PlotRange->All,
   PlotRangePadding->Scaled[0.1]],
  TreeForm[{1, 
    $CellContext`f[5.5], 20, $CellContext`y, 
    $CellContext`f[8], 9, 
    $CellContext`f[10]}],
  Editable->False]], "Output",
 CellChangeTimes->{3.813457492919311*^9},
 CellLabel->
  "Out[188]//TreeForm=",ExpressionUUID->"5584cd82-c588-40a2-90cc-\
7fd6e177359e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Replace", "Subsection",
 CellChangeTimes->{{3.788528617733326*^9, 
  3.7885286186767907`*^9}},ExpressionUUID->"25ea2493-4f50-41f9-9d83-\
8bfacb347f94"],

Cell[TextData[{
 StyleBox[ButtonBox["ReplaceAll",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ReplaceAll"],
  FontWeight->"Bold"],
 "[] \:66ff\:4ee3\:6240\:6709\:5143\:7d20\:ff1a"
}], "Text",
 CellChangeTimes->{{3.7881825932924824`*^9, 3.788182605321275*^9}, 
   3.790000489263342*^9, {3.790010929523939*^9, 
   3.7900109415140586`*^9}},ExpressionUUID->"297164cc-3b2e-4759-ab11-\
2e4343dff678"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplaceAll", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6", ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "8"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"x_Integer", "\[RuleDelayed]", 
    RowBox[{"x", "^", "2"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.788182613263994*^9, {3.788182715148508*^9, 3.7881827155125475`*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"7d985882-465f-455c-9299-842ae27092ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "16"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "36", ",", 
     RowBox[{"{", 
      RowBox[{"49", ",", "64"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.813457523792685*^9},
 CellLabel->
  "Out[189]=",ExpressionUUID->"9d5c4057-5379-49ff-9413-6f21f70fd1b2"]
}, Open  ]],

Cell[TextData[{
 StyleBox[ButtonBox["Replace",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Replace"],
  FontWeight->"Bold"],
 " \:9700\:8981\:5728\:7279\:5b9a\:7ea7\:522b\:66ff\:4ee3\:5143\:7d20. \:9ed8\
\:8ba4\:60c5\:51b5\:4e0b\:ff0cReplace \:4f5c\:7528\:4e8e\:7ea7\:522b 1\:ff1a"
}], "Text",
 CellChangeTimes->{{3.788182618378313*^9, 3.788182637702634*^9}, {
  3.7900004974280663`*^9, 3.7900005105085497`*^9}, {3.7900109672942963`*^9, 
  3.790011013022112*^9}},ExpressionUUID->"52d23c1a-3c6e-4e4e-952f-\
c4c4ac7111be"],

Cell["\:628a Replace \:4f5c\:7528\:4e8e\:7ea7\:522b 2\:ff1a", "Text",
 CellChangeTimes->{{3.7881827375007296`*^9, 3.7881827494397693`*^9}, {
  3.7900110205008316`*^9, 
  3.7900110320602098`*^9}},ExpressionUUID->"c9c34d77-d09f-4028-b786-\
61d2e08816b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Replace", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6", ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "8"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"x_Integer", "\[RuleDelayed]", 
    RowBox[{"x", "^", "2"}]}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.788182644253079*^9, 3.7881826619248486`*^9}, {
  3.788182720831312*^9, 3.788182727817591*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"dc9cc48c-08d4-445a-9499-566620399b64"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "36", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.813457540784431*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"1322a0e5-a0d1-45d1-ab07-2aeef78d0631"]
}, Open  ]],

Cell["\:628a Replace[] \:4f5c\:7528\:4e8e\:7ea7\:522b 3\:ff1a", "Text",
 CellChangeTimes->{{3.788181929872719*^9, 3.7881819366685495`*^9}, {
  3.790011038020797*^9, 
  3.7900110529192667`*^9}},ExpressionUUID->"b0efa654-eac8-47d5-872b-\
e24e5b05b251"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Replace", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6", ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "8"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"x_Integer", "\[RuleDelayed]", 
    RowBox[{"x", "^", "2"}]}], ",", 
   RowBox[{"{", "3", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7881816282314396`*^9, 3.7881816296137905`*^9}, {
  3.78818167635773*^9, 3.788181711424944*^9}, {3.7881818696677337`*^9, 
  3.7881819050222163`*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"c2f9559a-0b74-49f6-af9c-c1baf96d818e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "16"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", 
     RowBox[{"{", 
      RowBox[{"49", ",", "64"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.813457550353018*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"17a2e33a-4989-4f42-ae96-ab125f8d6a9d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7885382527381277`*^9, 3.7885382606669483`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"88c40433-05e2-4700-b211-f1455480bf85"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"8ac72d45-e668-403d-b24b-a4f59ed09b04"],

Cell[CellGroupData[{

Cell["Depth \:548c LeafCount", "Section",
 CellChangeTimes->{{3.71994775976054*^9, 3.7199477622405987`*^9}, {
   3.720191968879251*^9, 3.720191974055264*^9}, {3.720894915481367*^9, 
   3.72089491754312*^9}, {3.720897534619431*^9, 3.72089753512813*^9}, 
   3.7269459274619637`*^9, {3.727461147456134*^9, 3.727461151826571*^9}, {
   3.739095135785624*^9, 3.739095139109222*^9}, {3.739095683304378*^9, 
   3.739095684125534*^9}, {3.779811959976192*^9, 3.77981196320827*^9}, 
   3.7798119951943283`*^9, {3.788180784430172*^9, 3.7881807879058423`*^9}, {
   3.788180827109036*^9, 3.788180829029892*^9}, {3.7881820295402184`*^9, 
   3.7881820341059523`*^9}, 3.7893855288005023`*^9, 
   3.7900110622759094`*^9},ExpressionUUID->"a9563194-a5fd-4792-9e1d-\
3e6b73e82e38"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["\:8303\:4f8b\:4e00",
 FontWeight->"Plain"]], "Subsubsection",
 CellChangeTimes->{{3.78818300927092*^9, 3.7881830164875965`*^9}, 
   3.788528627845276*^9, {3.790011068829155*^9, 
   3.7900110693258715`*^9}},ExpressionUUID->"d91d84de-28ce-474f-a0e4-\
04b4d2818164"],

Cell[BoxData[
 RowBox[{"expr", "=", 
  RowBox[{"f1", "[", 
   RowBox[{
    RowBox[{"f2", "[", 
     RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", " ", 
    RowBox[{"f3", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"3", ",", " ", "4"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7881820566506605`*^9, 3.7881820920759144`*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"bcba7e7e-940f-4144-9e63-127f5bfa407e"],

Cell[BoxData[
 RowBox[{"expr", "//", "TreeForm"}]], "Input",
 CellChangeTimes->{{3.78818210719551*^9, 3.788182112963088*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"7ed84d1d-9c7e-4601-82f2-bebd7bf5a288"],

Cell[TextData[{
 StyleBox[ButtonBox["Depth",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Depth"],
  FontWeight->"Bold"],
 " \:7ed9\:51fa\:7ea7\:522b\:7684\:603b\:6570\:ff1a"
}], "Text",
 CellChangeTimes->{
  3.7881828422605677`*^9, 3.790000801296617*^9, {3.7900113497083454`*^9, 
   3.7900113609798903`*^9}},ExpressionUUID->"dc1c885f-8f0f-4916-a95c-\
dc1bc4516347"],

Cell[BoxData[
 RowBox[{"Depth", "[", "expr", "]"}]], "Input",
 CellChangeTimes->{{3.7881828451737766`*^9, 3.7881828484848733`*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"1b89036a-c83e-4af2-a14b-d95c80c52453"],

Cell[TextData[{
 StyleBox[ButtonBox["LeafCount",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LeafCount"],
  FontWeight->"Bold"],
 " \:7ed9\:51fa\:5355\:4e2a\:539f\:5b50\:7ed3\:6784\:7684\:603b\:6570\:ff1a"
}], "Text",
 CellChangeTimes->{{3.788182860523677*^9, 3.7881828737284117`*^9}, 
   3.79000080438727*^9, {3.790003315023561*^9, 3.790003315406068*^9}, {
   3.790011368503584*^9, 3.790011386380347*^9}, {3.7905154326158113`*^9, 
   3.7905154464721603`*^9}},ExpressionUUID->"f6e796e9-c9e9-4a8d-aa80-\
9642aade3dc7"],

Cell[BoxData[
 RowBox[{"LeafCount", "[", "expr", "]"}]], "Input",
 CellChangeTimes->{{3.7881828750768037`*^9, 3.7881828796036935`*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"0227088c-f6ca-417f-93cc-5e519d40bf6f"],

Cell[TextData[StyleBox["\:8303\:4f8b\:4e8c", "Subsubsection",
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.788182897621501*^9, 3.7881829003990355`*^9}, 
   3.788528638403228*^9, {3.7900113932104387`*^9, 
   3.790011394320799*^9}},ExpressionUUID->"5206c5f9-d147-4f0d-8f89-\
1ba084fa7915"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expr2", "=", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7881829301086235`*^9, 3.7881829399423227`*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"e1f94282-6ed3-4d56-a912-6e149b2251d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr2", "//", "TreeForm"}]], "Input",
 CellChangeTimes->{{3.788182940927681*^9, 3.788182944817237*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"ba547a09-c726-40bb-a73f-cceaefc80912"],

Cell[BoxData[
 InterpretationBox[
  GraphicsBox[
   TagBox[
    GraphicsComplexBox[{{0.8164965809277261, 1.6329931618554523`}, {
     0.8164965809277261, 0.8164965809277261}, {0., 0.}, {0.8164965809277261, 
     0.}, {1.6329931618554523`, 0.}}, {
      {RGBColor[0.55, 0.45, 0.45], 
       LineBox[{{1, 2}, {2, 3}, {2, 4}, {2, 5}}]}, {
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["f", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 1],
         TagBox[
          RowBox[{"f", "[", 
            RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          $CellContext`f[{1, 2, 3}]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["List", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 2],
         TagBox[
          RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "3"}], "}"}], HoldForm]],
        Annotation[#, 
         HoldForm[{1, 2, 3}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["1",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 3],
         TagBox["1", HoldForm]],
        Annotation[#, 
         HoldForm[1], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["2",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 4],
         TagBox["2", HoldForm]],
        Annotation[#, 
         HoldForm[2], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["3",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 5],
         TagBox["3", HoldForm]],
        Annotation[#, 
         HoldForm[3], "Tooltip"]& ]}}],
    Annotation[#, 
     VertexCoordinateRules -> {{0.8164965809277261, 1.6329931618554523`}, {
      0.8164965809277261, 0.8164965809277261}, {0., 0.}, {0.8164965809277261, 
      0.}, {1.6329931618554523`, 0.}}]& ],
   AspectRatio->NCache[Rational[3, 2]^Rational[1, 2], 1.224744871391589],
   FormatType:>StandardForm,
   FrameTicks->Automatic,
   PlotRange->All,
   PlotRangePadding->Scaled[0.1]],
  TreeForm[
   $CellContext`f[{1, 2, 3}]],
  Editable->False]], "Output",
 CellChangeTimes->{3.813457700956566*^9},
 CellLabel->
  "Out[197]//TreeForm=",ExpressionUUID->"15cbf50d-67e2-4353-8730-\
bbcb2c06676d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Depth", "[", "expr2", "]"}]], "Input",
 CellChangeTimes->{{3.788182905841522*^9, 3.78818291268318*^9}, {
  3.7881829600256042`*^9, 3.7881829611107144`*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"c0500ed0-e173-4f25-9487-a1c9db87741a"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.8134577055593767`*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"351fbc2f-1b03-47c0-a1d9-5149fbe9b978"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LeafCount", "[", "expr2", "]"}]], "Input",
 CellChangeTimes->{{3.788182914722762*^9, 3.7881829212532654`*^9}, {
  3.788182966936119*^9, 3.7881829678696203`*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"08b171e7-8518-4a99-a4c8-c462523b4d17"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.813457708648027*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"3e04679a-e3f6-46f9-9ee8-669ec8011232"]
}, Open  ]],

Cell[TextData[StyleBox["\:8303\:4f8b\:4e09", "Subsubsection",
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.7881830283139353`*^9, 3.788183030119156*^9}, {
  3.7900114035505137`*^9, 
  3.7900114049277253`*^9}},ExpressionUUID->"f734eb11-8017-48ce-8df6-\
8c334141dd5d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "//", 
  "TreeForm"}]], "Input",
 CellChangeTimes->{{3.788183053109618*^9, 3.7881830570720186`*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"a83e55e7-24da-4097-9591-e383d16104e0"],

Cell[BoxData[
 InterpretationBox[
  GraphicsBox[
   TagBox[
    GraphicsComplexBox[{{1., 0.6666666666666666}, {0., 0.}, {
     0.6666666666666666, 0.}, {1.3333333333333333`, 0.}, {2., 0.}}, {
      {RGBColor[0.55, 0.45, 0.45], 
       LineBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}}]}, {
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["List", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 1],
         TagBox[
          RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], HoldForm]],
        Annotation[#, 
         HoldForm[{1, 2, 3, 4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["1",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 2],
         TagBox["1", HoldForm]],
        Annotation[#, 
         HoldForm[1], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["2",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 3],
         TagBox["2", HoldForm]],
        Annotation[#, 
         HoldForm[2], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["3",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 4],
         TagBox["3", HoldForm]],
        Annotation[#, 
         HoldForm[3], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["4",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 5],
         TagBox["4", HoldForm]],
        Annotation[#, 
         HoldForm[4], "Tooltip"]& ]}}],
    Annotation[#, 
     VertexCoordinateRules -> {{1., 0.6666666666666666}, {0., 0.}, {
      0.6666666666666666, 0.}, {1.3333333333333333`, 0.}, {2., 0.}}]& ],
   AspectRatio->1,
   FormatType:>StandardForm,
   FrameTicks->Automatic,
   PlotRange->All,
   PlotRangePadding->Scaled[0.1]],
  TreeForm[{1, 2, 3, 4}],
  Editable->False]], "Output",
 CellChangeTimes->{3.8134577134611588`*^9},
 CellLabel->
  "Out[200]//TreeForm=",ExpressionUUID->"2a5dc381-1702-489e-83cf-\
2bb300edf92b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Depth", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.788183039729436*^9, 3.788183044088772*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"4966bc5b-3505-4f6c-8242-6e149b1aa60b"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.813457716163423*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"eb036dd6-2f45-475d-a7a2-903e462de29d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LeafCount", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7881830472004223`*^9, 3.7881830517801733`*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"0546eb73-43c9-4791-a3ee-52d57ea7a176"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.813457718191481*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"62492d2d-ce78-4e5c-a838-081fd362c2bd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7885382527381277`*^9, 3.7885382606669483`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"8f157759-26fe-46f4-9010-7403b10e10b4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"855b8b1b-7b2c-4c48-9abe-67511c1ddc9f"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.779798991137438*^9, 
  3.779798992956984*^9}},ExpressionUUID->"6d627e3a-7769-4ce0-8d91-\
1bde165f812e"],

Cell["\<\
\:8d4b\:503c
\
\>", "Title",
 CellChangeTimes->{{3.779798973122558*^9, 3.7797989759853153`*^9}, 
   3.781015233574415*^9, {3.7811266106631126`*^9, 3.781126611906399*^9}, {
   3.788610575705429*^9, 3.7886105776150384`*^9}, {3.78938585836486*^9, 
   3.789385863493142*^9}, {3.789992817737301*^9, 3.7899928206105623`*^9}, {
   3.790011417731394*^9, 
   3.79001142013002*^9}},ExpressionUUID->"a402aaa6-98f8-4625-a010-\
1d2140aff23d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"9bce4c70-54b3-4b8b-914e-68969a89392e"],

Cell[CellGroupData[{

Cell["\:8bbe\:7f6e\:503c", "Section",
 CellChangeTimes->{{3.7781948262227736`*^9, 3.778194831170929*^9}, {
   3.77981390462642*^9, 3.779813905347307*^9}, {3.7885288105352554`*^9, 
   3.7885288137413025`*^9}, 3.7899927920454473`*^9, 3.789992828618573*^9, {
   3.790000874499782*^9, 3.790000875120644*^9}, {3.7900114265463586`*^9, 
   3.7900114301822643`*^9}},ExpressionUUID->"19f98895-a617-42af-8e81-\
c1ac932fe73c"],

Cell[CellGroupData[{

Cell["Set", "Subsubsection",
 CellChangeTimes->{
  3.779813852301355*^9, {3.7831878400556087`*^9, 3.783187843086939*^9}, 
   3.7885302308028946`*^9},ExpressionUUID->"2dae6eaf-af50-4d4a-8638-\
68b08e18afd7"],

Cell[TextData[{
 "\:8d4b\:503c\:7684\:6700\:7b80\:5355\:683c\:5f0f\:662f\:4f7f\:7528 ",
 StyleBox[ButtonBox["Set",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Set"],
  FontWeight->"Bold"],
 " (=) \:8d4b\:503c\:ff1a"
}], "Text",
 CellChangeTimes->{
  3.7781954893067694`*^9, {3.7781955432474766`*^9, 3.778195618914873*^9}, {
   3.7900008785181637`*^9, 3.79000087918393*^9}, {3.7900114503877144`*^9, 
   3.7900114774591937`*^9}},ExpressionUUID->"c5f9837f-c3ce-49c5-b806-\
30fa0f5ef47f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", "5"}]], "Input",
 CellChangeTimes->{{3.779815668530555*^9, 3.7798156694566593`*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"214feae8-fd81-453a-90ee-4464ce768cc9"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.813607177857574*^9},
 CellLabel->
  "Out[214]=",ExpressionUUID->"6c66822c-3edf-48e9-8062-e603b3d03108"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{{3.8136068332380238`*^9, 3.81360683439137*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"d31622ca-ee92-48de-91a3-4d4680e9598b"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.813607181686981*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"d42453e4-0591-4580-a4f5-87571f5e33c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "+", "10"}]], "Input",
 CellChangeTimes->{{3.783187870953391*^9, 3.7831878729432693`*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"ca0bdca8-7301-414a-8ccb-8682b1234263"],

Cell[BoxData["15"], "Output",
 CellChangeTimes->{3.8136071834094067`*^9},
 CellLabel->
  "Out[216]=",ExpressionUUID->"32d5e24a-3d35-433d-8694-3bf171e3e7ca"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Set", "[", 
   RowBox[{"x", ",", "5"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"functional", " ", "form", " ", "of", " ", "x"}], " ", "=", " ", 
    "5"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7831878780871577`*^9, 
  3.783187885511136*^9}},ExpressionUUID->"ff4a2d76-4284-4eb3-abc7-\
d1a45fdc3cf0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", 
  RowBox[{"RandomInteger", "[", "10", "]"}]}]], "Input",
 CellLabel->
  "In[217]:=",ExpressionUUID->"25fa11e2-fe1c-41ee-a9bd-bcbc22775dac"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.813607202462283*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"b85b92b7-5562-41f3-a5e7-894c35b58199"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "x", ",", "x", ",", "x"}], "}"}]], "Input",
 CellLabel->
  "In[218]:=",ExpressionUUID->"bbbf6b28-5322-470b-9c29-97a55090532a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", "8", ",", "8", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{3.813607205529707*^9},
 CellLabel->
  "Out[218]=",ExpressionUUID->"0e8bf41a-b8ea-4e80-944d-cb7ee1c063f1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SetDelayed", "Subsubsection",
 CellChangeTimes->{{3.7885302440076995`*^9, 
  3.788530249151837*^9}},ExpressionUUID->"34b05369-9224-4766-8386-\
165ded8c66b7"],

Cell[TextData[{
 StyleBox[ButtonBox["SetDelayed",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/SetDelayed"],
  FontWeight->"Bold"],
 " \:7528\:4e8e\:5ef6\:8fdf\:8ba1\:7b97\:ff1a"
}], "Text",
 CellChangeTimes->{{3.783187956964528*^9, 3.7831879645485196`*^9}, {
  3.7900008840310583`*^9, 3.79000088602153*^9}, {3.7900114867728605`*^9, 
  3.7900114989348965`*^9}},ExpressionUUID->"8c0cb252-57cd-4814-96e1-\
54a47c446bf1"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{"x", ":=", 
  RowBox[{"RandomInteger", "[", "10", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7831879788140917`*^9, 3.7831879893816166`*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"189a29d3-5e75-4b0b-b1ec-aebff6c18f94"],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{3.783187992861473*^9},
 CellLabel->
  "In[223]:=",ExpressionUUID->"833a9cda-57b7-483d-9a94-baa4ec4abd2f"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.81360725433106*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"ff88bb3d-0a2b-4680-aad8-98c378af8331"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{3.813607256628647*^9},
 CellLabel->
  "In[224]:=",ExpressionUUID->"ce855136-5931-40fe-afbc-6879753b2942"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.813607256890687*^9},
 CellLabel->
  "Out[224]=",ExpressionUUID->"f21810f6-4b66-49e1-86bc-e505d4a4a3d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{3.8136072582443132`*^9},
 CellLabel->
  "In[225]:=",ExpressionUUID->"9f2feb21-674e-42a9-ad61-c2df6f24e899"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.813607258534018*^9},
 CellLabel->
  "Out[225]=",ExpressionUUID->"09feff20-930c-4b94-8f97-91f1852e4e3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{3.813607260112265*^9},
 CellLabel->
  "In[226]:=",ExpressionUUID->"77f2d223-5a46-40b1-bc79-994177747821"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.813607260824066*^9},
 CellLabel->
  "Out[226]=",ExpressionUUID->"9456bbe8-88b8-4fed-abe3-e3350bdc2e77"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{3.813607262490479*^9},
 CellLabel->
  "In[227]:=",ExpressionUUID->"e198be05-6e1b-48e5-b388-87f52d8e57cb"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.8136072630864477`*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"bc6c5265-7281-4865-8f3d-3bacaf663687"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{3.813607268707149*^9},
 CellLabel->
  "In[228]:=",ExpressionUUID->"cb4c24ea-bce8-4963-b5c7-f06f8e3497c0"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.813607268959873*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"8edd358d-2b3d-4260-9ea2-bedbe2c03f54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "x", ",", "x", ",", "x"}], "}"}]], "Input",
 CellChangeTimes->{{3.7831879973127465`*^9, 3.783187999685198*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"872a3cdd-6787-43b6-b9e6-d35e5c095aef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "0", ",", "9", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.813607276342483*^9},
 CellLabel->
  "Out[229]=",ExpressionUUID->"4a2699af-82eb-4b93-ac32-0368ad39ae51"]
}, Open  ]],

Cell[TextData[{
 "\:4f7f\:7528 ",
 StyleBox[ButtonBox["Information",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Information"],
  FontWeight->"Bold"],
 " (?) \:67e5\:627e\:7b26\:53f7\:7684\:5b9a\:4e49\:ff1a"
}], "Text",
 CellChangeTimes->{{3.7900115136814537`*^9, 
  3.7900115326895676`*^9}},ExpressionUUID->"cce20700-9c29-4445-abb0-\
10c2f97fa2bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "x"}]], "Input",
 CellLabel->
  "In[230]:=",ExpressionUUID->"e7b799b5-26c8-4dde-9fba-4a9214fe4655"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`x\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"OwnValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "OwnValues", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{"x", ":=", 
                    RowBox[{"RandomInteger", "[", "10", "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`x\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{13., {1., 12.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{13., {1., 12.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`x\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> "Global`x", "Documentation" -> None, 
    "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, $CellContext`x, {$CellContext`x :> RandomInteger[10]}], 
    "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Global`x"], 
   False]]], "Output",
 CellChangeTimes->{3.8136073005387917`*^9},
 CellLabel->
  "Out[230]=",ExpressionUUID->"f0294aeb-c7c5-477d-a3bc-1e31164bd669"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:4fdd\:62a4\:7b26\:53f7", "Subsubsection",
 CellChangeTimes->{{3.779859348539589*^9, 3.77985935312818*^9}, {
  3.7900115396375895`*^9, 
  3.7900115443569036`*^9}},ExpressionUUID->"93590c55-7e80-45de-8a4c-\
0b5a6a91c756"],

Cell["\:7cfb\:7edf\:5b9a\:4e49\:7684\:7b26\:53f7\:4e0d\:80fd\:88ab\:8d4b\:503c\
\:ff0c\:56e0\:4e3a\:5b83\:4eec\:662f\:88ab\:4fdd\:62a4\:7684\:ff1a", "Text",
 CellChangeTimes->{{3.7776873454661884`*^9, 3.7776873537247677`*^9}, {
  3.777687405154232*^9, 3.7776874366470613`*^9}, {3.790000894502242*^9, 
  3.790000897052392*^9}, {3.7900115581919646`*^9, 
  3.790011585905096*^9}},ExpressionUUID->"7401284d-b501-45dd-8c88-\
23d3f5f3eb83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "List"}]], "Input",
 CellChangeTimes->{{3.7776826020362573`*^9, 3.777682603025713*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"5ddbdbbb-353d-4ae6-8ee2-2efb890379c1"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/List",
              ButtonNote->"paclet:ref/List"],
             "\"paclet:ref/List\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]\\) \:662f\:4e00\:4e2a\:5143\:7d20\:5217\:8868. \"\>",
              "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/List", 
                    "paclet:ref/List", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/List.html"], 
                    None}, "http://reference.wolfram.com/language/ref/List.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Locked", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`List\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{16., {3., 13.}}], True->
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{16., {3., 13.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/List",
              ButtonNote->"paclet:ref/List"],
             "\"paclet:ref/List\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]\\) \:662f\:4e00\:4e2a\:5143\:7d20\:5217\:8868. \"\>",
              "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {1., 12.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {1., 12.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"e\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"e\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]\
\) \:662f\:4e00\:4e2a\:5143\:7d20\:5217\:8868. ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/List", "Web" -> 
      "http://reference.wolfram.com/language/ref/List.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Locked, Protected}, "FullName" -> 
    "System`List"], False]]], "Output",
 CellChangeTimes->{3.813607320900805*^9},
 CellLabel->
  "Out[231]=",ExpressionUUID->"7333f395-e3b8-437b-9aa2-dda1de030bf5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"List", "=", "2"}]], "Input",
 CellChangeTimes->{{3.7776874832574234`*^9, 3.777687484447711*^9}},
 CellLabel->
  "In[232]:=",ExpressionUUID->"4d72ed7f-c7f9-4fa2-964e-6113735120aa"],

Cell[BoxData[
 TemplateBox[{
  "Set", "wrsym", 
   "\"\:7b26\:53f7 \\!\\(\\*RowBox[{\\\"List\\\"}]\\) \:88ab\:4fdd\:62a4.\"", 
   2, 232, 2, 31713473421388459514, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8136073279585543`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[232]:=",ExpressionUUID->"077aa7c9-0e08-450f-\
a403-c4c7a6d2bd89"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.813607328004722*^9},
 CellLabel->
  "Out[232]=",ExpressionUUID->"5bb9a5d7-46b8-415d-a4ed-86dfc622889d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7885382527381277`*^9, 3.7885382606669483`*^9}},
 CellLabel->
  "In[234]:=",ExpressionUUID->"06ed3c88-c276-4761-8087-20ccab5444c7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"6d5ab0f1-edee-43cb-a3b9-1ae558c521e1"],

Cell[CellGroupData[{

Cell["\:6e05\:9664\:503c", "Section",
 CellChangeTimes->{{3.7781948262227736`*^9, 3.778194831170929*^9}, {
   3.77981390462642*^9, 3.779813905347307*^9}, {3.7885288184826307`*^9, 
   3.788528822030184*^9}, 3.789992835257207*^9, {3.7900009016697617`*^9, 
   3.790000902236496*^9}, {3.7900116180406947`*^9, 
   3.7900116235485406`*^9}},ExpressionUUID->"9b918f0f-9dd8-4e27-bbea-\
dd504c35d527"],

Cell[CellGroupData[{

Cell["Unset", "Subsubsection",
 CellChangeTimes->{
  3.7798138763419437`*^9},ExpressionUUID->"7f3df6e1-4e68-401c-9ebd-\
8cf618af4d69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", "3"}]], "Input",
 CellChangeTimes->{
  3.7809312173593793`*^9, {3.7831880321661677`*^9, 3.7831880331318755`*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"099f1147-f8a9-4a68-a044-d9f7b858c755"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.813607354319178*^9},
 CellLabel->
  "Out[235]=",ExpressionUUID->"ee59950f-5061-496e-b985-3595de2d1432"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"x", "=."}]], "Input",
 CellLabel->
  "In[236]:=",ExpressionUUID->"c21b6248-32ca-4280-896c-ed1f069874df"],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{3.780931222903942*^9},
 CellLabel->
  "In[237]:=",ExpressionUUID->"fc9b6b83-b8b7-4cbb-8223-39211062b76a"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{3.813607367836791*^9},
 CellLabel->
  "Out[237]=",ExpressionUUID->"0fb7c6cc-f8ed-4362-a4f0-b4a75d4d5745"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clear", "Subsubsection",
 CellChangeTimes->{
  3.779813890447801*^9},ExpressionUUID->"6ca31223-6013-4143-a1af-\
e27bed75732d"],

Cell[BoxData[
 RowBox[{"Clear", "[", "x", "]"}]], "Input",
 CellLabel->
  "In[238]:=",ExpressionUUID->"5ba1e235-c455-4561-be99-f1022d0d66d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "x"}]], "Input",
 CellChangeTimes->{{3.778194562451031*^9, 3.7781945628173733`*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"af3807b7-0da0-49d8-9f9f-78cb20ef99ca"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`x\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`x\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{13., {1., 12.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{13., {1., 12.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`x\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> "Global`x", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`x"], False]]], "Output",
 CellChangeTimes->{3.813607382473996*^9},
 CellLabel->
  "Out[239]=",ExpressionUUID->"088228be-8065-445c-97c8-ac7c51228f48"]
}, Open  ]],

Cell[TextData[{
 StyleBox[ButtonBox["Unset",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Unset"],
  FontWeight->"Bold"],
 " \:548c ",
 StyleBox[ButtonBox["Clear",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Clear"],
  FontWeight->"Bold"],
 " \:4e4b\:95f4\:7684\:5dee\:522b\:ff1a"
}], "Text",
 CellChangeTimes->{{3.781022183677447*^9, 3.7810221908107862`*^9}, {
  3.790000907696385*^9, 3.790000910281537*^9}, {3.790011632073679*^9, 
  3.790011665515538*^9}},ExpressionUUID->"1971cd9e-7a08-4059-a945-\
3b04e1556c3e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fact", "[", "1", "]"}], "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fact", "[", "n_", "]"}], ":=", 
  RowBox[{"n", " ", 
   RowBox[{"fact", "[", 
    RowBox[{"n", "-", "1"}], "]"}]}]}]}], "Input",
 CellLabel->"In[240]:=",
 CellID->8932126,ExpressionUUID->"08023e6c-2821-4886-8359-8e4ec3d79057"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fact", "[", "1", "]"}], "=."}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "removes", " ", "a", " ", "particular", " ", "definition", " ", "of", " ", 
    "fact"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7810221998600335`*^9, 3.7810222100938177`*^9}},
 CellLabel->"In[242]:=",
 CellID->830747278,ExpressionUUID->"68bd7ec8-6f18-440d-83fa-14b000329e63"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Definition", "[", "fact", "]"}]], "Input",
 CellLabel->"In[244]:=",
 CellID->40044875,ExpressionUUID->"c4a0c845-f543-4d1f-af0f-5e33c13de29c"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"fact", "[", "n_", "]"}], ":=", 
         RowBox[{"n", " ", 
          RowBox[{"fact", "[", 
           RowBox[{"n", "-", "1"}], "]"}]}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "Rows" -> {{1.}}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
  Definition[$CellContext`fact],
  Editable->False]], "Output",
 CellChangeTimes->{3.8136074637381067`*^9},
 CellLabel->
  "Out[244]=",ExpressionUUID->"c3e84d49-4a0b-4897-bd10-fc1693641b78"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "fact", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "removes", " ", "all", " ", "definctions", " ", "of", " ", "fact"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.7810222133702984`*^9, 3.7810222209164205`*^9}},
 CellLabel->"In[245]:=",
 CellID->559918265,ExpressionUUID->"b7269535-99ec-49d6-a4fb-0b528c9f1b85"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Definition", "[", "fact", "]"}]], "Input",
 CellLabel->"In[246]:=",
 CellID->20424797,ExpressionUUID->"f1a470dc-b4cb-44e8-acd5-9647168d8d2f"],

Cell[BoxData[
 InterpretationBox["Null",
  Definition[$CellContext`fact],
  Editable->False]], "Output",
 CellChangeTimes->{3.8136074737855577`*^9},
 CellLabel->
  "Out[246]=",ExpressionUUID->"cd957911-5409-4cd1-b99d-86837022f4f5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Remove", "Subsubsection",
 CellChangeTimes->{
  3.779813899791507*^9},ExpressionUUID->"d512144e-993d-4fef-ab5f-\
2351e34cc948"],

Cell[BoxData[
 RowBox[{"Remove", "[", "x", "]"}]], "Input",
 CellLabel->
  "In[247]:=",ExpressionUUID->"05aa2f7c-3a23-4430-8617-c2f3e46c7422"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "x"}]], "Input",
 CellChangeTimes->{{3.779859343202012*^9, 3.7798593437229633`*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"78705c0d-b107-4a1a-b109-7497c45fc746"],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"UnknownSymbol\"\>", ",", "\<\"x\"\>"}], "]"}]], "Output",
 CellChangeTimes->{3.813607484766183*^9},
 CellLabel->
  "Out[248]=",ExpressionUUID->"d01ba5a3-1d74-4d1c-9b7c-70788edb9c8f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Remove", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.788542677848971*^9, 3.788542679478613*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"2a062b09-de57-4f64-9d8a-f675c545f814"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "f", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<ArgumentsPattern\>\"", "->", 
     RowBox[{"{", 
      RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.788542508532732*^9, 3.788542529104744*^9}, {
  3.7885425905993013`*^9, 3.788542659936858*^9}, {3.790515778938225*^9, 
  3.790515799982706*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"ee3a2610-36d1-4d74-8d5c-92062a02b962"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "}"}], ";"}]], "Input",
 CellChangeTimes->{{3.7885427249021387`*^9, 3.7885427506612744`*^9}, 
   3.7885427866660147`*^9},
 CellLabel->
  "In[133]:=",ExpressionUUID->"e7d2893b-f0d4-4635-ac7c-7f1a35794b7f"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.7885427592273736`*^9, 3.7885427618234043`*^9}},
 CellLabel->
  "In[251]:=",ExpressionUUID->"18aa766e-7b85-4a18-88d1-988e07b8fd4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "}"}], ";"}]], "Input",
 CellChangeTimes->{3.7885427843532*^9},
 CellLabel->
  "In[129]:=",ExpressionUUID->"19925c56-7c71-450d-bd8f-572f1bb0e399"],

Cell[BoxData[
 RowBox[{"Remove", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.788542769333352*^9, 3.788542771493541*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"e98a34c8-bb3c-42ad-a854-f190cf2bb933"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "}"}], ";"}]], "Input",
 CellChangeTimes->{3.788542781697261*^9},
 CellLabel->
  "In[131]:=",ExpressionUUID->"0c6ec751-1bb6-42af-8c71-f23f6993dff9"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7885382527381277`*^9, 3.7885382606669483`*^9}},
 CellLabel->
  "In[253]:=",ExpressionUUID->"53852a8f-8f11-4abc-b2aa-85d748536b65"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"5f0e4d2a-cfa2-4e1b-aa08-1971ff8a6f78"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.779798991137438*^9, 
  3.779798992956984*^9}},ExpressionUUID->"cea6d92d-4c78-4c5d-8d95-\
922764eff497"],

Cell["\<\
\:4e00\:4e9b\:57fa\:672c\:51fd\:6570
\
\>", "Title",
 CellChangeTimes->{{3.779798973122558*^9, 3.7797989759853153`*^9}, 
   3.781015233574415*^9, {3.7811266106631126`*^9, 3.781126611906399*^9}, {
   3.788610575705429*^9, 3.7886105776150384`*^9}, {3.78938585836486*^9, 
   3.789385863493142*^9}, {3.7900116775617037`*^9, 
   3.7900116894139786`*^9}},ExpressionUUID->"e944ee89-4883-430b-bb51-\
bca6c8b41515"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"be2eb8f8-3ad4-480d-89b0-e459abe844f1"],

Cell[CellGroupData[{

Cell["\:8fed\:4ee3", "Section",
 CellChangeTimes->{{3.6131410741505938`*^9, 3.613141075309643*^9}, {
  3.7900116981250343`*^9, 
  3.790011700731556*^9}},ExpressionUUID->"6b0a6bbd-9893-4c42-a581-\
48e232c753bc"],

Cell[CellGroupData[{

Cell["\:4f20\:7edf\:5faa\:73af", "Subsubsection",
 CellChangeTimes->{{3.7885282056859674`*^9, 3.788528208375784*^9}, {
  3.79001170860409*^9, 
  3.7900117139600515`*^9}},ExpressionUUID->"19a6b983-d99e-44dd-a367-\
10f27879d57b"],

Cell[TextData[{
 StyleBox[ButtonBox["For",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/For"],
  FontWeight->"Bold"],
 " \:5faa\:73af\:ff1a"
}], "Text",
 CellChangeTimes->{{3.788528485650057*^9, 3.788528500839818*^9}, 
   3.790000943145162*^9, {3.7900117190591717`*^9, 
   3.7900117200845747`*^9}},ExpressionUUID->"27614e01-a58c-44f6-9e02-\
d5aab30a576f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "10"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{"Print", "[", "i", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.788528215297274*^9, 3.7885282310232615`*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"cf7cd7bd-41c7-456b-863e-ddc9a5b419a0"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.81377928939808*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[329]:=",ExpressionUUID->"fc11d1ff-5a81-4303-\
a23d-c0de68932ae7"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.8137792894146767`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[329]:=",ExpressionUUID->"9f13b294-31f9-4d06-\
982d-dfa3aee9c36f"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.81377928943927*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[329]:=",ExpressionUUID->"2fa96f74-526f-46db-\
bf96-cd4f0aecd699"],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.8137792894620037`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[329]:=",ExpressionUUID->"5d2ca496-836d-4b52-\
ab59-2a6e73d88300"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.8137792894844522`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[329]:=",ExpressionUUID->"94a39b06-4998-4d44-\
9cf1-0f02befc5b29"],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{3.8137792895075397`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[329]:=",ExpressionUUID->"f5b4036b-b68a-4ce1-\
81fb-22d188fb7990"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.8137792895341063`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[329]:=",ExpressionUUID->"dbe13c04-6933-43b5-\
8d00-7bc3f93746b5"],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{3.813779289555758*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[329]:=",ExpressionUUID->"ee26309e-d79d-437e-\
b296-6f44b414c95d"],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{3.813779289577883*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[329]:=",ExpressionUUID->"be6e7a81-895a-4cac-\
a03b-9ba7e119aea0"],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{3.813779289598901*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[329]:=",ExpressionUUID->"bc80e408-bc7b-4ce9-\
a4f4-615e35ecfd3c"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox[ButtonBox["While",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/While"],
  FontWeight->"Bold"],
 " \:5faa\:73af\:ff1a"
}], "Text",
 CellChangeTimes->{
  3.7885283464765635`*^9, {3.788528490739817*^9, 3.788528498781904*^9}, 
   3.7900009480571623`*^9, {3.7900117274224124`*^9, 
   3.790011730521652*^9}},ExpressionUUID->"19462878-6c88-4d33-8bb3-\
4f18117b4cb2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"i", "\[LessEqual]", "10"}], ",", 
   RowBox[{
    RowBox[{"Print", "[", "i", "]"}], ";", 
    RowBox[{"i", "++"}]}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.78852825530766*^9, 3.7885282934313345`*^9}, 
   3.813778543012391*^9},
 CellLabel->
  "In[330]:=",ExpressionUUID->"29980054-c1a5-408a-b9f1-5a5315b5f4d8"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.8137792937097273`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[330]:=",ExpressionUUID->"d60cb56e-0fb3-43a8-\
ba44-17bea47f3faa"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.813779293727293*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[330]:=",ExpressionUUID->"bb525d0c-6bb2-47f1-\
b597-442d5216928a"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.813779293752948*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[330]:=",ExpressionUUID->"a87eb884-3df4-4936-\
8583-ee24ebc8f4c1"],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.813779293775275*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[330]:=",ExpressionUUID->"a7383ac7-04fe-4f02-\
b5b3-c2f15977f640"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.8137792937998047`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[330]:=",ExpressionUUID->"749f59c5-352c-49b6-\
a878-0d1e6cbefb03"],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{3.813779293820922*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[330]:=",ExpressionUUID->"d59f5ee8-e54d-499e-\
8b9f-e228265ad315"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.813779293843049*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[330]:=",ExpressionUUID->"45af7c29-85b2-4575-\
9f36-9fb593a20d91"],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{3.813779293865158*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[330]:=",ExpressionUUID->"5cfe8141-9480-4b2a-\
899d-6a2074693cb7"],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{3.8137792938860617`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[330]:=",ExpressionUUID->"7e8ec6d5-9475-4907-\
9fb7-a061a7015cf1"],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{3.8137792939056997`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[330]:=",ExpressionUUID->"f0904c5a-8b3d-4370-\
8ea3-668b50dd7cee"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox[ButtonBox["Do",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Do"],
  FontWeight->"Bold"],
 " \:5faa\:73af\:ff1a"
}], "Text",
 CellChangeTimes->{{3.788528507034256*^9, 3.788528509218417*^9}, 
   3.790000951803512*^9, {3.790011753140818*^9, 
   3.790011755806306*^9}},ExpressionUUID->"1df6bc0d-76ab-42c5-9822-\
5a6a6b36b94a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Print", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7885283187635736`*^9, 3.788528330135177*^9}},
 CellLabel->
  "In[332]:=",ExpressionUUID->"688b11ca-cbca-4f4b-960c-811846d7e8fe"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.813779304127522*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[332]:=",ExpressionUUID->"1e4bdb2a-f7e2-4683-\
812d-7d8de855c9f3"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.8137793041441603`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[332]:=",ExpressionUUID->"b9c15eaf-fe64-4489-\
a7a4-7316b269386f"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.813779304168049*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[332]:=",ExpressionUUID->"471040dd-e247-4a4b-\
8e3d-e8c291399a4e"],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.8137793041918077`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[332]:=",ExpressionUUID->"fbfcb1a5-c794-4155-\
8a0c-e84e0e4fb745"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.813779304215612*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[332]:=",ExpressionUUID->"a7d2c917-73d8-4dbe-\
a5c4-05671d9d6f0e"],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{3.8137793042369137`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[332]:=",ExpressionUUID->"c930663f-d610-4a86-\
80e6-0a979b822cdf"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.813779304258287*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[332]:=",ExpressionUUID->"63a65bd5-f705-4f42-\
8f3b-1f2c04152a99"],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{3.813779304279525*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[332]:=",ExpressionUUID->"687fb533-9902-4d7e-\
96d8-2d7cd93cdf6c"],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{3.8137793043052893`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[332]:=",ExpressionUUID->"4f5cf821-9157-4c1f-\
a75d-c4a6f99be7cd"],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{3.8137793043265467`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[332]:=",ExpressionUUID->"3632058a-e0da-4e77-\
8a2c-6b5f1bd370ea"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Table \:548c Map", "Subsubsection",
 CellChangeTimes->{{3.7885283776282053`*^9, 3.7885283793276625`*^9}, 
   3.7900117638887353`*^9},ExpressionUUID->"8465c2fd-2018-403e-8689-\
f8296fb216f4"],

Cell[TextData[{
 "\:751f\:6210\:4e00\:4e2a\:8868\:8fbe\:5f0f\:7684 ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "e75a7564-db0d-4c1a-8c23-84f7e916327a"],
 " \:4e2a\:526f\:672c\:7684\:5217\:8868\:ff1a"
}], "Text",
 CellChangeTimes->{{3.7798110539319773`*^9, 3.779811071467305*^9}, 
   3.790000957418578*^9, {3.7900117936652603`*^9, 
   3.7900118224179773`*^9}},ExpressionUUID->"7d483f1d-719e-4cd2-9e52-\
0970305e1d3a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.779803513811675*^9, 3.779803514464341*^9}, {
  3.7798110736493397`*^9, 3.7798110862096653`*^9}},
 CellLabel->
  "In[333]:=",ExpressionUUID->"e220efc2-0bd0-40ba-981c-03823f9fde8d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.8137793245909367`*^9},
 CellLabel->
  "Out[333]=",ExpressionUUID->"bd5f87b5-fdae-4d1e-a3d1-2b0ee6a432d9"]
}, Open  ]],

Cell["\:628a\:51fd\:6570\:6620\:5c04\:5230\:5217\:8868\:6216\:8868\:8fbe\:5f0f\
\:7684\:6bcf\:4e2a\:5143\:7d20\:ff1a", "Text",
 CellChangeTimes->{{3.779803343963312*^9, 3.779803371004156*^9}, {
   3.77981112057791*^9, 3.779811132888608*^9}, {3.7798112122870293`*^9, 
   3.77981121702921*^9}, 3.7900009618841887`*^9, {3.7900118392704167`*^9, 
   3.7900118735319767`*^9}},ExpressionUUID->"9c17813b-2c29-4ee6-ab75-\
a2c8dcf48b04"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7798111428144493`*^9, 3.77981114574039*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"879a9a02-938f-41e3-ac8b-d67737254dc8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}], ",", 
   RowBox[{"f", "[", "5", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.813779335933897*^9},
 CellLabel->
  "Out[334]=",ExpressionUUID->"b1f565ad-3e45-47f9-86ee-ded4c25a22e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "/@", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], " ", 
  RowBox[{"(*", " ", "\:7b80\:5199\:5f62\:5f0f", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.788528397468212*^9, 3.788528410775628*^9}, {
  3.7900120266729813`*^9, 3.7900120325546355`*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"7aee6c0d-ce4e-4fbc-b7cd-458f5ca39944"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}], ",", 
   RowBox[{"f", "[", "5", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.813779341302677*^9},
 CellLabel->
  "Out[335]=",ExpressionUUID->"81296041-930a-4d16-a78d-5aa886bfc9eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"f", ",", " ", 
    RowBox[{"anyhead", "[", 
     RowBox[{"1", ",", "2", ",", " ", "3", ",", "4", ",", "5"}], "]"}]}], 
   "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "\:9002\:7528\:4e8e\:4efb\:4f55\:6807\:5934", "\:ff0c", 
    "\:4e0d\:4e00\:5b9a\:662f\:5217\:8868"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.739108117821555*^9, 3.739108121507184*^9}, {
  3.7391082145192957`*^9, 3.739108215361599*^9}, {3.7798033193533573`*^9, 
  3.7798033226228647`*^9}, {3.779803389831744*^9, 3.779803390148004*^9}, {
  3.7798111497366447`*^9, 3.7798111501397448`*^9}, {3.788528420983302*^9, 
  3.7885284307624173`*^9}, {3.790012043039671*^9, 3.790012058871664*^9}},
 CellLabel->
  "In[336]:=",ExpressionUUID->"ed02d733-f8f5-4c10-a503-7ac3c694449d"],

Cell[BoxData[
 RowBox[{"anyhead", "[", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}], ",", 
   RowBox[{"f", "[", "5", "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.813779352231656*^9},
 CellLabel->
  "Out[336]=",ExpressionUUID->"37815c9c-4f2c-49b8-a613-ece63688791a"]
}, Open  ]],

Cell[TextData[{
 StyleBox[ButtonBox["MapThread",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/MapThread"],
  FontWeight->"Bold"],
 " \:53ef\:4ee5\:5c06\:4efb\:4f55\:51fd\:6570\:6620\:5c04\:5230\:591a\:4e2a\
\:53c2\:6570\:5217\:8868\:ff1a"
}], "Text",
 CellChangeTimes->{{3.7798115911690207`*^9, 3.779811636114546*^9}, 
   3.7798116724493093`*^9, 3.7798117441924133`*^9, 3.790000969024804*^9, {
   3.7900120679375057`*^9, 3.7900120720941415`*^9}, {3.7900126215643177`*^9, 
   3.7900126496492863`*^9}},ExpressionUUID->"89a97c47-e867-4f81-9f02-\
e86b31bf233a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.779803455670467*^9, 3.779803457019202*^9}, 
   3.779811571284226*^9},
 CellLabel->
  "In[337]:=",ExpressionUUID->"6dc8d1f7-b50d-426a-9a11-717e4bf2e8e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "x"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"b", ",", "y"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"c", ",", "z"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.813779360820427*^9},
 CellLabel->
  "Out[337]=",ExpressionUUID->"97bd96c5-a5cc-45eb-8ab4-9a3b6599f854"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nest \:548c Fold", "Subsubsection",
 CellChangeTimes->{{3.7885284491869063`*^9, 3.7885284509139843`*^9}, 
   3.790012655171137*^9},ExpressionUUID->"95781553-639e-4fab-83dd-\
332634b7faf8"],

Cell[TextData[{
 StyleBox[ButtonBox["Nest",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Nest"],
  FontWeight->"Bold"],
 " \:53ef\:4ee5\:5c06\:4e00\:4e2a\:51fd\:6570\:91cd\:590d\:5e94\:7528\:5230\
\:4e00\:4e2a\:8868\:8fbe\:5f0f\:ff1a"
}], "Text",
 CellChangeTimes->{{3.7798118200606318`*^9, 3.779811827181069*^9}, {
  3.7900009770488377`*^9, 3.790000988983412*^9}, {3.790012663847184*^9, 
  3.790012696413599*^9}},ExpressionUUID->"43b8b924-5ae8-4ca6-834e-\
6f10d0f4d6a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nest", "[", 
  RowBox[{"f", ",", "x", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.813779391072942*^9, 3.813779392237151*^9}},
 CellLabel->
  "In[338]:=",ExpressionUUID->"89f2df6a-68aa-4d3e-8cd8-d7c6a83003c7"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"f", "[", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], "]"}], "]"}]], "Output",
 CellChangeTimes->{3.8137793926412497`*^9},
 CellLabel->
  "Out[338]=",ExpressionUUID->"cee15b33-82eb-4824-9041-82c0dbc07bb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{"f", ",", "x", ",", "5"}], "]"}]], "Input",
 CellLabel->
  "In[339]:=",ExpressionUUID->"54664dc1-96d8-42fd-aaff-d53911b082dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", 
       RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.813779409212946*^9},
 CellLabel->
  "Out[339]=",ExpressionUUID->"a67b0b4b-a005-4937-b7af-0f1056d21059"]
}, Open  ]],

Cell[TextData[{
 StyleBox[ButtonBox["Fold",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Fold"],
  FontWeight->"Bold"],
 " \:53ef\:4ee5\:9012\:5f52\:5904\:7406\:5217\:8868\:7684\:7ec4\:6210\:90e8\
\:5206\:5e76\:6784\:5efa\:4e00\:4e2a\:8fd4\:56de\:503c\:ff1a"
}], "Text",
 CellChangeTimes->{{3.779811764789912*^9, 3.779811777655863*^9}, {
  3.790000981147109*^9, 3.790000983037977*^9}, {3.7900127428399687`*^9, 
  3.7900127846059065`*^9}},ExpressionUUID->"1adb04d7-7631-482a-a742-\
032c9920ce8d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fold", "[", 
  RowBox[{"f", ",", "x", ",", 
   RowBox[{"{", 
    RowBox[{"a1", ",", "a2", ",", "a3", ",", "a4"}], "}"}]}], "]"}]], "Input",\

 CellLabel->
  "In[340]:=",ExpressionUUID->"e9ef71f9-aeba-4326-a5f0-d8dadca9f78b"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "a1"}], "]"}], ",", "a2"}], "]"}], ",", "a3"}], 
    "]"}], ",", "a4"}], "]"}]], "Output",
 CellChangeTimes->{3.81377942252892*^9},
 CellLabel->
  "Out[340]=",ExpressionUUID->"346e6d5c-5f9f-4ac8-b549-210f4dbcbd8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FoldList", "[", 
  RowBox[{"f", ",", "x", ",", 
   RowBox[{"{", 
    RowBox[{"a1", ",", "a2", ",", "a3", ",", "a4"}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.779811795217327*^9, 3.77981179980653*^9}},
 CellLabel->
  "In[341]:=",ExpressionUUID->"ed0c3c16-c094-444a-8318-2f2cd59f2efe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "a1"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "a1"}], "]"}], ",", "a2"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "a1"}], "]"}], ",", "a2"}], "]"}], ",", "a3"}], 
    "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "a1"}], "]"}], ",", "a2"}], "]"}], ",", "a3"}], 
      "]"}], ",", "a4"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8137794427781143`*^9},
 CellLabel->
  "Out[341]=",ExpressionUUID->"74c66add-1416-4d81-a200-a904c9a0d7ad"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7885382527381277`*^9, 3.7885382606669483`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"fa7e691a-f3a9-437f-90d6-36d6dd3ff9b5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"8412563e-41cf-4ade-86fe-66d568ed668b"],

Cell[CellGroupData[{

Cell["\:8ba1\:6570\:548c\:5206\:7ec4", "Section",
 CellChangeTimes->{{3.6131404189464827`*^9, 3.61314042663651*^9}, {
  3.776516073013829*^9, 3.776516075168676*^9}, {3.790012796704004*^9, 
  3.790012802123909*^9}},ExpressionUUID->"4bd2ab68-c511-4d5e-ba54-\
a0ac2add78d5"],

Cell[CellGroupData[{

Cell["\:8ba1\:6570", "Subsubsection",
 CellChangeTimes->{{3.788535367470755*^9, 3.788535371274582*^9}, {
  3.7900128078836217`*^9, 
  3.790012810511122*^9}},ExpressionUUID->"3719fe58-c31e-498f-93a8-\
a025925c2d88"],

Cell["\:8ba1\:7b97\:5143\:7d20\:5728\:5217\:8868\:4e2d\:51fa\:73b0\:7684\:6b21\
\:6570\:ff1a", "Text",
 CellChangeTimes->{{3.779802975639317*^9, 3.779803005438649*^9}, {
  3.7900128343996687`*^9, 
  3.7900128489504175`*^9}},ExpressionUUID->"e5917a45-ba4f-4d7d-99d1-\
5c325ffbbd25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Counts", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "c", ",", "d", ",", "b", ",", "a", ",", "c", ",", "b"}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.777809281570915*^9, 3.777809303794325*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"c894d4aa-f674-417c-88d5-a09468b61312"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "2"}], ",", 
   RowBox[{"c", "\[Rule]", "2"}], ",", 
   RowBox[{"d", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "2"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.813780067394499*^9},
 CellLabel->
  "Out[352]=",ExpressionUUID->"2789830e-54db-4f4a-a2f4-063206d9be28"]
}, Open  ]],

Cell[TextData[{
 "\:8ba1\:7b97\:628a\:51fd\:6570 ",
 StyleBox[ButtonBox["EvenQ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/EvenQ"],
  FontWeight->"Bold"],
 " \:5e94\:7528\:4e8e\:5217\:8868\:5143\:7d20\:540e\:6bcf\:4e2a\:4e0d\:540c\
\:503c\:51fa\:73b0\:7684\:6b21\:6570\:ff1a"
}], "Text",
 CellChangeTimes->{{3.779803100265719*^9, 3.7798031837832117`*^9}, 
   3.7900010016077747`*^9, {3.7900129028479643`*^9, 
   3.7900129987441792`*^9}},ExpressionUUID->"795c35ed-a81c-4483-bf80-\
9e76b66b8098"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CountsBy", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "1"}], "}"}], 
   ",", "EvenQ"}], "]"}]], "Input",
 CellChangeTimes->{{3.7778093087194643`*^9, 3.7778093359656043`*^9}},
 CellLabel->
  "In[353]:=",ExpressionUUID->"57dffd0a-8c11-413b-aee2-edb50b64fa1f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"False", "\[Rule]", "4"}], ",", 
   RowBox[{"True", "\[Rule]", "2"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.813780095426607*^9},
 CellLabel->
  "Out[353]=",ExpressionUUID->"172afdbf-4e91-4c91-8416-0dfd6b49db9f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:5206\:7ec4", "Subsubsection",
 CellChangeTimes->{{3.7885353777821817`*^9, 3.78853537890121*^9}, {
  3.79001300651274*^9, 
  3.790013009392095*^9}},ExpressionUUID->"9cc9396b-afdf-4356-9752-\
46dd18050022"],

Cell["\:6536\:96c6\:4e3a\:5b50\:5217\:8868\:ff1a", "Text",
 CellChangeTimes->{{3.779803264870915*^9, 3.7798032860984898`*^9}, {
  3.790013024534459*^9, 
  3.7900130367034917`*^9}},ExpressionUUID->"850bb425-31f9-448e-b8a5-\
bfe298349e80"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Gather", "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "3", ",", "1", ",", "1", ",", "2", ",", "3", ",", 
    "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.788535387500197*^9, 3.7885354005832224`*^9}},
 CellLabel->
  "In[354]:=",ExpressionUUID->"6023f42a-f33d-421c-98e4-bc4be907616a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", "4", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.813780113097413*^9},
 CellLabel->
  "Out[354]=",ExpressionUUID->"be096714-ac67-46e6-8509-c14588389184"]
}, Open  ]],

Cell["\:6709\:6761\:4ef6\:6536\:96c6\[LongDash]\[LongDash]\:5f53\:5e94\:7528\
\:6761\:4ef6\:65f6\:51fa\:73b0\:540c\:6837\:503c\:ff1a", "Text",
 CellChangeTimes->{{3.7885354076663203`*^9, 3.788535413240432*^9}, {
  3.7885355489186993`*^9, 3.7885355574329023`*^9}, {3.790001009809649*^9, 
  3.790001021768223*^9}, {3.7900130829939985`*^9, 
  3.790013131848068*^9}},ExpressionUUID->"11387bc5-f0be-442e-8551-\
ead96afd0247"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GatherBy", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   "OddQ"}], "]"}]], "Input",
 CellLabel->
  "In[355]:=",ExpressionUUID->"96d330f2-3bb8-47b5-ac3d-fa18964e42a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.813780130739408*^9},
 CellLabel->
  "Out[355]=",ExpressionUUID->"c22762a3-98e4-40d9-9c49-d5955dbafd96"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GatherBy", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "e"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "10"}], "}"}]}], "}"}], ",", "First"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.788535433349661*^9, 3.7885355186994524`*^9}, {
  3.7885355741182985`*^9, 3.7885355775650835`*^9}},
 CellLabel->
  "In[356]:=",ExpressionUUID->"b7aa0653-b78d-4a58-be2b-a541a36fc107"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "c"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "e"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "10"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8137801438675623`*^9},
 CellLabel->
  "Out[356]=",ExpressionUUID->"d119d7dc-d87f-4eea-88be-1eb203348e28"]
}, Open  ]],

Cell[TextData[{
 StyleBox[ButtonBox["GroupBy",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/GroupBy"],
  FontWeight->"Bold"],
 " \:4e0e ",
 StyleBox[ButtonBox["GatherBy",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/GatherBy"],
  FontWeight->"Bold"],
 " \:4e00\:6837\:ff0c\:9664\:4e86\:5b83\:8fd4\:56de\:7684\:662f\:5173\:8054\
\:ff1a "
}], "Text",
 CellChangeTimes->{{3.7798032146588497`*^9, 3.7798032299634333`*^9}, {
  3.788535587845641*^9, 3.7885356137653027`*^9}, {3.790001030137253*^9, 
  3.790001042637456*^9}, {3.7900033798389606`*^9, 3.790003384291572*^9}, {
  3.790013142126196*^9, 
  3.7900131873573627`*^9}},ExpressionUUID->"ad1aa1fb-7908-4b34-9c0e-\
fb372c696dbf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GroupBy", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "c"}], "}"}]}], "}"}], ",", "First"}], "]"}]], "Input",\

 CellChangeTimes->{{3.613140377582425*^9, 3.61314040569313*^9}},
 CellLabel->
  "In[357]:=",ExpressionUUID->"8e6c7d79-10a1-415a-bc5d-6b666c58b11f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"a", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "c"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"b", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"b", ",", "c"}], "}"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8137801545601683`*^9},
 CellLabel->
  "Out[357]=",ExpressionUUID->"4e0a8d28-0517-41ea-ab05-131e64e9f206"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7885382527381277`*^9, 3.7885382606669483`*^9}},
 CellLabel->
  "In[358]:=",ExpressionUUID->"6f8e68eb-897c-424e-a259-7c19ce925060"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ba4b2765-5cc6-41fb-9cc4-61a051601f50"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.779798991137438*^9, 
  3.779798992956984*^9}},ExpressionUUID->"254a114c-299e-4deb-adb4-\
4a6108cbfa1c"],

Cell["\<\
\:5217\:8868\:4e0e\:5173\:8054
\
\>", "Title",
 CellChangeTimes->{{3.779798973122558*^9, 3.7797989759853153`*^9}, 
   3.781015233574415*^9, {3.7811266106631126`*^9, 3.781126611906399*^9}, {
   3.7886106344750376`*^9, 3.7886106691812134`*^9}, {3.790013204002832*^9, 
   3.79001320984949*^9}},ExpressionUUID->"483f2302-a17a-438b-8fe6-\
dc5e8573873f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"80ce7689-f042-4dab-aaed-432bdf774165"],

Cell[CellGroupData[{

Cell["\:5217\:8868 ", "Section",
 CellChangeTimes->{{3.77651583150215*^9, 3.776515837112117*^9}, {
  3.77657891325994*^9, 3.7765789233767347`*^9}, {3.790013215176446*^9, 
  3.790013216969421*^9}},ExpressionUUID->"c030526a-d5d5-4cbf-a14b-\
39c02267f79f"],

Cell[TextData[{
 StyleBox[ButtonBox["List",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/List"],
  FontWeight->"Bold"],
 " \:662f\:5bf9\:8c61\:6536\:96c6. \:5b83\:5305\:542b\:5c01\:95ed\:5728\:82b1\
\:62ec\:53f7\:4e2d\:7684 Wolfram \:8bed\:8a00\:8868\:8fbe\:5f0f\:7684\:5e8f\
\:5217."
}], "Text",
 CellChangeTimes->{{3.779799203822068*^9, 3.779799218767473*^9}, {
   3.78996618090342*^9, 3.7899661814469814`*^9}, 3.7900033917603683`*^9, {
   3.790013221335924*^9, 3.79001329027052*^9}, 
   3.790013328696556*^9},ExpressionUUID->"e2b190e2-b0bd-43e8-8753-\
fd3bdb566e92"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["\:8303\:4f8b",
 FontWeight->"Plain"]], "Subsection",
 CellChangeTimes->{{3.789966186694027*^9, 3.7899661886937027`*^9}, 
   3.789992853989251*^9, 
   3.790013335607606*^9},ExpressionUUID->"c251380d-0045-4551-bfee-\
c471719e476a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], " ", 
  RowBox[{"(*", " ", "\:53d8\:91cf\:5217\:8868", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7899661993353667`*^9, 3.7899662077420497`*^9}, {
  3.7900133425066633`*^9, 
  3.790013344090757*^9}},ExpressionUUID->"c0172915-4e0b-44e0-8529-\
7111b0c11717"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "3.4", ",", 
    RowBox[{"-", "5"}], ",", "7.8"}], "}"}], " ", 
  RowBox[{"(*", " ", "\:6570\:5b57\:5217\:8868", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7899662151822224`*^9, 3.7899662279054265`*^9}, {
  3.790013351061792*^9, 
  3.790013352768818*^9}},ExpressionUUID->"7a54f7e1-19a9-468f-8fbd-\
7fa62e591979"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\"", ",", "\"\<Charlie\>\""}], 
   "}"}], " ", 
  RowBox[{"(*", " ", "\:5b57\:7b26\:4e32\:5217\:8868", " ", "*)"}]}]], "Input",\

 CellChangeTimes->{{3.688306901501823*^9, 3.688306913029714*^9}, 
   3.771580301913026*^9, {3.7728755552732983`*^9, 3.772875565910236*^9}, {
   3.7899662433483505`*^9, 3.78996624840689*^9}, {3.790013415418972*^9, 
   3.7900134170950336`*^9}},ExpressionUUID->"9484aaa2-ff5b-40fb-92fd-\
2e6f22c1c8b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "  ", 
  RowBox[{
  "(*", " ", "\:5d4c\:5957\:5217\:8868\:8868\:793a\:6574\:6570\:77e9\:9635", 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7899664439898653`*^9, 3.7899664675972223`*^9}, {
   3.7900135128794003`*^9, 3.7900135272901573`*^9}, 
   3.790014010381217*^9},ExpressionUUID->"ae66c7ef-9200-4be6-a26a-\
e2d9efb1e242"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], "}"}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.78996647615545*^9, 3.7899664804390445`*^9}},
 CellLabel->
  "In[359]:=",ExpressionUUID->"4b6ce607-9336-4e57-93f8-7dd7a6d42ffa"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2"},
     {"3", "4"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.813793936262877*^9},
 CellLabel->
  "Out[359]//MatrixForm=",ExpressionUUID->"469ba25c-9dc1-47c8-b743-\
d86dc4c972a1"]
}, Open  ]],

Cell["\:8fd8\:53ef\:4ee5\:4f7f\:7528\:5217\:8868\:ff1a", "Text",
 CellChangeTimes->{{3.6930640967714167`*^9, 3.693064187954031*^9}, {
   3.6933174502628517`*^9, 3.693317554510956*^9}, {3.693317593127845*^9, 
   3.693317599639482*^9}, 3.7320134062012587`*^9, 3.73507001310627*^9, 
   3.743773099697762*^9, 3.743773160192672*^9, {3.789966498810197*^9, 
   3.789966500000025*^9}, {3.790014021541833*^9, 
   3.7900140301748924`*^9}},ExpressionUUID->"24f37b87-65a8-42b1-aa25-\
dfb6e43795dc"],

Cell["\:6307\:5b9a\:56fe\:5f62\:7684\:533a\:95f4\:ff1a", "Item",
 CellChangeTimes->{{3.743773054602817*^9, 3.743773059363399*^9}, {
  3.743773102041112*^9, 3.7437731044549017`*^9}, {3.743773220574567*^9, 
  3.74377322447684*^9}, {3.7900140393246603`*^9, 
  3.7900140526310463`*^9}},ExpressionUUID->"e7f6b306-5c72-426f-9eba-\
d8d089371c83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\t", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.743773054602817*^9, 3.743773065151746*^9}, {
  3.7437731727762623`*^9, 3.7437731752137136`*^9}, {3.77158027602322*^9, 
  3.7715802916592073`*^9}, {3.772875561734496*^9, 3.772875563165222*^9}},
 CellLabel->
  "In[360]:=",ExpressionUUID->"5fd73a33-d596-412b-ad44-d471171c3e38"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0vk71AkAx/FpUNkxGjWNMaYcX0eSXLnS9v0QRYcrx5e0WuVR2VYKT1u7
iTGIpCGSxJRx1MoWNl1bUuTIptrHVsr1IEQ7xjUhVj+8n9c/8NYJDvcKodNo
tB3zffPNyA5zGk1KuvRcCv5mneofqW4MKZme3c0t5EjJCmPWYO68x3uLGvxN
pOTZkFdX7eY1di3hjQZIyU1vfdlH51WxPXu897aULKsOmuytlJIvK/rMGyJG
SGFaxF9NB0bIXUTjyTOjMtLCJNP1wmsZGdYdIKIbTpA6P4bcYvSMk11HZbMe
o1/J+2mKS+Or5aQSQXPbrq8ACXOhZd7ZafKTnkmmwf1F0I0/V5B5cZbUf+5b
+daRiaKpyASXOzRQ1lvS246pQWja173OkY7dhfGji1vZUDmTpCV7qgC9N7bO
Noe4GAhJp26ZKCF9Q7VS5GI+WA/22HVULsT4ddLpFl8bqWlZnCW6ixE3Ju9a
b6mL8uSvr5ckKYPR3+zQ9oMedOhGdjEqDER1vhVpfjBA38T9HGm0Csi17nod
nkYYD10maZljYuqXQctirTUopeWmxsYuAXlCqj2paIpARp1dTiQLXqFiq4Qh
MyR5i2m/26jBNZ/PYiZaICiwrPbBsBrqaAaZXznrsOtqXrtSxVJMmW9wEb+z
gvGvxaFVkcugr/FkQWKJDQrZPZ8PGLHxsatj4VioHZw/0Rt3DrNxonT2gVqQ
Pc6d8inYKFkOMb0x4p7z9yi7Vj0k8uOgONgy46YFCRlLNZnPU4eewmfvvBtA
l3WafskLdTj7/ovaKgeM58jYYee5uEHznvPocsSH9J8js3w0wLs9NZev6oRw
15WvapR5iIi9ltZh6gzDjTcFBs08zCyQNMUe2YzkkSjLFIEminoGJOolW1Bt
672TsubjzsHO99EdLuA/ZD8LlPNRw4iZNlq/FQRd2S74xgooCLKih4Xb4B7f
MZsXsRLHtLpSLk9sh0HtQM37VVrgWsZ8DPJzQ8tFlcm491qg+QpdTe66w6M1
ibzpro2CZN7eYbEHVMnCuPzr2vD7zD0dEOiJ9rry8NVMHYgmHtOV1nghO/v5
+YFDOlAzZu0XzHihxJVmZ1Svg4I3mmKtJzvRqKGfqLhaF61O7xLled5wbNjr
vUeoC/PofNHhwz6Q1JT5S9t1MROWq//IwRfctsH5qwgc2lgUtcnID92vYFOf
Q6B+anVbpBKFvFXbOLtzCVDNjmt9lCn4n/QZH7lMwKlq30srJoUWo4MVmlcI
rH9Zt0jOpvDwVIZpeDGBtBWKVqf0KFxa22fIqSTQq75XlL+JgndyCndfMwHr
jHJPXhwFVmfmpPxvAqmezCLFBApNVuLW1BYCpOGRrf+dpuDYVXm+6jWBGm6A
oFZEwcy2ncV4R8CMXfBn1BUKKn1myuV9BO78pMHvraZQb2/fv7mfgEy8POKf
pxQEIudnbQMEEoc0OU/rKUxtCBAqDRNoadjsIWmh0J8hWOA/SuB57nLh/k4K
koHUzuExApMpwQEBPRSCyOxHcRMEYtLvxmzvp9A6WPpb6RcC13uF98ylFNJR
FegwTcDdYvqF3hgFt6zH9q0zBDyzjltx5RS+G2rihc0SKFdT/MSYoVDr0Ppl
bo5AuOSCdG6Owv9MgyVC
       "]]},
     Annotation[#, "Charting`Private`Tag$462952#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  BaseStyle->{FontFamily -> "Times", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 10}, {0., 99.99999632653065}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8137939468695173`*^9},
 CellLabel->
  "Out[360]=",ExpressionUUID->"0a0018b6-1180-4f2c-9bcc-abfe939de162"]
}, Open  ]],

Cell["\:5728\:91cd\:590d\:8ba1\:7b97\:4e2d\:521b\:5efa\:8fed\:4ee3\:ff1a", \
"Item",
 CellChangeTimes->{{3.743773054602817*^9, 3.743773065151746*^9}, {
  3.7437731727762623`*^9, 3.743773177309565*^9}, {3.743773227068865*^9, 
  3.74377324497396*^9}, {3.790014079751677*^9, 
  3.7900140945804596`*^9}},ExpressionUUID->"793aa263-a446-409b-aedc-\
74aff2b0c03b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\t", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"n", "^", "2"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "4", ",", "8"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.743773054602817*^9, 3.743773065151746*^9}, {
  3.7437731727762623`*^9, 3.743773179740885*^9}, {3.771580283952565*^9, 
  3.771580294964548*^9}},
 CellLabel->
  "In[361]:=",ExpressionUUID->"0aeaf4a3-f509-42ff-a2d0-57ef67ea6440"],

Cell[CellGroupData[{

Cell[BoxData["16"], "Print",
 CellChangeTimes->{3.813793954034049*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[361]:=",ExpressionUUID->"0c127c0f-3f78-4572-\
9050-e072c2d48a36"],

Cell[BoxData["25"], "Print",
 CellChangeTimes->{3.813793954208449*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[361]:=",ExpressionUUID->"eff569e2-6cdd-43f5-\
9370-62461c2dab04"],

Cell[BoxData["36"], "Print",
 CellChangeTimes->{3.813793954239213*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[361]:=",ExpressionUUID->"7ae03312-a578-4dae-\
88b1-2b89d11ed593"],

Cell[BoxData["49"], "Print",
 CellChangeTimes->{3.813793954269697*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[361]:=",ExpressionUUID->"5fcbfa88-e08c-42c5-\
a2d1-2e8112359345"],

Cell[BoxData["64"], "Print",
 CellChangeTimes->{3.813793954295664*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[361]:=",ExpressionUUID->"040a315d-16f8-46c0-\
a99e-117fd346fa13"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7885382527381277`*^9, 3.7885382606669483`*^9}},
 CellLabel->
  "In[362]:=",ExpressionUUID->"3e6f0c21-53d8-419e-b786-0488f39519a9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"248890c5-9be1-4217-87f8-94e5801b025c"],

Cell[CellGroupData[{

Cell["\:5217\:8868\:ff08\:7eed\:ff09", "Section",
 CellChangeTimes->{{3.77651583150215*^9, 3.776515837112117*^9}, {
  3.77657891325994*^9, 3.7765789233767347`*^9}, {3.788537166090721*^9, 
  3.788537167857051*^9}, {3.7900141058540096`*^9, 
  3.790014113371707*^9}},ExpressionUUID->"1628c2e1-6c7e-476b-83c0-\
72a54f7b7f2b"],

Cell[CellGroupData[{

Cell["\:6784\:5efa\:5217\:8868", "Subsubsection",
 CellChangeTimes->{
  3.779799317035995*^9, {3.79000107903529*^9, 3.790001079397914*^9}, {
   3.7900141183978405`*^9, 
   3.7900141225804377`*^9}},ExpressionUUID->"19a5b6be-c7c3-4c73-8d1e-\
bf1d033dba77"],

Cell["\:6709\:8bb8\:591a\:53ef\:4ee5\:5feb\:901f\:521b\:5efa\:5217\:8868\:7684\
\:5185\:7f6e\:51fd\:6570\:ff1a", "Text",
 CellChangeTimes->{
  3.3824524252213373`*^9, {3.514308595622859*^9, 3.514308595844242*^9}, 
   3.514662627149618*^9, 3.514662723834064*^9, {3.688310334442947*^9, 
   3.688310346459298*^9}, {3.688315814561692*^9, 3.688315821206067*^9}, {
   3.732013596656433*^9, 3.732013613518259*^9}, {3.7350701127837543`*^9, 
   3.735070120559668*^9}, {3.790001086630645*^9, 3.790001087327375*^9}, {
   3.790014136878256*^9, 
   3.7900141575334373`*^9}},ExpressionUUID->"e17923e6-8510-4485-8727-\
97c35f70e833"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.68830743361726*^9, 3.688307437793874*^9}},
 CellLabel->
  "In[365]:=",ExpressionUUID->"ef65f1ca-f00e-4fb2-beb2-91deeec1573d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.813794070394846*^9},
 CellLabel->
  "Out[365]=",ExpressionUUID->"3fa08382-90a8-4554-8e2f-1d50fb6d7095"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"i", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6905660826367702`*^9, 3.690566083795231*^9}},
 CellLabel->
  "In[366]:=",ExpressionUUID->"dedf9d84-9740-44d4-a65f-4292e195df17"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.813794075508774*^9},
 CellLabel->
  "Out[366]=",ExpressionUUID->"cac5dcb2-6fe7-4f70-b308-a3f92ec78659"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomReal", "[", 
  RowBox[{"1.0", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.690294973027136*^9, 3.6902949785850353`*^9}, {
  3.690568696693055*^9, 3.69056870056142*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"d05fa0df-78f5-4e52-971f-dd34b1889486"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.6216316224120118`", ",", "0.36376904044454883`", ",", 
     "0.3921717354423164`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9554966202077353`", ",", "0.3454312581215455`", ",", 
     "0.6352769589483995`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.813794085615119*^9},
 CellLabel->
  "Out[367]=",ExpressionUUID->"0d5bbff4-1bce-4ed5-b624-ada20eae1e24"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:5217\:8868\:957f\:5ea6", "Subsubsection",
 CellChangeTimes->{
  3.779799338614122*^9, {3.7900034120793877`*^9, 3.790003412439127*^9}, {
   3.790014164242598*^9, 
   3.7900141712425947`*^9}},ExpressionUUID->"b9316f49-624a-4937-98f8-\
7b18be1f0bc4"],

Cell["\:5217\:8868\:6709\:591a\:957f\:ff1fLength \:53ef\:4ee5\:63d0\:4f9b\
\:5217\:8868\:4e2d\:7684\:5143\:7d20\:6570\:76ee\:ff1a", "Text",
 CellChangeTimes->{
  3.779799348187228*^9, {3.7900010983421507`*^9, 3.79000110518782*^9}, {
   3.790014203450164*^9, 
   3.790014236673153*^9}},ExpressionUUID->"253adfae-990e-4079-bc4b-\
e31d1e6e0859"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "42", ",", "3.14", ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False], ",", "\"\<hello\>\"", ",", " ", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["y", "3"]}]}], ",", 
    Graphics3DBox[
     {RGBColor[0, 1, 0], SphereBox[{0, 0, 0}]},
     ImageSize->{37.09619946984732, Automatic},
     ViewPoint->{1.3, -2.4, 2.},
     ViewVertical->{0., 0., 1.},
     ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.688311396923636*^9, 3.6883114032350492`*^9}},
 CellLabel->
  "In[368]:=",ExpressionUUID->"6620406b-cbf9-40d4-bfbd-375ddc9019dd"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.813794093852972*^9},
 CellLabel->
  "Out[368]=",ExpressionUUID->"bdd15253-3fd3-4a5d-89f7-8cca4f08b7b7"]
}, Open  ]],

Cell[TextData[{
 "\:5bf9\:4e8e\:5d4c\:5957\:5217\:8868\:ff0c\:4f8b\:5982\:591a\:7ef4\:6570\
\:7ec4\:ff08\:6bcf\:4e2a\:7ea7\:522b\:5177\:6709\:76f8\:540c\:6570\:91cf\:7684\
\:5143\:7d20\:ff09\:ff0c",
 StyleBox[ButtonBox["Dimensions",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Dimensions"],
  FontWeight->"Bold"],
 " \:51fd\:6570\:53ef\:7528\:4e8e\:786e\:5b9a\:6bcf\:4e2a\:7ea7\:522b\:7684\
\:957f\:5ea6\:ff1a"
}], "Text",
 CellChangeTimes->{
  3.7797993664694757`*^9, {3.7900142737135506`*^9, 
   3.790014304733122*^9}},ExpressionUUID->"57b796bb-2707-4b3b-9855-\
b9cdcb6a7a68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"1", ",", "1"}], "]"}], ",", 
      RowBox[{"f", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"2", ",", "1"}], "]"}], ",", 
      RowBox[{"f", "[", 
       RowBox[{"2", ",", "2"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"3", ",", "1"}], "]"}], ",", 
      RowBox[{"f", "[", 
       RowBox[{"3", ",", "2"}], "]"}]}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.688312233181231*^9, 3.688312237189331*^9}},
 CellLabel->
  "In[369]:=",ExpressionUUID->"c271da09-9008-4afc-9a28-986e4610deac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.813794122777213*^9},
 CellLabel->
  "Out[369]=",ExpressionUUID->"cd133d0f-f153-4212-8e2f-ee266e8f76c8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7885382527381277`*^9, 3.7885382606669483`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"1d2029d4-058d-46e8-a985-d514a8336e38"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e12ae8a2-55dc-43d4-ad70-82d0a2dfa9bf"],

Cell[CellGroupData[{

Cell["\:5217\:8868\:ff08\:7eed\:ff09", "Section",
 CellChangeTimes->{{3.77651583150215*^9, 3.776515837112117*^9}, {
  3.77657891325994*^9, 3.7765789233767347`*^9}, {3.788537166090721*^9, 
  3.788537167857051*^9}, {3.79001431365302*^9, 
  3.790014319539649*^9}},ExpressionUUID->"695c9be0-1d31-480e-885b-\
69ab6a528f6c"],

Cell[CellGroupData[{

Cell["\:63d0\:53d6\:5217\:8868\:4e2d\:7684\:5143\:7d20", "Subsubsection",
 CellChangeTimes->{
  3.779799387501699*^9, {3.790014333424704*^9, 
   3.790014342004795*^9}},ExpressionUUID->"b048543b-1502-4c4e-926e-\
dbadc99dce23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myList", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7885367890463715`*^9, 3.788536789991878*^9}},
 CellLabel->
  "In[370]:=",ExpressionUUID->"4d6d35c2-efd8-4e76-a5a2-6ab2ee4ec53d"],

Cell[TextData[{
 "\:83b7\:53d6\:5217\:8868\:4e2d ",
 StyleBox[ButtonBox["First",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/First"],
  FontWeight->"Bold"],
 " \:6216 ",
 Cell[BoxData[
  FormBox[
   ButtonBox["Last",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Last"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"ab34f653-de5a-41c3-9f69-9ea81c63a926"],
 " \:5143\:7d20\:ff1a"
}], "Text",
 CellChangeTimes->{{3.7797994008666267`*^9, 3.779799415354527*^9}, {
  3.7900143510466366`*^9, 
  3.7900143677580576`*^9}},ExpressionUUID->"28c6b294-5b4a-4b7e-a6de-\
ee5db584a2dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"First", "[", "myList", "]"}], ",", 
   RowBox[{"Last", "[", "myList", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.688313663372109*^9, 3.688313669078315*^9}, {
  3.7885367931324797`*^9, 3.78853679895891*^9}},
 CellLabel->
  "In[371]:=",ExpressionUUID->"fd6cd8d0-79c5-4fbd-b3ee-6ee262fe9247"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "e"}], "}"}]], "Output",
 CellChangeTimes->{3.813794151215412*^9},
 CellLabel->
  "Out[371]=",ExpressionUUID->"af328ce3-6371-4ef5-9f3e-79cfaa139129"]
}, Open  ]],

Cell["Part \:51fd\:6570\:662f\:4ece\:5217\:8868\:4e2d\:63d0\:53d6\:5143\:7d20\
\:66f4\:901a\:7528\:7684\:65b9\:6cd5\:ff1a", "Text",
 CellChangeTimes->{
  3.7797994250617943`*^9, {3.790001119876832*^9, 3.790001120726534*^9}, {
   3.790002158161358*^9, 3.790002162801066*^9}, {3.7900143765440483`*^9, 
   3.790014420864664*^9}},ExpressionUUID->"d50a252b-cf07-4a21-a4f3-\
34e00cff8d65"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", "2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.688312490071724*^9, 3.688312517509865*^9}, {
  3.688312972854784*^9, 3.688312973764554*^9}},
 CellLabel->
  "In[372]:=",ExpressionUUID->"f76e5ab0-ba08-4f96-b652-18a38f39967c"],

Cell[BoxData["b"], "Output",
 CellChangeTimes->{3.813794161133209*^9},
 CellLabel->
  "Out[372]=",ExpressionUUID->"32cf4b2c-81af-43c7-8549-105186909317"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"myList", "[", 
   RowBox[{"[", "2", "]"}], "]"}], " ", 
  RowBox[{"(*", " ", "\:7b80\:5199\:5f62\:5f0f", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.78853687414487*^9, 3.7885368803912044`*^9}, {
  3.790014429247885*^9, 3.790014433861226*^9}},
 CellLabel->
  "In[373]:=",ExpressionUUID->"a4e901d5-cadd-4985-b3b1-313bc18aa884"],

Cell[BoxData["b"], "Output",
 CellChangeTimes->{3.813794165529647*^9},
 CellLabel->
  "Out[373]=",ExpressionUUID->"9660e1ce-32a0-49c7-ad30-faa4afb23d00"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"myList", "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"myList", "[", 
  RowBox[{"[", 
   RowBox[{"3", ";;", "5"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"myList", "[", 
  RowBox[{"[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.688313217103203*^9, 3.6883132822441397`*^9}, {
  3.7831885476791162`*^9, 3.783188558216888*^9}, {3.7885368507713633`*^9, 
  3.7885368839596353`*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"8c6f8189-660f-46db-902f-d0f360404909"],

Cell[BoxData["e"], "Output",
 CellChangeTimes->{3.81379418294732*^9},
 CellLabel->
  "Out[374]=",ExpressionUUID->"bbb178f1-5599-4553-bf53-48627cb92ae0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"c", ",", "d", ",", "e"}], "}"}]], "Output",
 CellChangeTimes->{3.8137941829625893`*^9},
 CellLabel->
  "Out[375]=",ExpressionUUID->"b723d1f0-96bd-46da-b849-697913d5b339"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "d"}], "}"}]], "Output",
 CellChangeTimes->{3.8137941829744596`*^9},
 CellLabel->
  "Out[376]=",ExpressionUUID->"828a3a2e-46e4-48cf-accd-2dbf42d811de"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:4fee\:6539\:5217\:8868", "Subsubsection",
 CellChangeTimes->{
  3.779799387501699*^9, {3.78853724006496*^9, 3.7885372434379416`*^9}, {
   3.7900144438015366`*^9, 
   3.7900144513931937`*^9}},ExpressionUUID->"8c90e850-75f6-449a-b2f8-\
393908a3ece7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myList", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7885367890463715`*^9, 3.788536789991878*^9}},
 CellLabel->
  "In[377]:=",ExpressionUUID->"9621743f-b3ba-4630-bd0f-322545afc1ee"],

Cell["\:901a\:8fc7\:4f7f\:7528 Part \
\:51fd\:6570\:4fee\:6539\:5217\:8868\:ff1a", "Text",
 CellChangeTimes->{{3.788537268756259*^9, 3.7885372837621775`*^9}, 
   3.790001126474209*^9, {3.790014547357272*^9, 
   3.7900145650801344`*^9}},ExpressionUUID->"f6971c42-0e3d-4e09-b26e-\
e0bb56aaac0f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"myList", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", "b1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"myList", " ", 
  RowBox[{"(*", " ", "\:53ef\:53d8\:6027", " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7885372859353666`*^9, 3.788537332577804*^9}, 
   3.790014686059142*^9},
 CellLabel->
  "In[378]:=",ExpressionUUID->"ef17beef-850e-48a3-be30-03d995c5657b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b1", ",", "c", ",", "d", ",", "e"}], "}"}]], "Output",
 CellChangeTimes->{3.813794214687475*^9},
 CellLabel->
  "Out[379]=",ExpressionUUID->"ebc6a570-7050-4ac5-bc46-89c9a4c779a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"myList", "[", 
    RowBox[{"[", "4", "]"}], "]"}], "=", "d1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"myList", " ", 
  RowBox[{"(*", " ", "\:53ef\:53d8\:6027", " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.788537467901016*^9, 3.7885374694877415`*^9}, 
   3.7900146934639044`*^9},
 CellLabel->
  "In[380]:=",ExpressionUUID->"1606a273-caae-41b5-81f4-b664afef7a07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b1", ",", "c", ",", "d1", ",", "e"}], "}"}]], "Output",
 CellChangeTimes->{3.8137942345860853`*^9},
 CellLabel->
  "Out[381]=",ExpressionUUID->"d1852701-70d2-4478-9589-73706b6847ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{"myList", ",", "x1"}], "]"}], ";"}], " ", 
  RowBox[{
  "(*", " ", "\:5c31\:5730\:4fee\:6539", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"myList", " "}]}], "Input",
 CellChangeTimes->{{3.788537380185484*^9, 3.788537417052919*^9}, {
  3.7885376354847293`*^9, 3.7885376426744723`*^9}, {3.7885377145543113`*^9, 
  3.7885377186105113`*^9}, {3.7900147267713614`*^9, 3.790014728702237*^9}},
 CellLabel->
  "In[382]:=",ExpressionUUID->"5f99c13f-5b1a-49bd-932c-7c2c2aaaf19b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b1", ",", "c", ",", "d1", ",", "e", ",", "x1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.813794245071876*^9},
 CellLabel->
  "Out[383]=",ExpressionUUID->"fa43822b-df3c-463a-9832-5362ca1b3400"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PrependTo", "[", 
    RowBox[{"myList", ",", "y1"}], "]"}], ";"}], " ", 
  RowBox[{
  "(*", " ", "\:5c31\:5730\:4fee\:6539", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"myList", " "}]}], "Input",
 CellChangeTimes->{{3.7885373886628537`*^9, 3.7885374382482567`*^9}, {
  3.788537644595338*^9, 3.788537650275195*^9}, {3.7885377224013786`*^9, 
  3.788537724714196*^9}, {3.790014737392671*^9, 3.7900147387229123`*^9}},
 CellLabel->
  "In[384]:=",ExpressionUUID->"e0aebb74-2c7e-4ee7-8dc5-ed24fc8003d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "y1", ",", "a", ",", "b1", ",", "c", ",", "d1", ",", "e", ",", "x1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.813794255960446*^9},
 CellLabel->
  "Out[385]=",ExpressionUUID->"29cce0c3-c9ff-40c3-be2d-22e8e28ff8d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Append", "[", 
   RowBox[{"myList", ",", "x2"}], "]"}], 
  RowBox[{
  "(*", " ", "\:521b\:5efa\:65b0\:7684\:526f\:672c", " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"myList", " "}]}], "Input",
 CellChangeTimes->{{3.7885376581002684`*^9, 3.7885376768501596`*^9}, {
  3.788537707640831*^9, 3.788537708907406*^9}, {3.790014749843545*^9, 
  3.790014756292855*^9}},
 CellLabel->
  "In[386]:=",ExpressionUUID->"90ec3a7e-858c-46ac-965e-506626830fb6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "y1", ",", "a", ",", "b1", ",", "c", ",", "d1", ",", "e", ",", "x1", ",", 
   "x2"}], "}"}]], "Output",
 CellChangeTimes->{3.813794263669842*^9},
 CellLabel->
  "Out[386]=",ExpressionUUID->"043fd53e-13f9-40df-b28a-432fbdb29555"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "y1", ",", "a", ",", "b1", ",", "c", ",", "d1", ",", "e", ",", "x1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.813794263684251*^9},
 CellLabel->
  "Out[387]=",ExpressionUUID->"71430fcb-2448-40c1-9cad-3533bdccceac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Prepend", "[", 
   RowBox[{"myList", ",", "x2"}], "]"}], " ", 
  RowBox[{
  "(*", " ", "\:521b\:5efa\:65b0\:7684\:526f\:672c", " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"myList", " "}]}], "Input",
 CellChangeTimes->{{3.7885376982230053`*^9, 3.7885377046687837`*^9}, {
  3.7900147648119926`*^9, 3.7900147678402443`*^9}},
 CellLabel->
  "In[388]:=",ExpressionUUID->"274b9991-bba9-4b4e-94bc-21b6d48437e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "x2", ",", "y1", ",", "a", ",", "b1", ",", "c", ",", "d1", ",", "e", ",", 
   "x1"}], "}"}]], "Output",
 CellChangeTimes->{3.813794302089443*^9},
 CellLabel->
  "Out[388]=",ExpressionUUID->"71ed2834-31ac-4e7c-bebd-883971237ed1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "y1", ",", "a", ",", "b1", ",", "c", ",", "d1", ",", "e", ",", "x1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8137943021040277`*^9},
 CellLabel->
  "Out[389]=",ExpressionUUID->"90ffe7f2-8f58-4e49-8cda-f9569481d4d1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7885382527381277`*^9, 3.7885382606669483`*^9}},
 CellLabel->
  "In[390]:=",ExpressionUUID->"e6099bc0-7e05-4a61-bd05-24a68545010c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"71b9bc26-144a-4051-9c72-f2ff0b60b204"],

Cell[CellGroupData[{

Cell["\:5173\:8054", "Section",
 CellChangeTimes->{{3.776515928584036*^9, 3.776515933229443*^9}, {
  3.790014777473731*^9, 
  3.790014780525982*^9}},ExpressionUUID->"09137054-7071-438f-b818-\
144aa5300101"],

Cell["\:5173\:8054\:662f\:542b\:6709\:952e\:503c\:5bf9\:7684\:5b57\:5178\:6570\
\:636e\:7ed3\:6784. ", "Text",
 CellChangeTimes->{
  3.779799528400559*^9, {3.790001135654306*^9, 3.790001137942663*^9}, {
   3.790083435602784*^9, 
   3.79008346548101*^9}},ExpressionUUID->"34263e4e-5716-4e5f-a221-\
d9ecd145d9d7"],

Cell[TextData[{
 "\:5173\:8054\:63d0\:4f9b\:5e7f\:4e49\:7684\:7b26\:53f7\:7d22\:5f15\:5217\
\:8868\:3001\:5173\:8054\:6570\:7ec4\:3001\:5b57\:5178\:3001\:54c8\:5e0c\:56fe\
\:7b49. \:5173\:8054\:5c06\:6807\:8bb0\:7684\:6570\:636e\:8868\:793a\:4e3a ",
 StyleBox["key \[RightArrow] value pairs",
  Background->RGBColor[1, 0.9, 0.8]],
 "\:ff1a"
}], "Text",
 CellChangeTimes->{
  3.7320148948564377`*^9, {3.734192338336282*^9, 3.734192341817916*^9}, 
   3.743512799369309*^9, {3.7435138245088577`*^9, 3.743513827612362*^9}, {
   3.790001150678862*^9, 3.790001211315238*^9}, {3.79000125769293*^9, 
   3.790001323117749*^9}, {3.7900835134348545`*^9, 
   3.7900835845059166`*^9}},ExpressionUUID->"571ebe18-8060-4fe9-b0c9-\
bacb977363be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Association", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "1"}], ",", 
    RowBox[{"b", "\[Rule]", "2"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.619437928034724*^9, 3.6194379363783903`*^9}, {
   3.619437986627963*^9, 3.619437989194017*^9}, {3.6909110773671646`*^9, 
   3.6909111120572977`*^9}, {3.6909111869994583`*^9, 3.690911198896631*^9}, {
   3.6909117889418955`*^9, 3.6909117979605217`*^9}, {3.6909124367010527`*^9, 
   3.6909125271139164`*^9}, {3.6909132666411104`*^9, 3.690913272726993*^9}, {
   3.69091331454539*^9, 3.690913320537675*^9}, {3.6943779098135347`*^9, 
   3.694377912318535*^9}, 3.7320149211350813`*^9, {3.7883863819184217`*^9, 
   3.788386383403489*^9}},
 CellLabel->
  "In[392]:=",ExpressionUUID->"1b7f038f-8696-4f41-af8f-a9a260fd2703"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "2"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.813856541632725*^9},
 CellLabel->
  "Out[392]=",ExpressionUUID->"9f59f1cf-00d1-4f1e-9304-923d7ddc44e2"]
}, Open  ]],

Cell["\:8fd4\:56de\:5217\:8868\:ff1a", "Text",
 CellChangeTimes->{{3.7883897474280643`*^9, 3.7883897506870584`*^9}, {
  3.7900836159517946`*^9, 
  3.7900836264083166`*^9}},ExpressionUUID->"a01a48d8-69a4-4166-a0ba-\
e1112671110b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "1"}], ",", 
    RowBox[{"b", "\[Rule]", "2"}]}], "\[RightAssociation]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.788389755363058*^9, 3.788389758062937*^9}},
 CellLabel->
  "In[393]:=",ExpressionUUID->"0c474cc7-695f-48e0-8090-601ce2f2beb0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8138565492970448`*^9},
 CellLabel->
  "Out[393]=",ExpressionUUID->"d671eeaa-b861-4a39-badd-b5b9156311b4"]
}, Open  ]],

Cell["\:5173\:8054\:53ef\:4ee5\:4f7f\:7528\:4efb\:4f55 Wolfram \:8bed\:8a00\
\:8868\:8fbe\:5f0f\:4f5c\:4e3a\:952e\:6216\:503c\:ff1a", "Text",
 CellChangeTimes->{{3.7320149569398212`*^9, 3.7320149801210938`*^9}, {
  3.734192355981023*^9, 3.73419235937733*^9}, {3.743512803269225*^9, 
  3.743512808516686*^9}, {3.743515796926306*^9, 3.7435157971904793`*^9}, {
  3.7900836516876717`*^9, 
  3.790083677882434*^9}},ExpressionUUID->"21050ba2-1d38-4447-ba0e-\
aa38f3e8ad6b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"assoc", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "1"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "100"}], ",", 
    RowBox[{"4", "\[Rule]", "200"}], ",", 
    RowBox[{"\"\<cat\>\"", "\[Rule]", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
35D/3Zc3/+WvfvCPv/js3331/h+9M/r0IPc7j1o/etZ5bxT58knxrT3viwPX
ixPXxchwdWR8drP6+Mzy+Gj10aHj0ZFztKVPxRnAjMJR1maI6fKRrU6M00W8
dcOMNBpkuFaQZu1sOEQqFLmgjqUyxN5AcvXIunsgjafh6RwWtK39Q329KTAY
H2i1D6pV5VZvZX2DCLZxKMaKJTiBMMUfJCUSDLBpC3ku6C+nJ+6zU0+jqgj6
iQ4b3KiaC63RTcIlHu41KfWuR4/L+kTpMqE9FJSbzFSBcBtUmtxsjlFviBpN
KfhNCgUWSGLjsaXfVwwHqnKVVd3iNXfF3T1Ze1vSbAtAXaoWWYUMtZil5dMU
kEjzRVpnKG0ORaUeq74raOyIAPHeoazYpafrxHKfDiS8cy4fXSp3L2R7Vwpg
hZ1DdqmPB0t155z/+APzi4/tj962nVytVKrCSIheTKqSflnQxrNJ8SYOPKhj
7KTsT7ci749SHx/lXp2Wf/rh+E8+O//Zpxd//cN3/s3Xr/7jr370f/79L//D
P/udf//z7//Dz7//3/7+l//0f/3Hf/yjV985rP7TP/7VP/1v/+q//ssf/09f
f/zr7z/70dPB96+bf/CiDy6A9w+jXzzNvxh799ua8z3TzYllPFLtbcsux+aL
A+vZweqwp81ludmsMFeSRdPCzSjX4SW7PdRYlJ9Ly5JRXnidvukmVEvCWk2Q
y9FicXSrzX3ydO3sQp/Joat1yt6+4vpm7fzclssxwiF8rSoFsDwb6HSO3eqq
+gNtf6DubSm7XfnWlrzTkXQ6svNT56PrjUpRYDZMK6R3tLJJmxJmk8AsomW7
DOEzEGJ2JlAHOL3tXUmtzx8cakGlzZbZhRpo2apinZ/IUCtNfrbECMXR6SzJ
H4YFs+h8lzEYqw7PzfvHxk5PnIyDojoXDWNiESxokYEoMluh5VqMTINW6LJB
ZB0cq/cu9UCM5S1mbZvTO5Rsn8p2LwBBBeA4PJO09tjlLWJ9SO0fcc6ea56+
Z336ztqT565OWxELMQoxRdIryXqVEYvAISUEtPRB3Pq4G3r/IPO9x+0vLtu/
/O7jX33v+dcfX/7ii2c//+LFzz5/69c/fvWff/3H/+Vvf/n//uPf/dP/+u/+
6X/5H/7zn/3o3/7k1T/946//67/46f/49Sd/+unNn31+85O391+dVn/0vP+j
lwOQS3/3ncbL481BRXq6YwLgtrvCQU+4N1AOu/Ldvmaroy4WhZkcMDKhN8h0
eKm2NfyqHe/10IIbjIiPmYuKWmX14Z6115OBVRaOICplGiD49tvu/jZ/e1tw
fmF69x3/tz+KHY9X2m1puyH3rsM968B3hAdjE5DneGzc39f1+7JeT3J1tQY4
Dgea4/EquCpWLRCt6t6Kdp6JnrBK4SmPML0u8plJqwp4okGuAqXsSys7wtpQ
ku9wo0V6OE8ttkXJMssXx0Xy5EASsxGDxwpET3hxMw3Nd2mjM+31i7XHb7mP
z8ylCtPnWwoG4aEI0utb9AaWMuXb9zhlm/RMi1rp88Di3b/Qbx8pO/uS/pFs
50K9e6kaP9YfPTEcPdKDYNMeccsdIpjGgDa+ll480928sD594d7qqqKb1EJE
ktuUJdaEGac0pGeC6YSM5/WNj06Lv/ji/OuPTv/s+89/8sHpq0f9z24GT3dL
T/dqX3324vfeu/6bH3/xP//513//J7/31Qc3X71/+evf/fbPPnr8k3ePv/7w
7IvL3u8+2/3h89HHx9Ufvtj+6YcHn12VPr3OvTjcPO6bjrdNZ3um00PD2ZFp
dyBvtwRADq22PJvlBsP0dR/FsopesWHMFuwKGBPSqFkEDpWLCsbDtfOjtX5P
3qiwsxlirUx7/Hj1k28HLi4M4335kyf2jz8Mf/4qc32+OthSDDqKTR/C513e
3lacnID2pBjtqnZ3lN2OcKsnvrq0g5/T7yn3R+Z2VR7xk9yrMLtpmYWdsMoR
CY8g5uI5tTijaGmzgk1tMfI7/FSbFSqT/fnfvNElT4nX2JEybSONi1eoyRot
VaeWtrj+DDxRx1R3mPvX6kfvrr389saTl67hgTxfpRbKtEyJFIzDAwlosc0A
Wks1iMD76gPe1oHi/+PpPYMbybNsv1HoxVNIqzUzO90z3dNd3tB7770vek8C
IEB474HMhEt47z1h6L33ZLGKZdtXmzE9dmcnVorVewrtPrkXoW/S5XSEIm5k
/JEAWSz88tx7TiIBqMw3oxMIapyNuKdJ46zXexqMviYgaHI1YMZSKZYrQXMU
mjy9o8LiqXH5WoOhAVRWSxx9zCVWCogNyGy3gTeqIHbQe8vY/ZXC0VoLb3An
hGwFkHdn6WdrHr+GbhJOKWgD7Il2GXXQpeKeLAaebyW+udz43cu937/a//Z0
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
KJlCSY3FPuQNTGs0HVRqHnkmi8cvpTNyZfIqjbpFyC+1GXswUQ3CrUBYFQZR
Y9g4mnaS/fiIXtqu4jcq2HUiRplMUoXjzUxmFp2exf3/SjrvqDbTM+17N5NN
NpOcbHYyM56xx73Qi+lgwAYbN2xselfvvfcu1CVASCAEAoTooiN676a6jG08
tmc8fZLMnE2ym6/t98f33STn3Oc9Qocj6Ty/57rv65L0viJHUvBhSvEVSI4y
esJgK3G6j9NSW2qruv2PH8JGk86Xkk+ytDEEYQiefaHKklVluM7lxCglVxnE
WAYhCV+emB7/UULk8aBT78dHBl9NjL6eGFRyO0HOqhzpcgx312NKb50++ovT
H7zz7pEjNxNP70y2fL83dDDV+Pls/Uab5EWg+vPV9p8OZl6tdL3dHPhmZ+xv
r9ffbox+uzO53u/qtoll2Hv1cjyUkVuio+cO1otn27UzrepXi+1fb/btDNS+
mmv785PxlzMt3236P5tt/Xq1+4tFHww7QAZJ89GA/e2sb9jCVZRdL447ib0W
Sc9JLksPLko5X3E1mFuS9jTg+nq166ed/j9udkAM7FKWL9YyZozEpWr6hpO7
YKWOaFA+Xl4N+qq+NMmOy4KqwWTB7Ft2CtdcsjE9db/D3MItc1LyRg2MBYd0
qV5G5sUUoU9h6GF4RgSCGHz4YT0umECLpjLiUdhQDCaczb4sk2bxeelUcgIB
HwX3s/kpbA44mStV8pugPgklWUxMrOJcP5SeIk/NucknpbIJoLIEZHkYnZUo
01ynM2KYzFgwrlzKJRU3FTKjVX5joIUw1EFtriu1Gu6JRKk4fEgl4QJeCMkl
GC8MY8riaNwoDOY89ASHpUzNv8fEXMUWp+XdjEcW3s67nXknKyM5Jjwm+JOM
pCBsxV2jiquVs29dT/rwdz//9TtHjv/bkfMf/JPHyPzLwfSftnoe9xtWm3mv
x2verHifL3lX/dWfLXd/+XD47cYwsHs80dljk4mQ2WpSHq0gFXEjUk2+L8Hc
aNETx9zSP+6P/Lg38mjE+cVSx18/nfxxd/i7jb6DqeY3895vV7ofD9YF7ILZ
Rvkjf+1uj61VhFWWZ3HupdBux/Pyr9JzUvLiz+UnnRMjb+0Ou/7P6+Uvlzu+
XW3f6la3y0u7FWUBHbpbkDdZhX7UIgOCDvw1ZW60/EGUi5KtLIirwd5Ydomf
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
RO3h6Uv/HxmiWBw=
        "], {{0, 100}, {150, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "RGB", ImageResolution -> {72, 72}, Interleaving -> 
        True, MetaInformation -> 
        Association[
         "Source" -> "http://www.eol.org/pages/328605", "URL" -> 
          "http://www.wolframcdn.com/waimage/hset050/ac9/\
ac99116210e54c705c59c5a92e61cb14_v001s.jpg"]],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{150, 100},
      PlotRange->{{0, 150}, {0, 100}}]}]}], "|>"}]}]], "Input",
 CellChangeTimes->{{3.6943780858475347`*^9, 3.694378133153535*^9}, {
   3.6943784461010485`*^9, 3.694378447815299*^9}, 3.6943784912156034`*^9, {
   3.694378615486861*^9, 3.694378616159332*^9}, 3.694379649005863*^9, 
   3.73419257457673*^9, {3.734192672155973*^9, 3.734192673598111*^9}, {
   3.734192717580998*^9, 3.734192722110608*^9}, 3.7341930022516727`*^9, {
   3.7894080967256794`*^9, 3.7894081009025*^9}},
 CellLabel->
  "In[394]:=",ExpressionUUID->"b8373890-75c2-42dd-9c0d-95bf579ba402"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "100"}], ",", 
   RowBox[{"4", "\[Rule]", "200"}], ",", 
   RowBox[{"\<\"cat\"\>", "\[Rule]", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw8uwdwa/l55Um11P36BT5GMCDnnHPOiQAIIhEEiJxzzgQIEgxgTi/366xO
r1tqSbYsW2qrbckay3LUJHvHs7MzXs/UbNXWVs3s1lZt7VTtev+Uprbq4y0Q
IPlY93fPd87hxcPEK670axMTE403wcEV62jq9VjPPQ0+WS83cplyKrlSbqYy
qbo4/k3wZBJ8PAMft491zjmTG2LzLLu9iKAXH1nHR5zYsB2R8ZMLUWo2Tvb7
l22uByvrd+2RGU8KYt+cDqTgsQI+nMWE0rhIlhBMET0hZDBJSRTYiTw/EKcH
IvRYihtJcDYCZH+A4vaiPBvoRIZea4mbPVGpzsqUCNU2s1AjpUvoVBGVKWMK
dUKxQcw1icESItLCZbrUTIscK+GieUymSAHfUq1zShVmocrOVVjRNNEVgnki
iEieHE2SAkG0dW1eqbsr19xVGGdUpnmJYU5uhgqNi3w9hGuE8EwLXPMi37Yk
tiNkNpTQAOVplwV6mFiP5KuhHNkSW7rIli6xJIsM4SKVN09izxGYMwTWPJEN
YUvgHCmCJ8eA4UqxLBGKxoNTOFAcbQFNnsOQF3DUJSxlGY6bg2JmwHEO9hBB
WMKQlqHo2SX4QzR+gcnGCkQUkYDIZqLYVCiLskzGTBFRkzI+xuNUs4XkB4t3
IYjpJdTU3NK30NgHBMIkiXiPz5wPeCUreqJSAlPLEGIeRAJ+N+pDlgjLVzHp
AvwM9C4CM01lIsw+qMUHs28g3T60z4sLegghBy5oR5VirGqak08xNoMI6/q0
yfPA5J9cCU46grPBNCJeJERy+HAGH8uTojlqIEkIp2mpEjdV4gcTjGCUAQhG
k1x/iOr0oq2OJZtzMRAjFGqcaodfbLCyVVK1yyi1qLkaPlvFFZukSoda69Er
A0asjo80CYkmMVknxMv4RImYKVMLVUahyswUqdkSrVBnpcoMfxK9HkMFM4RU
jp5M0QJB7Kpj0WRb0FsX1eZFmR4i0kHEhkWxeVlsgYqsUKFlWWiDydaQgKBA
v8zVLImMCLkZKzGgeAooS7LAV8LBcGVwumABEMQzpgnMOTJngSWGMUVQpgg8
D6XxYFQuFOADg6cvAoJIwhyKOI/Azy+jbxHAsLPLmFkMBU6kIwFEFA6CIy1T
aAg6E43DzHJYaC4LScLMULDTCiF+RcvSqVlo4tLdmW/NQu/PLt+dmf8GjjDF
Zi5KBFCTluBzC+wrNNcqC3Bk0yb5nFkeb1GlZ8r0LDoPMwmZWIDdwRFnLEGs
LYBd3cSv+XAuD27djdtwYH0ObNhLivhJGxsYm2tBtzaldU+qvZMa731HCBLM
ohNlSrRAjOaIyRI1VWbF8rRolpEu87IlQSTJBASjSQ6YzRjD6obqVmd0q9PO
ADxaoGQbzEyDlq6Ty1vMYpeeb1MLHVqlz2ru8tt7wvaBKNdnpbYYqRY13aSA
r8w16IA4mHyNkcgTkwVSsc0pdfmJKjWQxW2mMO2OrNdRNmvSbIYTDtM3/GSn
h2BxYGXaBaUJrraiVTa0zIoEKEUrtzQlFgRXt8hRQ8QmuMqKk5vRAhWULYVI
9RiZASvVoHnSZSpnlsh4SGHN0fhAlcvgSObME1mzeMYswEpkLpBYS4AgijQL
w05DMVOA3TzsPgT+AHCch0/CcPOAC4qwiAIP8BA0dh6BmkEjp6jkZRp5kUKE
yIS4VbNAK6Pg0FMzkDden5yYg96bmnttcnoCi3/AoM0KOAv2FbpRg7MZyMmw
0rXKYNPuAxlqNTi+GCFU4dkC5Axk4uH0BBz1rZUgAYzVT7R58TYXds2JdTsI
XtfteFzYFfuSyjwltTyQOx/KPNNy931bEBLMYJMVaqwI1EcEckhX2PECPZZj
AA1mivxIkh6IUkMxZiTBBnq0+xF617zGMWXdXNxIY8JlUqSCj1YJYE+mOxRw
zPcZpW1ubSRsHcrbY0VzLK8fiCs7wnKfV+yywVS3BPWBqNzigNUNhF/osOo7
klyPDX5UMIPrdGSDjqpTU+Qz/EiIHtikbvpp3g2a3oLUWzFaK1ppgctNcJkZ
CiTJ1c7x9Yss9TxLOcfXLUkMCKEWylMsgQH45EacXIcVyGF03jyFPcPgLXLF
cICPyvvvqsTRZ26HNoenz2OpcwjCNCAI5nYBQu8BEQGOU4tvzizfg8Aml5DT
cPQMGBhiamn5PhEPWYS8gYTdUyvom+taQJBBnJ+fmbhzf+L1BxPzS3cAvunZ
CRJpikqcZJDvG9RYDu2+RgaLB+UOK43PmhJx5xVSGIcP4QiXWFzIzPzEg8kJ
OGzCHCSBsWxSbD7y6jrR6SGte+mbfkYyJQnHuA4fQWNfktrn5Ovzci8EQLQF
FsB5S1XpsSI5lCUCWQF8kSwlmqUnCqxkjhVO0Pxh4maEEokzIhlmIE9Zi8JX
NudXw4ueNNyXR4LxFxGhKiZcw8YapESLku4ys1vswkBQGopaY1XvRN091jRH
slKXV2hzqgN+Z19W3eIBWwxk0ckmpbTNz24xgzViMIdLJsnZGDW2SfTY4Tbz
kt0G9zjx3nWKw0my2nFaM1ymm1calrVWuMq8LNDMUKX3KZIHNNlDhmKaJp0i
ix7QxdNcJdiiy0CMIrBIgRtyZ+mcGXCihDIES7BMFywBjhQuhMSGABkCgljq
LJo8gyAAy5sGSkTgZxcQt2sQzAL84dzyfcjyvUXYAxjqNxBRD+GISSR8EhBk
0WG+dX1006IQkTCw+/DlNyenvnHv4cTDmYk33pyYn5ugU2eoxPss6iQfXDCI
CSF7etVEMKrRcuEClzFJwn+TSHodR/oWmzNFJn+LRb+r1yAtYZo9ynREWa4w
0x2grwcYwRAnGhPk8sp4VuyN0s0baN0GXB9EGuJoUxTpiCGiBVKqygT4vDGU
L4EBSeY3PkgFEOMZRihO9oUIAGI0QU/l2bmuIFQmeVJIgG8jh/DmoGA28jBf
AR4oo8JVfLROjtao0Rot3mAkmszKUNLcV3YP1Y1dabHDzbfYgGD3QFof8oEz
BosYQBzgi7bIvgpmM4+JJfCJMD7gRTqs81bznHMN7t8gBgO0DT/VtU402uBy
/W22MbuQJidCYYFQRG8QhXfI4rsAIkBJFNyjCO+zZHNMyQxLMs+RzLNFEI4I
whUtCsTLIjmSL7tNMiDPgHVK5S3dQrwVIDC7W4gYyjyBAZLMIlDiAmISLFI4
dh5ABAQXoPeX4JPLsEmAD42ZAT4ol9IAvoDPpFMwCMA0Ia8joPeRmOlF6N2Z
2Yk3Xp+AzE2QcPcwsG/QCW8SERPoxQkO7a5MMGdQoZxWmloGYzMe8HhTBgMm
n9dn0+qgj5dPqtei9PUE2wdSR4LjCzM3Q8xIjJtI8ZNpQSLDDyRZzjDRFsbb
k0R7lrSWJW7mKakaK1llr8cwqxtLwN38MUIwSY6mqXFAME2LJMj+IG4zhE+m
6PkqvzGUAFMDZ36zgAgUkZsFmD8PBcdoDQfiSrpNS7cZySYjXqPHa8xEnZVt
cotdYaUvqQxExR6vtMWv74jaB5LOobgwoIOtWxiy8ttMkHZ8FVSohAUhp1Sk
p1KkcBgbCuOjCWoizYqlmeEUK5LlbEQpJteSdnXO6Flc2YAa3Es81SRTfp+l
eCDUQaSmZSHwROUsUzbNkc+yZXM82bxAsSRVw5VajApc+Sq0XIcXa7A8OYIp
WvrtOiWyADUIkbmIp0MAPjIbRmTA0CQIHDcDxAiMD4qcAgIERxhyEggQi5uj
0mAqBdPrMQT8Fo2KjUVNL86/fjuQN4ikRRxxDk+cQaPuMekQLnMOj3pNyJrl
Ue+LmFN6GVQlWXSvMrIJ3bqD67YzkzFlpbhyfpzq1h2bLmZ8U+gJU3xxRijN
CYEEEqYHg+RomJaMs0olSRnEg6oonGOsp0iOJGEthbfFMYkGv9ARJatcRxBu
dMzYvIu+KB4IMJahAYKgMkSTlEAEDyaTZVUawtaOGMSVRBkbLSHjJVSkCCoA
HDwu9xjVAbs5FNW3xZWuoNDmF5qCQkuYqrDTde4txx6/ui1q7Ip/i2/rTNY8
FNQP+a1jUXWfH2uTgmAJ1/HlNqPcpOcqlCSIVQVyukgHsWozgU9XOcWuONPg
OaMonWtG55k2+eaNngWVbUGsnxXr53VrKNsmxbxOAhbJVsxI9Msi7ZJYvagw
IPUWvNlGMZmJGgNeu0KWG4gCJQoUjd8s0jkgQ5BRQSgFeYbIXAYESUw4kOF/
bxbERSR2DgyOtESk3A6LjZZIqetuvd2mADIEYlxeuANfvoeCT8Kh9+GI+yTK
vFRC0OvpPrfCZeepxHC3jbVhZwXd/JhPsrZCiQXljbIjuCFJxXXJmHpFjzdp
MFLOrJwzE/Hw/WF8OEaOp+iJJDUSJkZC+EycWsoySwV2ocjOFlnA5oJZsjdN
cKfxngwhVGKGi8xQgbmRIrkjmLUAwrGJcG0ig3FitswtVECJIAVDmESSXCxw
CyVmbyAY7As7fRZofIUKLpGHp/OISpsyOpQdnKq3d2X1Dn9rIOtuK6o1Qb7M
ydV5uQa/1BPVd6TNkaS1L+6dyvce63ZvNMNr5da5tH0sBCgre5zMFg0QLPao
tQGz2mdkm+RUjZRt0rMtRqpOT7dZtT1ZcVu4WcG7swhHamk1DnEnkbYNVCjF
XXGiFSaII0gF7i82QuQrMCBJgXYBQJTrYRozSm/GGUxYjQGrNOBFGhRoGUCD
wBCBDCncxd/uUgpnmcqFERi3xRC44W8JYgjzaNwskB4QIAo9TaPDZXK60SRy
ODUqNZtJR4BIQyXDOCwsj4MH/YIvwAlEWI2a7nRKQj5tYEO+6RYFPCKwNoH9
gSRj1hFAoXDYWCYdUSVDahRoERfCpU0R4d+QsubiHkk8Rk6nqZkUNZum9Fri
87Hl7NC03ZEUs+RsjpTM4CNpXCCN9SWxnhTGk8QFCozbydE3UmRvjLAew/kT
xGCaEkqQUgVGpsCMpcjJFAWwK5U4mQxpZ0dyfq49Plb2eqxanVgsYSpVfH/A
fvTIfH1t3tuTD/rio7Hx6NDcaYnzBVYeaLzNBysUBM7aDr865LSPRLuP1IBd
50TUHPPbh/zO4W3vqGyzcy1K/1jcGfMqQ0aygU3UsLktemWHD6Y5BqzljWNZ
aY8X71F8FYSnsLyRQ0UydIsd5ovQg0mO0QHXrSEMbrRmDSm3LIOlKjYsy4xw
7QraYMGCARyVBtxvCQIN/jaXAgH+liCJtUhmLwOCwA1/SxBPXgS+hiNCaEyE
QEzSaLkWq8zl1nk3TLZVhVbHk4jIfC5OwCOCARBpdCSBuIDFzZBJc1wOXCJC
SwRwuRCukaPkgiUQPrmMKR5rVqvE2KwsnZbIYc/z2RAWZYpFmcHBX+ORplxG
ZjZBKeXolQJzqyl85/nGj3/Y+OKTxNGeOpPEhENQ78acY33W4V9wR2HrSdR6
Cg82qjtFWU9SPEmiJ07wJUihDDUGwGUo6SITiKhUYbdaon5f1qwL0il8o0o5
P1VfX+p3h/xeh97vMUc7/LMT5csX9kdX5tFQMhrKnlw7nt64hluKfJ5erHMB
wXJfWBsKS0N2cZtRP+BunYub++zqDh2Qao64/bG0D6rHtqjSYTZ22fURHbyU
H1CBUdb2uK2xuHkkruzxcgNG5UDQvZQ3TkTVMa96zK2OeKWaMJPiJpNc7yYp
XZHmm2qdA6ZzIlUAog0hWYHKVxAaG8a4hjfZ8QYrQa7DCNVItnSJIYLQ+BAq
KBpcsEXnb7vhb9wQEMRSIUCGYHDkeWBqVNqyUETQG3hOl3rdqwcE7WsqsYTC
FxBYbCyVhiCRoTj8Ago1B4PfxtSF5TeWoK9j0PdxmHtY5Otk/F1ADQhNKUXI
RFAmY4bNnpcpcRI5hsacQyK/hUa+TiNOE9FvihmL6xZ+Nk4uZKjNMvf0wPid
T9N/+PvNb78f3N4SAHwu95TB/E2V8TXt6l3rBsQRgbvimJUAyhrC2UN4RwTv
ihLcMbwvTgQyjKbJmRKr0RKClbi7q97eVpRLjGBgKZ1AHu5LLk7UwwF3u8fa
2xUcjkSH+2LwzPhAOuhy9nakLx47nz1yDbvSfI5SbvJzTXahy63vCpqHIoCv
fsBuHbAqQ0qhSyx2yJ0d7uhItXeo7g+kjTanucNp7XEbe5zKNrO4xSgPOM09
UXss65+pmweS3omyd65ojYW9c1n/Ul4fco+P7KWMIBKklMvSj1+1Hr+TUdkW
FfYluR0qsYLWvyi1wLRrGKOTaHIQdFasUI3gyqFM8QJNAAo+5Ddzq8TbWkGf
AUoEEIEbAoi3MiTOkqiLgCCXh1GqGOYV0YpFDJQI8IHEAuSGxswtQx/Mzb8x
M/ut2dk35iB3FpbfhCy9DtyQSJ4jgTyDvIPH3gVak4ngeh0JDI+3jCc9INFm
eSK0VElYhn0TCp0gER6C2qgWY0LrylSUHIsQixnG3lDz+MpxeWHb6kvyBdK6
D2J1PdRY7qgsb6rXHuo9EO06RO2al9vnVY5l4zrSuolxhHGuKM4TxrpD6EAM
Bwj2+vLdPQ3AV60wA5vLK+bX83n83p50vC/vdpnbffbuSACUWK7ggBi3tthb
HfZoJHtyYz87Xek2+fkCpdkXgw6Y77DAnty5Vu8+Um6d8Jv7zNoOtdglljvk
wa7wcKw92NeO+ortnuTk3LR/pt0+lDe2+IU6s9hgd4ay3RPjzrFh79y0c6Jv
giy0Kzq4No4fGfsj2em+zWmYa1dkf/SH4z/50+uTRwGTBymzLfBN02z9FEs3
LTQvKO0InQOrsiFlRhhXvsiS3OKj8mcBPrpgAdQKYIgAH5ryENQKEGnofARQ
IpI4g8RNEUizYCWymNDbcKLjaDUsID0yZRmBnEahZ5GomVuCc3dmZl6fg7y5
BJ2cBigXXsfgZzg8JI2xiES+AYZGm1HKcQIBjMmcJ1NnUbgHCOx94LkKAwNL
fgBFfQONe5NAuKuSoYNeeSRM3vAiN/0Y4IbZLD0UQXsDy/4owuKetqzPWLwL
lk2YeROu9S6LbDMs/V2uYVJomlauLgCI9gAgSPgtQZBk8lX29o56/1A/6Etz
WYLHPW0yfrNUJvcHwm6PV2/Stnf4e4fido9erGCbHerWNnsw5B2MFReX5v0D
dbPFqbe4WwcqUABLfXbvSHr43DB+od29FveO2J19Vm2L0uhQt3eERwea8wPj
9dj69Nw5PjTsHehGI93unm6wreltAW1qd0em/QPLxY1n/8Dc6IoHQ8XuobY/
lHU7It/q4k5F+ePvbv3Dv/30F7+4ag2MgKDOg+AaHjK092iqe2z9jNQGBRCB
GG+7hmyBKYYAghTeDFihv9UgGCxtGkl6AAgyhUieDE/hQG//RIO+BwhSyPNs
FkwixivkVAEfC9rE3Py3pqZfm4fcgcImwUAgdwHBmTmgwTen5l6fW3wTT1rg
8DFkKmR+YWJp8TUKZcZm4zNYi0vQ16DIO0jc5DLmAZwwTeIs4xnTS6gJBPY1
HPGOVoONhFUOF3rVAQPjcEPXPNBV96JtfcHuWza6Zk1eiGUTvhJCm4IY1QZC
5FjkW+fYhkmO/r9DNHngqwG0M4ByBpD+CC6Zp7a7kp2Rensgq1UZqTgqEIBU
G8x6l12oUfJVYneHOzwUd3c47W1Wa8DcGvH6e4LRkeL4Ug8W49aueHSs7R+p
QAEEKaW1z+9fSLavJNsXgu0z3vCU3x7SAPdhn38y0j4+sn76PPrjV81nF97D
XXO/qdxqqrc7ul5DUy9Ky1nh6YHr8XVgb2BuN+SjgT6VIFtN9zY90Pwm8a++
Ov6Hf/X+P/zdh1//dJzKc81umDvJULlgIts80zDFNc5I7TCVEwUgysxwger2
5gVdOA8IkrnTZM4sMEHQKTDUKTjhHiDIk+EkGiqQIYLwcAlxh0JboFEhdNoi
gMhhI6mUReB0s3PffDA5ASAC9YGZmvnW5NRrUzNvAIiQ5ftz0HtI7AyJvgRH
PZicnliGvc4ToKyrIo4ACUO9uQB7fRF1D4K8Pwe/O498A0N/sICeQJFeIzPv
GU2EeEJjMkBsNqjDDrPboU4PwhfCuQNos2dB65rXuCFgVO4FlXtJ64YbNzA2
P16mm5ZqJiXqBzL9lM4yb3ZCrR6YzQtdXV/2hJCJHK3eEfQGkjZoczVGoUzq
7Yha2/xsg5SqYqt9em1IrwyozRGrscvs7HNau5z+WDy+1Bycaw5OtdfPnb0D
1W2G6TPL2/TyLrWyR26PGYDg3iVAz2q1GIOO6GRgePtk48cfNf/l19e/+uri
3etkNSEKOfBhJynmoUbdlIiLDB6AJ1M+eiMlvthxpH0Ug+iNYpD265+c/v0v
nvybXz77f/73P/7qD/Ysa4vrUWK0LlxLkHU+lHgVIrIuKF0ovRdvWCfqHHix
FsFXwn9T5wG4GSJrGqgACBCsUBjuPo42J1QSwXJjiVAIwuQi/HWgIxJxFo+b
IeBnKaQlOhUGAidIL1DoQ9jy5CLk7tzM6wDl7NzrYJ0if3MHanrhzQXofShy
cmb+G2/en0Bh7mt0DICPxYMTKfOL8Dcn51+bXrwzj3iwiL6PZ81Aia8RGffp
3Ieg7Pg3xd4VeHyD4jEv2bQzQS/e7YJrTVNrm0jF2hzffFdguqtamzGuLVhW
FzY3sNW0oJUU5v00l3FBLb6jVz5cW0PY3QitdV5nnze4FzbixFxLUOwIkhVa
ukqrdbmdPWHvQNje5zX2WK0jTu+CXx8z0n10qocuj8jA4Fp77O1D8dGF7vTC
uD/W7J9bhycGkEZKA0p+G1few9X3CY09UqVLuHq80qhwT3ZsH1wl3z2K/+Xv
XP/rn7z9q997/NPPT57sRNsx7SBrAtMMKTpRdTMg78VUVZ/w7VH4w6OknT8z
zpn++KPhX3zv5G9/+uT//k8/+Y9/+2mvoUpmmJkav3VozPRk6zm6PUZZjVLM
PtKKl2zboJtcVI54kS1aIjNnwXDFSLYQTqDOYUnTYJaRd5YQb4BnNCYaS7AM
w34Tib9HZ8BAYrmNmuhZ6NIDLGqBRsYQcXA6BU3ALFEIUDJ+CTL7zcl7E9DF
bwHKC9AHCBzk/uxr80sg1bwxPTfB5sJVGgqwP4EIwxOg0bjpZdgkBreAwS/P
w+4vIO9A8Xe5YrhQhjCuUJUqVHQVu1NWd9PiuBOX8lNCGziDeUZjm5WYJ3mm
NwFBtXVq1bEY8qGbSc5RTf18sHZRNzWCbJ9p2a6fc63BnetYixuusS/oXItr
EUykwk41OZEyJVEF2YM9OJIMjsT9Y+HgTLh9LRrcCJsnzNwuoTgiNsaM9iG7
vsNobbO39yWHx5qDI+3R9druhblzKK7t0sojQvUA1xoT24fU67fMN4/svbr8
Zm/j1ZPaJ+flf/fTT/79z1793U8/+uXvPPv0snnVCZ1W1zshbdrKLjqFw6j+
eS80ihv6QVXfr8gYKEdJ87OW9zunuX/1B4/+23/6w7/46VWjJCnXRfWBotCX
Zvsyb57mStO8OY43yVuP89dDfKubyZdBeRIEnbvAESHURrpSR2fy4CQ6hMxY
xBCn0MQHHBFMrsNTOdNw3GtE2iSwMyJpGYuDoNHzsKUpBHQGi1pCwubxqGU8
epHHwMgEJDZtiYybImEfgAZBosDQxKVlxEMY+sHU7AQcfUerpwvECAYbIlMQ
FCoKiwPHEyA4wiKOsARHz0AQb8Ix93gipFiGXjHTZVJ4fp387lng05v4QV3b
yYlLaa7TAZXp3pQa7kot9xXWSb19xr+J7tbFz8euz24i33uWfnUdv+7bimGG
dw0GNOsNEMAisvqRZh/UHkb5c+RwiRwo4MMFQqpGao8E7dsGJxpdyvdv5INz
cMEzaiNKd8zaOuZ1DriVLVqpRa5vsQZ7UuCDp08de1emrWNJ/ZBeOyTWx4T2
Eal3xBodS0F9AH4HCH7veeudUfKffXj29bvjP//+Lb79wtowbTksONpBTckl
6Ed146zto8Pcs85mwyMqWVnDoHoU1na8ok8OEr/67tF/+PMP3r4IF5LMWl3c
HWmzHX5mS+wr0TcKzEhDHClJAzmxN8JfcVLlWrRMjQUXvEJDtLtEFrtAKMVQ
mRAqcxEcGZwF8KraQGDwZnCUO2wBRCInESlLGPwcOOcgfy4vTy4tPQTet7Rw
D7p0n0VHaJQMhYwo5CN4nCU6fZ5MW/qt+jCEhzDUGyI5ctXBg6Mm+JJllZ6o
M9FBg6CzoKBponCzCOzDJdgbcOSbQiFSIcOurbCUIljZT/38aeLn391+9Sz5
5MC939ElohTr2rzRMQeC6Mr6osU9H48TLw5WfvB+7utXjR+8zH7vZfadc/+g
Ko8FCZsBbDjNSFZ4oQLTmyaByu/PEwG+jQzSl0IEs8jKFrMxZO8cSY9vtOMr
5faY19tj9Q84wyPh1j63MWAAfMAlCy16a0e8faI5eWYfXmnax/z6IQ0IsHqA
aR4Cguy9E/nxkWlQVzViki+ftH78cvfff/Xt/+PXP/lPv/rBR2e1ml9R31Tu
pCzNTVV1XTxMGC8q7tOi4/8nWLaxa3buXkTzi2+Pfv7J8I9fDfslZTHFqlT5
3ZG6PlKmenx/mRaosGMNUSDP80SZ9g2yzobRmHC6FZJSh9MYiTYnz2hl8ERw
OhtCY80zuYt8CUxrIplWaUL5EoM3JVUjFRoymbZw2+sZUNABEciHy9B7IIsu
LdyZm50AFqmUk8RCFJsJUcjRq6s8lYaGxU/Nzk9Akd+kc2aMNqrWiJtbnlDq
kSoDRm3Ey7QYnhRGYc3hyDOAMgJ1F4N6UyKAa2QY9wpTK4TnfcS3jj1ff975
6vPWZ8+TVwf2dk2SztD8cVwgjXcFEVbnTCCA2O8r3r/e+OxJ8PnY8fx0/fpw
rd9UpFO3f8dOlrmFjiTTEsVq7ECFHCwRg0WcP4fczMICGVh9mzM4EB1faa+f
mM6vtAeHor19wfhIMtoTtruMcp2Yr5OydUqmSS8PBb0T9d5jQ/dUXN2nlvYI
xT1kYQdeHeE6+4zDM83LFwFgxGbh9LePcn/6yfnXz3f/xZdPv/720XHVU3CL
OhFdP2YsOIUZG6vuEV+UneU17lXJWVnlpHUEK/leWIa4yFt+9v7g6w+3fvb5
zmFL3y1L2m3pzqGhf6zLbfEjDWasyY01BJ4E2bKBMTkRmpUllRGut+DVRqxS
j9aaiTINiiNcuL33JIUKZTChHAqe11uIEtUyTzIHvgxsVBoHQmUvANMEUYRM
h2CJU8uIW+HMQSYIpCm5HMtmz+MJb6g1mGTKmEisOBxCJnMWS3xdroap9HAq
53U6747JjlWZYVLdkkQPlZtQUj0KBCqOcIlGmabgJmU8uFaMchtoGt5S0oPe
LkneOfd9/jLx3uXm6Y5p0FE026JkiR4r0TxRpMkxueacTsWw7Tyzm2M2wORZ
1Twzm6ZFY4RQghDO0iJlBsAXqzPDdWqkdnsXPlLFxiroRBXTGwl3x/KjM83Z
mebyXHtzqr06Up2MJAfbgnaDXioRQNFIVsnhMiHV47ROVYMrZW2fkRvickNU
bgeWHSyXhtj2Hnt0pHl84wvYMWz4xHXd++efXV5mnZd5V8Ujia0wqj75UcU9
TK4UHLy8jV1a4x2mVwDB5y3/RWFt4JcFxNCYEr0TlN9UbN+9yvz1j04+uI70
a/J+XwUItvYU1ZEs2eUku7xkk7eeIK76kLZ1pHENqjIs6q0ojREh1SyBMyxS
LAokC3ItEijllpcaIdfC1XqUQD4nkM5qV9AK/e1dfvFvb0spUHzgaJwFFO7N
Zfg3lmATNOaUVIFkc2aotPtaHSYUlrtd/FhU6/dJbHZKKCIyraKIzAnDKnR1
A6t3wmTmObl5wejCr22yLOs0rRkvEUDZ5BklH6YVI9wGqoqzEHAtx/3oZo6z
3RD3ysJ2ld+sCwpVZrRACuQJngSo7RCnbz4QhEYDsND6QiqKjgTgft+SPwDf
jKIDSZwviV9PYjayWKC+aJ0ca5BidXyyjss08bk2ERDc3pWAUr8zEDw9N332
ru+jJ86rXcXJQLzd5DRr9HKNHsyi16LLgTq1daHpXYjLI1K6D8/tIPJDWKYP
LW3ju/uCqxvH7rbZKJkizEzkrKy//Z23vrrp//Vn12/1Y5dN//NhFMxO0lTf
kDa90pKDe15yDELq84Lt+5eVZ431y8Jq1y3c3pTuhiU3TdtPP+7+8MPKsKHY
7quH+7qtQ017rEp3OIkmM9nihEv0QIbiixJW1+EWO9zqxBjMMLl2QaODKbTL
cuWixoBWaeDmVcKak2p3U1fXSDINRCSd0plRajNGbSGYHTS9jSTTIaUaFE+y
iCJ8cwk5gaO8DuhLFFBwJdhdjEBI7PGwTXpcNCDrNJ31hrU3WCs1NSAWbkRJ
ziB6NYA0uJcUthmDB+GMUK1+otIEVcrgfMacWoIyK3G+Na5BCne5FlwOyAYo
AmCckGQUlytQQ4BIEuVJId0Z1EYWAzJJPAfKIyocghZLQHqoDf+SPwyP5oiJ
MjWUI3lTaGcMenvHvEaMNwjxKiZZw2Sa2HyL2B+JAL5WnTFocd5/4vqTH9Z/
+ir37onlalu13xX32/xKneGJQHWeSU8B175U9y6EpV18eguWHyIKO8h8H1XZ
Jm8dyFptedBLlNDeIE1PiJYnvjypfb6b/7MPT//NVx/86O3dt/eSo6wFCLDp
l++lTC2f9INRcieqi2uw3z0rXhXtrw4zZ+mVJ1XHO1vrB0nFh+MAMI5x37Cz
rd050F+88HSO1IkmA2SwVPP2LnO2wYlnqW4/4jan+YkrqzCtYcFkQehNcKV6
SauHc3j3LTZ8JCbJFtSRuAi8JFVMa81wYJ0rHqprk7PiJMv1MIUBLpBB4NgJ
NGmCL5tVGxAy9dKqi9obru+MNjc3+fm0rpDS7Q39W9214a7z6lm0vWNM1XiO
CNKdwFoDULltUrE6Zd6Aq9cWWJI7MtkyjzmjVaBtJkp0U2o3E/1xTDJPjaWJ
gRAyEIB5vBCbc8q2Madff+hIIxxZpCW+4MkhwZaLFfDJAiGSQuWr1GyFFkih
N5OoVJWWqNJ8KZQ3gfCnkck6qbzFLHTJySqy2CWCuHJxYwA1vFYkPzkz/9EP
an/5k/4ffpb/4pn/Zqg76SsPBorBtgz8EEcMak/DQy1S54y7fcnO9pbLO6jy
Di6/hd29UO6MtU4nTMJ9g42ZoM5OGMnTWT39MKT/1UcnX72ze1b3tDYV23HD
bsLQD6u3w5phRLsbUd9UnSktvmxlvN8P7Abl7/b8FznTs7p9sMkfRAQ/+6J/
MjDv9jXDXc3BhaVzoKzvyVJ1uiuy7AwuhdK4dImazFECYUI6xw9FGBYbVG+E
aHTzCuWsSr2gUM5LZTMmMzISFSZTMreHvGJB2tawYtWcVLcQzkizNb15DQfG
6aMLFTMWBz6UEKUKqnhWXm2Y9w43u1uuSFQcC0g2PWyfh7lqQ69YoemyYHBk
LQ1kngTa4J1Vrt3X++ZWQ/AVP1TvghjWoOsbXLkYxmZNSySLSiVUo4E5owjg
d8UWv9YRVZrcaArn8i/YAwuWwDzAt5pBmJOLrjzSW0D7sqhoER9IIQHKeJG0
mUKvR2H+JCpWJKVr9Nq2INOgpKukap/RHXG7I9DTueMz2dOn1r0d8U6X+9b1
6k++U/z592u/90Hq00cbj3b0475ib1txcKjr7imSLWawTkn2ad0z7u4Vt3tE
HV0Lhuf83ph/cGmqtsVy2X0B400B8a6euZBZ4QyDuhdV768+Oj4rO3YzK/tZ
63HJcVpaG+esFQdvlTkzimp6PglYnmv0h2cZ00FU/ahsP4ypvhjHbyorH+wH
fvRe/Z2rwPG+tdmSgMu4uSNr7EqzLZYvgfRGYbEsNlehZIrUWIqaLwljSYZr
HZzhZZVmWiS5J5VN0eiviSVTVhvWv8kMBNkbPrrXR/EF6EY7wuxCp8uKzo49
V1ODKbcN4SQ/EOPUOqbOljWaELrWyV4/0+2hGvUIvRIuZD/kse7xuG9wBN9c
cUCBANNtAQgVwRLJXyLG6vREkx0skIEqwYK12UkM5kMc/jUO76FYOidWQNwZ
bKQKzr9se2zobiviGZInsOQILTliMEDQmoHbsghPGe8pYgHEVIsOQiMIHskK
NV4ie2Nw28ZsII1p7UjPn601h4JMhVjt0vZP5WePtGfXypNzxeW5Zm8o2B8I
X1xZvv9h9Icfpb7zduSTp/7rkXGvK9vuScZHhsMrc/9Y3TpSbF0oj54qT58r
zl4oL9/W7V3Kd06Vg0O9L0CUiacUfIiEMu1WEIsOadku2AtpgcGBnVl2C6rr
oq2Ipr4uiumJATnCJ4E+qrkOk4absr22yqiYKRdpU9/DO0vqfvFO/4dXhX/9
exefXsY/vI5fjF3DbX0yT6/2xPVtSanLAxdkKINOlfAgYpWqtEyOmkhSvRtI
jwfsKNL6Os5qga/akJYVRDjEKZc0YAp5ZbWiaTWNjZYxVZCly7LO0Hp6Ez6+
CrQG5liW7wtS7C50NMmNJ3k2O0qtgZhXEDYLRqtelgsXSJhvoOETeMIEkT4h
1jxwx/CJBre4LckPRSAhp9rsRJ0FrGrND9WYZ212IpV2F4v7Blc4I1Eu8GUz
ziTWGUdGi9Rykw+WxmYQsRlBhTN4kGEcaaQ1BXcVsYEWzV8jgZxZ3RPX9yTp
Bg1sm0KXG8riLOvT/gRysK969q5/sCcvlEnNLh20hucvrY+f6E/PZON94cGQ
f7wrfnJmfPeRA8zLK+dbl47xUN2ucSplRm8gGh6q+keq3QvD2XPr1QvD+RPl
5TPNySNVf18I9me7r7GuIpXSRZC+JOT5gJHT8GvrHulFcfVx3XmQMW3H9ePC
6kXdA2j2gsr9pOG8ZD/JrrzTC+xHVMdJfVCwsBeQA4KDdf6fvTd8p+UBbuiW
zmS81G5VVauKUwVWoSmoDaQAYqHFzJTJ+Sq52qTWmoximREKY+1rkGAI3+lo
+v2Vek3TqOu7Hev2wAGm07aAT9stU7ezAo7pvDhXlTe7htObwPN30rW22mCZ
lynv6k2zYA+bTBC1agpcA6Eg2+9lGDRwCX+RjHsDBQgSv8EVPzA64IE8K92T
pHuiWIvtyxEcEfjtu9NB1w6jzKuL9jUShzNJZ95VaaByzRKLfx8sWI1jyr6x
5A+h3c4FjwuSjBNyBbovhl5PohxJhLeIj7QYoRo13mA0DhSNfXm0SgmViLk2
O5wjgK7h2Jgv1VmnF5atbXG1Ruv1uefn2idPTY9uNGfHkkdnikenqifnumeX
xkdnhtN91eG2cn+oHHTFAF+pTG91ea2+oL7F6Y3Ex9e64wvF+ER8dq3eG0t6
O6LR2Fiuyc0rKI0cqRZjZPTliEXUCOhAYnnUdF3X7Zc158ud2FXdk16hxbQ4
wO7dQWg7qOj7xNel1ac1Z9fDb9hoxzH1y4brICQ/jemeltd+9en+9x+X3xoH
L/Y8iSgtkWaUGoJ6X9rekdcHgkqbXW7Say1avcGo17mlEieXZbVbiuMj5+G+
a7tv3d9199rWbEq6uUEP+BiRIAdMwEfz+6gWG8zhwWwGqf1dy4u3072Bwe6E
2mwLfj/O7ye4HCibBbrhIUVD3DULlk2/S0DdwcLfWF6aQOFeU+hh/pQg1VQk
29L1LNkWQWic01r7Q3cImavwciVuOExdXcGJ+TMS4ZxRj5TK5ij0b9iDSLML
shFARyK4dXCluaG5KCm8ibgVYwK7kcB4M5hIlRopU+IVarEv7B5rMl0OgJio
UtejcKXpWwrtxOraw0qFBYjUa8xBjzs+kJ4fK8+OZacHwreude8+MX3wYvW9
F/Znj6znJ/rDA81oTz0cKbe2pcOR/OBUv3eobG+xuwPu4ZH85FR+fqF6/MQ8
PlYdHOkHuwaPl6CQQTQyjJSL0vPx0VV5aUPd2JSPc6ZRSr2fM/fCarA8zbRJ
QPDdYeTL89Jxxpw3kZzMhykNpmKl1SyU/aCsYia9qKy9XXG92on95avjn3+8
d1Bb6ZbUuTRvf7xWbUsbA0V3pOyM5O2BsNZh1BpUcEE2GrzdXf3BvmW0a97q
6TIpfihAS8UFsTBv1YJSK2bNBqhrDe92EByraDCrNvjqGgKYZqWuuLj2D3eM
8QQ1maL7NjDRCCUSovo8hHUnft1BNKihLMpdNPRbBPQkEv767f0+C86bELiT
7LUYybiJUDimBYY35OZ7Dh88nqLH4hSfl7CxRjYrYWY13GpEK6QzXPad2/uz
fkQ2w6zmuJlNQjPFHADj9iJ97uVIDAsg+hKYaIGSrDBSZVq+xemdaOv78tJA
lG4wvTGUce2hfuWuxXY/kcABgsO++GhffnakvD5VP77QPLvSvPfU/PHb9s8/
9H7+kf+jD/wvX3punqydXluOLi37p8ajS/PNc+fljWXvQLa3Jz6/0FxdaJ8/
tb587jga687P7b2eTqOel4oWFCIUm7RgUTBiDnVhQzXMmI9K5pOqOW4m+ZXo
rJUBIs0Pn7R+/YObv/ny/PefNoEDtt28qBz6qGy7zBifVexNK+374+wfnFU/
7AZBufj6g+EHp4nnp+FR35rJ8Jo9VXOg7uyqevvK3o6k0WNVauRiiTQYyPf3
TVs9dT7HiUWp627simnRbFjyOIlg3A6Sa4247iL5vbQND8XtwPk2SF4vHsit
XJaORtZeV53NsNIput06v7mBjQQpAQ/R7yIG12leO8WsxTKIc2wGnEaFcARQ
o4NhdJOllmWlc9ngR0ptD4X6O0rzA6tjweGG3/4J2oFuZDRxN9dnpTiMWL0c
opHPrzrnHY75QprerQhbWc7ljvnlmadXFKzb5hJhfDxODEXQ2Tyt1uDX6/za
7bvI+I19cXtfVupxEiVyPIPP5kjFArVUpAF8V+emF89sL1/Y333b8dGHnlef
AHDrX34W+MGX0e99N/bZ5+H3P/I/emEfX5tOHlt2TzUgqJzc6E+utftHUhBc
Hz8zHR1LHz023dysDHdkl5eurS2jRrEIuo9Nz+JTFtdUbLea5ZDiEhZ6zITP
2gh1L2cYU11U7TdN11t9/3cucp8fpy6LK+d50+eHsdYaLa9HXWf1W2v0R2ld
3UR4ll99XnX/+Gnnz79z8s5BdNyw3hz4tuqa7S1Df0szGKp2RmrwT3e63EqF
VCgQrs5s+9u6RJjosM77vZhomOF2YoyGRRBm4jFePqcIbbJca9h1F8HjwAG4
KyuLFsvC+jqqUORt9TWdrvw379mjBYPoWJQUC1NCfko8zMqnZKmoeMPF5dCX
uCwkmwVVaIirHq7chGIrpgxutC2A164tqswzRuB9TrjHgw0HaaW0+KTvayR1
EQdrTYsyyBYtWljAO++2P2iXWRf7xt225Gp/5e3LjZ26LOZBFaLUTJCYDuEz
QXy3JLg6sPU74u1jef9UsnUkHo4lx+fa60crN5emsyP19blhbyjq91jHJ7LH
L8wH55KdE97NS9P4QrV/qujvCVpD1uBAdHipGp3K6tvMbBNb7lNGV9Kb980n
z1XdMbN3xDp+pjx9otg54u+MxY9euMAKdTkxNjPWpMbpJTgFE+ZS05N2iU8J
dIdp+cTjrPaiavxovPm7TwvfPgxclg2PG7b3Bt6njdWKDf/Blrugh9kwEz0b
9r2S/jvd1RdZ9cv62k+etv75lxc/fFT77CTz8XHitLbyfNd73rFc7dj2WspR
R34y0rZrjEaF/Oxy9f3rjU6KF3UgEhuE0DretQa/vSXqQJlt0HU/KZuXVMrK
cJC+YlhY0c257EizeR7oZc21HI4Tdg8NByemRptXrjGTGTwIRZUqP1/gulzo
dQ++UTfmcjo2+/aevsHMCIQ1RguFJ5pVaJcNVpTVjlFqZtXaOZNxSa2YNuqW
khHBTsfRKpiDLpZJATUplp0r+I01ai4OL6XRp3uat24cp3v62/efHK4OapJy
jF5NMLMBYj3F3q1Jn47Xvnwv8/bjdUBh60iwdSgcHorGx4rrS/3NhfHySHOy
J+82aZUSbrDDPblW9w45xS1c64DV2uNV+qxEBRcuwIsdyvBEuneh7B8JSn1i
fZcyuhFfvq8bP5c1jymdM/r4peziHc3+laQ/FoEFW2/L3C6s10H3WJkS6pwA
P+2QEcvrqopbthVUP+v4PjlK/OHb9V98uvXjtytXdXPLxzzOat4ZeF92XZ/s
BX9wmvh4yzVwkory+Q+rpj99lLmOit/tAAG2/vqL8y9P8x/txn/nuvLRXuSD
veCnZ9HrruWya3x2uHq2q91u8cc7spc3juf79t28pJXgNdOCVIDqtMMsliW9
GaKzLNjcqGicUyrJ0knehhvnXkX4XGinExYIE3xBTCSJH4xUh2eGzrag1mHF
s9hKk1PviJJZhlr3wGCCgOqx1Xfr9HixDL6ySvduinQGtEA0rdUt21YxG17q
ihmq18wbdQsreijwzViQH9nkeywkswKhFUPsekxknZMNSzNJRLtBP9pTnxxo
d7fk/ZaoVxU1C9xalpOPUdMBwk5T+fjY8fFbsd//ovrxe9HtQzkQYHdf1Nnm
DbZFRweqyxMTmGaFkU2gYuHlRos+vlAPjsSlLXJt9/Y/BhY6tFAO4U3MJ6qY
/rH4+Knh6Il291IyuhKfPFefv6PbuRKWd3CVXfzggvPkI/P5C+3uiRRUjGyR
A67VeFAc3ZDaVWSTAOPXs5oBw3bCMs7annU239sNdzf5vYDgprH6vUelL6/L
7wyDH+4l/uBF7y+/OPuT93d+/eroky1fUYU88PK/O/C9GviBAH/5yfhvvnv9
3bPiu/3Ij560fvem+v4o9Psv61dd25Nd+4ePAue7+vFQ8eJm9eUj582u+WzL
eNY3j1q6TITpdiJtdrjJumywLRtXoR4vKZ0S5DKikJ/qsiLWVpZBYslkmak0
NZkm9Iey0wvzcCQt1UiJNKrdu313OnhJJJ6Qye406trD8abTTTNbcGtOimeD
bjBCleoZkIV8PmIqwU3E2ODaAA/A1k3FuJEAc9UIX9OiNdw5MeVNo2ghvMYs
R5TxJKzRZDbqrEKeVC4x8jlKNkGpFbnlHCcdo2Rj1OM984tHvrceb3z7rfD5
mXX7SN0/UnRG4lqHU2+wel3R3lA13tUW0+RkFB0Jw2p15uGZDhhcc8TtHIq7
B9LWSJRv0yMFFFBie59/+EgHIJ4+Nxw/05y+0B0/U3WP2bkeOr+F6Yxpzz+2
PP3QevJItztW5/LsgJ9SSKjSAZVbRwcE7WJcziEdZezXLd/bw+gHo/irk/zb
w/B3Lst/88Onf/PDZ59fNj49q/7V9579xXcf/ekn53/16vJP3t3/6rrzKG3d
35D/3Zc3/+WvfvCPv/js3331/h+9M/r0IPc7j1o/etZ5bxT58knxrT3viwPX
ixPXxchwdWR8drP6+Mzy+Gj10aHj0ZFztKVPxRnAjMJR1maI6fKRrU6M00W8
dcOMNBpkuFaQZu1sOEQqFLmgjqUyxN5AcvXIunsgjafh6RwWtK39Q329KTAY
H2i1D6pV5VZvZX2DCLZxKMaKJTiBMMUfJCUSDLBpC3ku6C+nJ+6zU0+jqgj6
iQ4b3KiaC63RTcIlHu41KfWuR4/L+kTpMqE9FJSbzFSBcBtUmtxsjlFviBpN
KfhNCgUWSGLjsaXfVwwHqnKVVd3iNXfF3T1Ze1vSbAtAXaoWWYUMtZil5dMU
kEjzRVpnKG0ORaUeq74raOyIAPHeoazYpafrxHKfDiS8cy4fXSp3L2R7Vwpg
hZ1DdqmPB0t155z/+APzi4/tj962nVytVKrCSIheTKqSflnQxrNJ8SYOPKhj
7KTsT7ci749SHx/lXp2Wf/rh+E8+O//Zpxd//cN3/s3Xr/7jr370f/79L//D
P/udf//z7//Dz7//3/7+l//0f/3Hf/yjV985rP7TP/7VP/1v/+q//ssf/09f
f/zr7z/70dPB96+bf/CiDy6A9w+jXzzNvxh799ua8z3TzYllPFLtbcsux+aL
A+vZweqwp81ludmsMFeSRdPCzSjX4SW7PdRYlJ9Ly5JRXnidvukmVEvCWk2Q
y9FicXSrzX3ydO3sQp/Joat1yt6+4vpm7fzclssxwiF8rSoFsDwb6HSO3eqq
+gNtf6DubSm7XfnWlrzTkXQ6svNT56PrjUpRYDZMK6R3tLJJmxJmk8AsomW7
DOEzEGJ2JlAHOL3tXUmtzx8cakGlzZbZhRpo2apinZ/IUCtNfrbECMXR6SzJ
H4YFs+h8lzEYqw7PzfvHxk5PnIyDojoXDWNiESxokYEoMluh5VqMTINW6LJB
ZB0cq/cu9UCM5S1mbZvTO5Rsn8p2LwBBBeA4PJO09tjlLWJ9SO0fcc6ea56+
Z336ztqT565OWxELMQoxRdIryXqVEYvAISUEtPRB3Pq4G3r/IPO9x+0vLtu/
/O7jX33v+dcfX/7ii2c//+LFzz5/69c/fvWff/3H/+Vvf/n//uPf/dP/+u/+
6X/5H/7zn/3o3/7k1T/946//67/46f/49Sd/+unNn31+85O391+dVn/0vP+j
lwOQS3/3ncbL481BRXq6YwLgtrvCQU+4N1AOu/Ldvmaroy4WhZkcMDKhN8h0
eKm2NfyqHe/10IIbjIiPmYuKWmX14Z6115OBVRaOICplGiD49tvu/jZ/e1tw
fmF69x3/tz+KHY9X2m1puyH3rsM968B3hAdjE5DneGzc39f1+7JeT3J1tQY4
Dgea4/EquCpWLRCt6t6Kdp6JnrBK4SmPML0u8plJqwp4okGuAqXsSys7wtpQ
ku9wo0V6OE8ttkXJMssXx0Xy5EASsxGDxwpET3hxMw3Nd2mjM+31i7XHb7mP
z8ylCtPnWwoG4aEI0utb9AaWMuXb9zhlm/RMi1rp88Di3b/Qbx8pO/uS/pFs
50K9e6kaP9YfPTEcPdKDYNMeccsdIpjGgDa+ll480928sD594d7qqqKb1EJE
ktuUJdaEGac0pGeC6YSM5/WNj06Lv/ji/OuPTv/s+89/8sHpq0f9z24GT3dL
T/dqX3324vfeu/6bH3/xP//513//J7/31Qc3X71/+evf/fbPPnr8k3ePv/7w
7IvL3u8+2/3h89HHx9Ufvtj+6YcHn12VPr3OvTjcPO6bjrdNZ3um00PD2ZFp
dyBvtwRADq22PJvlBsP0dR/FsopesWHMFuwKGBPSqFkEDpWLCsbDtfOjtX5P
3qiwsxlirUx7/Hj1k28HLi4M4335kyf2jz8Mf/4qc32+OthSDDqKTR/C513e
3lacnID2pBjtqnZ3lN2OcKsnvrq0g5/T7yn3R+Z2VR7xk9yrMLtpmYWdsMoR
CY8g5uI5tTijaGmzgk1tMfI7/FSbFSqT/fnfvNElT4nX2JEybSONi1eoyRot
VaeWtrj+DDxRx1R3mPvX6kfvrr389saTl67hgTxfpRbKtEyJFIzDAwlosc0A
Wks1iMD76gPe1oHi/+PpPYMbybNsv1HoxVNIqzUzO90z3dNd3tB7770vek8C
IEB474HMhEt47z1h6L33ZLGKZdtXmzE9dmcnVorVewrtPrkXoW/S5XSEIm5k
/JEAWSz88tx7TiIBqMw3oxMIapyNuKdJ46zXexqMviYgaHI1YMZSKZYrQXMU
mjy9o8LiqXH5WoOhAVRWSxx9zCVWCogNyGy3gTeqIHbQe8vY/ZXC0VoLb3An
hGwFkHdn6WdrHr+GbhJOKWgD7Il2GXXQpeKeLAaebyW+udz43cu937/a//Z0
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
KJlCSY3FPuQNTGs0HVRqHnkmi8cvpTNyZfIqjbpFyC+1GXswUQ3CrUBYFQZR
Y9g4mnaS/fiIXtqu4jcq2HUiRplMUoXjzUxmFp2exf3/SjrvqDbTM+17N5NN
NpOcbHYyM56xx73Qi+lgwAYbN2xselfvvfcu1CVASCAEAoTooiN676a6jG08
tmc8fZLMnE2ym6/t98f33STn3Oc9Qocj6Ty/57rv65L0viJHUvBhSvEVSI4y
esJgK3G6j9NSW2qruv2PH8JGk86Xkk+ytDEEYQiefaHKklVluM7lxCglVxnE
WAYhCV+emB7/UULk8aBT78dHBl9NjL6eGFRyO0HOqhzpcgx312NKb50++ovT
H7zz7pEjNxNP70y2fL83dDDV+Pls/Uab5EWg+vPV9p8OZl6tdL3dHPhmZ+xv
r9ffbox+uzO53u/qtoll2Hv1cjyUkVuio+cO1otn27UzrepXi+1fb/btDNS+
mmv785PxlzMt3236P5tt/Xq1+4tFHww7QAZJ89GA/e2sb9jCVZRdL447ib0W
Sc9JLksPLko5X3E1mFuS9jTg+nq166ed/j9udkAM7FKWL9YyZozEpWr6hpO7
YKWOaFA+Xl4N+qq+NMmOy4KqwWTB7Ft2CtdcsjE9db/D3MItc1LyRg2MBYd0
qV5G5sUUoU9h6GF4RgSCGHz4YT0umECLpjLiUdhQDCaczb4sk2bxeelUcgIB
HwX3s/kpbA44mStV8pugPgklWUxMrOJcP5SeIk/NucknpbIJoLIEZHkYnZUo
01ynM2KYzFgwrlzKJRU3FTKjVX5joIUw1EFtriu1Gu6JRKk4fEgl4QJeCMkl
GC8MY8riaNwoDOY89ASHpUzNv8fEXMUWp+XdjEcW3s67nXknKyM5Jjwm+JOM
pCBsxV2jiquVs29dT/rwdz//9TtHjv/bkfMf/JPHyPzLwfSftnoe9xtWm3mv
x2verHifL3lX/dWfLXd/+XD47cYwsHs80dljk4mQ2WpSHq0gFXEjUk2+L8Hc
aNETx9zSP+6P/Lg38mjE+cVSx18/nfxxd/i7jb6DqeY3895vV7ofD9YF7ILZ
Rvkjf+1uj61VhFWWZ3HupdBux/Pyr9JzUvLiz+UnnRMjb+0Ou/7P6+Uvlzu+
XW3f6la3y0u7FWUBHbpbkDdZhX7UIgOCDvw1ZW60/EGUi5KtLIirwd5Ydomf
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
RO3h6Uv/HxmiWBw=
       "], {{0, 100.}, {150., 0}}, {0, 255},
       ColorFunction->RGBColor,
       ImageResolution->{72, 72}],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
       Association[
        "Source" -> "http://www.eol.org/pages/328605", "URL" -> 
         "http://www.wolframcdn.com/waimage/hset050/ac9/\
ac99116210e54c705c59c5a92e61cb14_v001s.jpg"]],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{150., 100.},
     PlotRange->{{0, 150.}, {0, 100.}}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.813856563228861*^9},
 CellLabel->
  "Out[394]=",ExpressionUUID->"48e19721-5eae-4f18-a5e3-ca0ede3b0cf6"]
}, Open  ]],

Cell[TextData[{
 "\:5173\:8054\:53ef\:4ee5\:7ec6\:5206\:4e3a\:53ea\:6709 ",
 StyleBox[ButtonBox["Keys",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Keys"],
  FontWeight->"Bold"],
 " \:6216 ",
 StyleBox[ButtonBox["Values",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Values"],
  FontWeight->"Bold"],
 " \:7684\:5217\:8868\:ff1a"
}], "Text",
 CellChangeTimes->{{3.619438180044606*^9, 3.619438194929821*^9}, 
   3.6806087552363577`*^9, {3.690912239423643*^9, 3.690912239969633*^9}, 
   3.6909122972191334`*^9, {3.6923781123145814`*^9, 3.6923781126575747`*^9}, {
   3.694380048092482*^9, 3.6943800882154818`*^9}, {3.74351287362728*^9, 
   3.743512876130604*^9}, {3.7900013397052794`*^9, 3.790001341896138*^9}, {
   3.7900837136295824`*^9, 
   3.7900837559810715`*^9}},ExpressionUUID->"87dddaa4-03b3-477d-8f32-\
6836ededbf22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "assoc", "]"}]], "Input",
 CellChangeTimes->{{3.619438198219534*^9, 3.6194382015550127`*^9}},
 CellTags->"Keys",
 CellLabel->
  "In[395]:=",ExpressionUUID->"8b12300c-28d2-423d-826e-6106164bdf50"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", "4", ",", "\<\"cat\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.813856583515773*^9},
 CellTags->"Keys",
 CellLabel->
  "Out[395]=",ExpressionUUID->"bfb43bb6-aebe-436f-a536-11c8ba35f47f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "[", "assoc", "]"}]], "Input",
 CellChangeTimes->{{3.6194382035811663`*^9, 3.619438208473506*^9}},
 CellTags->"Values",
 CellLabel->
  "In[396]:=",ExpressionUUID->"e9fcc75c-551c-4015-a203-afedb9a8471c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "100", ",", "200", ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
35D/3Zc3/+WvfvCPv/js3331/h+9M/r0IPc7j1o/etZ5bxT58knxrT3viwPX
ixPXxchwdWR8drP6+Mzy+Gj10aHj0ZFztKVPxRnAjMJR1maI6fKRrU6M00W8
dcOMNBpkuFaQZu1sOEQqFLmgjqUyxN5AcvXIunsgjafh6RwWtK39Q329KTAY
H2i1D6pV5VZvZX2DCLZxKMaKJTiBMMUfJCUSDLBpC3ku6C+nJ+6zU0+jqgj6
iQ4b3KiaC63RTcIlHu41KfWuR4/L+kTpMqE9FJSbzFSBcBtUmtxsjlFviBpN
KfhNCgUWSGLjsaXfVwwHqnKVVd3iNXfF3T1Ze1vSbAtAXaoWWYUMtZil5dMU
kEjzRVpnKG0ORaUeq74raOyIAPHeoazYpafrxHKfDiS8cy4fXSp3L2R7Vwpg
hZ1DdqmPB0t155z/+APzi4/tj962nVytVKrCSIheTKqSflnQxrNJ8SYOPKhj
7KTsT7ci749SHx/lXp2Wf/rh+E8+O//Zpxd//cN3/s3Xr/7jr370f/79L//D
P/udf//z7//Dz7//3/7+l//0f/3Hf/yjV985rP7TP/7VP/1v/+q//ssf/09f
f/zr7z/70dPB96+bf/CiDy6A9w+jXzzNvxh799ua8z3TzYllPFLtbcsux+aL
A+vZweqwp81ludmsMFeSRdPCzSjX4SW7PdRYlJ9Ly5JRXnidvukmVEvCWk2Q
y9FicXSrzX3ydO3sQp/Joat1yt6+4vpm7fzclssxwiF8rSoFsDwb6HSO3eqq
+gNtf6DubSm7XfnWlrzTkXQ6svNT56PrjUpRYDZMK6R3tLJJmxJmk8AsomW7
DOEzEGJ2JlAHOL3tXUmtzx8cakGlzZbZhRpo2apinZ/IUCtNfrbECMXR6SzJ
H4YFs+h8lzEYqw7PzfvHxk5PnIyDojoXDWNiESxokYEoMluh5VqMTINW6LJB
ZB0cq/cu9UCM5S1mbZvTO5Rsn8p2LwBBBeA4PJO09tjlLWJ9SO0fcc6ea56+
Z336ztqT565OWxELMQoxRdIryXqVEYvAISUEtPRB3Pq4G3r/IPO9x+0vLtu/
/O7jX33v+dcfX/7ii2c//+LFzz5/69c/fvWff/3H/+Vvf/n//uPf/dP/+u/+
6X/5H/7zn/3o3/7k1T/946//67/46f/49Sd/+unNn31+85O391+dVn/0vP+j
lwOQS3/3ncbL481BRXq6YwLgtrvCQU+4N1AOu/Ldvmaroy4WhZkcMDKhN8h0
eKm2NfyqHe/10IIbjIiPmYuKWmX14Z6115OBVRaOICplGiD49tvu/jZ/e1tw
fmF69x3/tz+KHY9X2m1puyH3rsM968B3hAdjE5DneGzc39f1+7JeT3J1tQY4
Dgea4/EquCpWLRCt6t6Kdp6JnrBK4SmPML0u8plJqwp4okGuAqXsSys7wtpQ
ku9wo0V6OE8ttkXJMssXx0Xy5EASsxGDxwpET3hxMw3Nd2mjM+31i7XHb7mP
z8ylCtPnWwoG4aEI0utb9AaWMuXb9zhlm/RMi1rp88Di3b/Qbx8pO/uS/pFs
50K9e6kaP9YfPTEcPdKDYNMeccsdIpjGgDa+ll480928sD594d7qqqKb1EJE
ktuUJdaEGac0pGeC6YSM5/WNj06Lv/ji/OuPTv/s+89/8sHpq0f9z24GT3dL
T/dqX3324vfeu/6bH3/xP//513//J7/31Qc3X71/+evf/fbPPnr8k3ePv/7w
7IvL3u8+2/3h89HHx9Ufvtj+6YcHn12VPr3OvTjcPO6bjrdNZ3um00PD2ZFp
dyBvtwRADq22PJvlBsP0dR/FsopesWHMFuwKGBPSqFkEDpWLCsbDtfOjtX5P
3qiwsxlirUx7/Hj1k28HLi4M4335kyf2jz8Mf/4qc32+OthSDDqKTR/C513e
3lacnID2pBjtqnZ3lN2OcKsnvrq0g5/T7yn3R+Z2VR7xk9yrMLtpmYWdsMoR
CY8g5uI5tTijaGmzgk1tMfI7/FSbFSqT/fnfvNElT4nX2JEybSONi1eoyRot
VaeWtrj+DDxRx1R3mPvX6kfvrr389saTl67hgTxfpRbKtEyJFIzDAwlosc0A
Wks1iMD76gPe1oHi/+PpPYMbybNsv1HoxVNIqzUzO90z3dNd3tB7770vek8C
IEB474HMhEt47z1h6L33ZLGKZdtXmzE9dmcnVorVewrtPrkXoW/S5XSEIm5k
/JEAWSz88tx7TiIBqMw3oxMIapyNuKdJ46zXexqMviYgaHI1YMZSKZYrQXMU
mjy9o8LiqXH5WoOhAVRWSxx9zCVWCogNyGy3gTeqIHbQe8vY/ZXC0VoLb3An
hGwFkHdn6WdrHr+GbhJOKWgD7Il2GXXQpeKeLAaebyW+udz43cu937/a//Z0
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
KJlCSY3FPuQNTGs0HVRqHnkmi8cvpTNyZfIqjbpFyC+1GXswUQ3CrUBYFQZR
Y9g4mnaS/fiIXtqu4jcq2HUiRplMUoXjzUxmFp2exf3/SjrvqDbTM+17N5NN
NpOcbHYyM56xx73Qi+lgwAYbN2xselfvvfcu1CVASCAEAoTooiN676a6jG08
tmc8fZLMnE2ym6/t98f33STn3Oc9Qocj6Ty/57rv65L0viJHUvBhSvEVSI4y
esJgK3G6j9NSW2qruv2PH8JGk86Xkk+ytDEEYQiefaHKklVluM7lxCglVxnE
WAYhCV+emB7/UULk8aBT78dHBl9NjL6eGFRyO0HOqhzpcgx312NKb50++ovT
H7zz7pEjNxNP70y2fL83dDDV+Pls/Uab5EWg+vPV9p8OZl6tdL3dHPhmZ+xv
r9ffbox+uzO53u/qtoll2Hv1cjyUkVuio+cO1otn27UzrepXi+1fb/btDNS+
mmv785PxlzMt3236P5tt/Xq1+4tFHww7QAZJ89GA/e2sb9jCVZRdL447ib0W
Sc9JLksPLko5X3E1mFuS9jTg+nq166ed/j9udkAM7FKWL9YyZozEpWr6hpO7
YKWOaFA+Xl4N+qq+NMmOy4KqwWTB7Ft2CtdcsjE9db/D3MItc1LyRg2MBYd0
qV5G5sUUoU9h6GF4RgSCGHz4YT0umECLpjLiUdhQDCaczb4sk2bxeelUcgIB
HwX3s/kpbA44mStV8pugPgklWUxMrOJcP5SeIk/NucknpbIJoLIEZHkYnZUo
01ynM2KYzFgwrlzKJRU3FTKjVX5joIUw1EFtriu1Gu6JRKk4fEgl4QJeCMkl
GC8MY8riaNwoDOY89ASHpUzNv8fEXMUWp+XdjEcW3s67nXknKyM5Jjwm+JOM
pCBsxV2jiquVs29dT/rwdz//9TtHjv/bkfMf/JPHyPzLwfSftnoe9xtWm3mv
x2verHifL3lX/dWfLXd/+XD47cYwsHs80dljk4mQ2WpSHq0gFXEjUk2+L8Hc
aNETx9zSP+6P/Lg38mjE+cVSx18/nfxxd/i7jb6DqeY3895vV7ofD9YF7ILZ
Rvkjf+1uj61VhFWWZ3HupdBux/Pyr9JzUvLiz+UnnRMjb+0Ou/7P6+Uvlzu+
XW3f6la3y0u7FWUBHbpbkDdZhX7UIgOCDvw1ZW60/EGUi5KtLIirwd5Ydomf
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
RO3h6Uv/HxmiWBw=
      "], {{0, 100.}, {150., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->{72, 72}],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
      Association[
       "Source" -> "http://www.eol.org/pages/328605", "URL" -> 
        "http://www.wolframcdn.com/waimage/hset050/ac9/\
ac99116210e54c705c59c5a92e61cb14_v001s.jpg"]],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 100.},
    PlotRange->{{0, 150.}, {0, 100.}}]}], "}"}]], "Output",
 CellChangeTimes->{3.8138565881119843`*^9},
 CellTags->"Values",
 CellLabel->
  "Out[396]=",ExpressionUUID->"1e43c229-7854-40ee-875c-55fa72274e1e"]
}, Open  ]],

Cell["\:952e\:5fc5\:987b\:662f\:552f\:4e00\:7684. \:5982\:679c\:4e0d\:552f\
\:4e00\:ff0c\:53ea\:4fdd\:7559\:6700\:540e\:4e00\:5bf9 key \[RightArrow] \
value\:ff1a", "Text",
 CellChangeTimes->{{3.6913496433924074`*^9, 3.6913496699072976`*^9}, {
  3.6913498913402414`*^9, 3.6913498918716316`*^9}, {3.692377383454774*^9, 
  3.692377405721665*^9}, {3.694379536135577*^9, 3.694379538054769*^9}, {
  3.743512811164508*^9, 3.743512811548518*^9}, {3.790083774608935*^9, 
  3.7900838327824078`*^9}},ExpressionUUID->"9b049143-794d-484b-a73b-\
edc08d550a0a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "2"}], ",", 
   RowBox[{"c", "\[Rule]", "3"}], ",", 
   RowBox[{"d", "\[Rule]", "4"}], ",", 
   RowBox[{"b", "\[Rule]", "10"}]}], "|>"}]], "Input",
 CellChangeTimes->{{3.6943781908695345`*^9, 3.6943781993565345`*^9}},
 CellLabel->
  "In[397]:=",ExpressionUUID->"fa3a74db-57ef-4d47-90df-525689f68ab6"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "10"}], ",", 
   RowBox[{"c", "\[Rule]", "3"}], ",", 
   RowBox[{"d", "\[Rule]", "4"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8138565959671793`*^9},
 CellLabel->
  "Out[397]=",ExpressionUUID->"0d57b1e4-33a5-4d02-8355-d72640cd43e0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7885382527381277`*^9, 3.7885382606669483`*^9}},
 CellLabel->
  "In[398]:=",ExpressionUUID->"9655ce08-8d0f-4d3f-a363-3363d44d7a2e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"fbbb04b9-eb53-4461-8f37-c90351ac142b"],

Cell[CellGroupData[{

Cell["\:8bbf\:95ee\:5143\:7d20", "Section",
 CellChangeTimes->{{3.776515928584036*^9, 3.776515933229443*^9}, {
  3.788387756931408*^9, 3.7883877606587453`*^9}, {3.7900013506699867`*^9, 
  3.790001351449595*^9}, {3.7900838424201565`*^9, 
  3.790083846363201*^9}},ExpressionUUID->"cd1f43ac-79e1-4f37-a568-\
7456e7197c16"],

Cell[BoxData[
 RowBox[{
  RowBox[{"assoc", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "100"}], ",", 
     RowBox[{"4", "\[Rule]", "200"}], ",", 
     RowBox[{"\"\<cat\>\"", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
35D/3Zc3/+WvfvCPv/js3331/h+9M/r0IPc7j1o/etZ5bxT58knxrT3viwPX
ixPXxchwdWR8drP6+Mzy+Gj10aHj0ZFztKVPxRnAjMJR1maI6fKRrU6M00W8
dcOMNBpkuFaQZu1sOEQqFLmgjqUyxN5AcvXIunsgjafh6RwWtK39Q329KTAY
H2i1D6pV5VZvZX2DCLZxKMaKJTiBMMUfJCUSDLBpC3ku6C+nJ+6zU0+jqgj6
iQ4b3KiaC63RTcIlHu41KfWuR4/L+kTpMqE9FJSbzFSBcBtUmtxsjlFviBpN
KfhNCgUWSGLjsaXfVwwHqnKVVd3iNXfF3T1Ze1vSbAtAXaoWWYUMtZil5dMU
kEjzRVpnKG0ORaUeq74raOyIAPHeoazYpafrxHKfDiS8cy4fXSp3L2R7Vwpg
hZ1DdqmPB0t155z/+APzi4/tj962nVytVKrCSIheTKqSflnQxrNJ8SYOPKhj
7KTsT7ci749SHx/lXp2Wf/rh+E8+O//Zpxd//cN3/s3Xr/7jr370f/79L//D
P/udf//z7//Dz7//3/7+l//0f/3Hf/yjV985rP7TP/7VP/1v/+q//ssf/09f
f/zr7z/70dPB96+bf/CiDy6A9w+jXzzNvxh799ua8z3TzYllPFLtbcsux+aL
A+vZweqwp81ludmsMFeSRdPCzSjX4SW7PdRYlJ9Ly5JRXnidvukmVEvCWk2Q
y9FicXSrzX3ydO3sQp/Joat1yt6+4vpm7fzclssxwiF8rSoFsDwb6HSO3eqq
+gNtf6DubSm7XfnWlrzTkXQ6svNT56PrjUpRYDZMK6R3tLJJmxJmk8AsomW7
DOEzEGJ2JlAHOL3tXUmtzx8cakGlzZbZhRpo2apinZ/IUCtNfrbECMXR6SzJ
H4YFs+h8lzEYqw7PzfvHxk5PnIyDojoXDWNiESxokYEoMluh5VqMTINW6LJB
ZB0cq/cu9UCM5S1mbZvTO5Rsn8p2LwBBBeA4PJO09tjlLWJ9SO0fcc6ea56+
Z336ztqT565OWxELMQoxRdIryXqVEYvAISUEtPRB3Pq4G3r/IPO9x+0vLtu/
/O7jX33v+dcfX/7ii2c//+LFzz5/69c/fvWff/3H/+Vvf/n//uPf/dP/+u/+
6X/5H/7zn/3o3/7k1T/946//67/46f/49Sd/+unNn31+85O391+dVn/0vP+j
lwOQS3/3ncbL481BRXq6YwLgtrvCQU+4N1AOu/Ldvmaroy4WhZkcMDKhN8h0
eKm2NfyqHe/10IIbjIiPmYuKWmX14Z6115OBVRaOICplGiD49tvu/jZ/e1tw
fmF69x3/tz+KHY9X2m1puyH3rsM968B3hAdjE5DneGzc39f1+7JeT3J1tQY4
Dgea4/EquCpWLRCt6t6Kdp6JnrBK4SmPML0u8plJqwp4okGuAqXsSys7wtpQ
ku9wo0V6OE8ttkXJMssXx0Xy5EASsxGDxwpET3hxMw3Nd2mjM+31i7XHb7mP
z8ylCtPnWwoG4aEI0utb9AaWMuXb9zhlm/RMi1rp88Di3b/Qbx8pO/uS/pFs
50K9e6kaP9YfPTEcPdKDYNMeccsdIpjGgDa+ll480928sD594d7qqqKb1EJE
ktuUJdaEGac0pGeC6YSM5/WNj06Lv/ji/OuPTv/s+89/8sHpq0f9z24GT3dL
T/dqX3324vfeu/6bH3/xP//513//J7/31Qc3X71/+evf/fbPPnr8k3ePv/7w
7IvL3u8+2/3h89HHx9Ufvtj+6YcHn12VPr3OvTjcPO6bjrdNZ3um00PD2ZFp
dyBvtwRADq22PJvlBsP0dR/FsopesWHMFuwKGBPSqFkEDpWLCsbDtfOjtX5P
3qiwsxlirUx7/Hj1k28HLi4M4335kyf2jz8Mf/4qc32+OthSDDqKTR/C513e
3lacnID2pBjtqnZ3lN2OcKsnvrq0g5/T7yn3R+Z2VR7xk9yrMLtpmYWdsMoR
CY8g5uI5tTijaGmzgk1tMfI7/FSbFSqT/fnfvNElT4nX2JEybSONi1eoyRot
VaeWtrj+DDxRx1R3mPvX6kfvrr389saTl67hgTxfpRbKtEyJFIzDAwlosc0A
Wks1iMD76gPe1oHi/+PpPYMbybNsv1HoxVNIqzUzO90z3dNd3tB7770vek8C
IEB474HMhEt47z1h6L33ZLGKZdtXmzE9dmcnVorVewrtPrkXoW/S5XSEIm5k
/JEAWSz88tx7TiIBqMw3oxMIapyNuKdJ46zXexqMviYgaHI1YMZSKZYrQXMU
mjy9o8LiqXH5WoOhAVRWSxx9zCVWCogNyGy3gTeqIHbQe8vY/ZXC0VoLb3An
hGwFkHdn6WdrHr+GbhJOKWgD7Il2GXXQpeKeLAaebyW+udz43cu937/a//Z0
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
KJlCSY3FPuQNTGs0HVRqHnkmi8cvpTNyZfIqjbpFyC+1GXswUQ3CrUBYFQZR
Y9g4mnaS/fiIXtqu4jcq2HUiRplMUoXjzUxmFp2exf3/SjrvqDbTM+17N5NN
NpOcbHYyM56xx73Qi+lgwAYbN2xselfvvfcu1CVASCAEAoTooiN676a6jG08
tmc8fZLMnE2ym6/t98f33STn3Oc9Qocj6Ty/57rv65L0viJHUvBhSvEVSI4y
esJgK3G6j9NSW2qruv2PH8JGk86Xkk+ytDEEYQiefaHKklVluM7lxCglVxnE
WAYhCV+emB7/UULk8aBT78dHBl9NjL6eGFRyO0HOqhzpcgx312NKb50++ovT
H7zz7pEjNxNP70y2fL83dDDV+Pls/Uab5EWg+vPV9p8OZl6tdL3dHPhmZ+xv
r9ffbox+uzO53u/qtoll2Hv1cjyUkVuio+cO1otn27UzrepXi+1fb/btDNS+
mmv785PxlzMt3236P5tt/Xq1+4tFHww7QAZJ89GA/e2sb9jCVZRdL447ib0W
Sc9JLksPLko5X3E1mFuS9jTg+nq166ed/j9udkAM7FKWL9YyZozEpWr6hpO7
YKWOaFA+Xl4N+qq+NMmOy4KqwWTB7Ft2CtdcsjE9db/D3MItc1LyRg2MBYd0
qV5G5sUUoU9h6GF4RgSCGHz4YT0umECLpjLiUdhQDCaczb4sk2bxeelUcgIB
HwX3s/kpbA44mStV8pugPgklWUxMrOJcP5SeIk/NucknpbIJoLIEZHkYnZUo
01ynM2KYzFgwrlzKJRU3FTKjVX5joIUw1EFtriu1Gu6JRKk4fEgl4QJeCMkl
GC8MY8riaNwoDOY89ASHpUzNv8fEXMUWp+XdjEcW3s67nXknKyM5Jjwm+JOM
pCBsxV2jiquVs29dT/rwdz//9TtHjv/bkfMf/JPHyPzLwfSftnoe9xtWm3mv
x2verHifL3lX/dWfLXd/+XD47cYwsHs80dljk4mQ2WpSHq0gFXEjUk2+L8Hc
aNETx9zSP+6P/Lg38mjE+cVSx18/nfxxd/i7jb6DqeY3895vV7ofD9YF7ILZ
Rvkjf+1uj61VhFWWZ3HupdBux/Pyr9JzUvLiz+UnnRMjb+0Ou/7P6+Uvlzu+
XW3f6la3y0u7FWUBHbpbkDdZhX7UIgOCDvw1ZW60/EGUi5KtLIirwd5Ydomf
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
RO3h6Uv/HxmiWBw=
         "], {{0, 100}, {150, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", ImageResolution -> {72, 72}, 
         Interleaving -> True, MetaInformation -> 
         Association[
          "Source" -> "http://www.eol.org/pages/328605", "URL" -> 
           "http://www.wolframcdn.com/waimage/hset050/ac9/\
ac99116210e54c705c59c5a92e61cb14_v001s.jpg"]],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{150, 100},
       PlotRange->{{0, 150}, {0, 100}}]}]}], "|>"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7883877868065777`*^9, {3.7894081194149733`*^9, 3.7894081219501743`*^9}},
 CellLabel->
  "In[399]:=",ExpressionUUID->"2c1c6fb0-94b7-4971-85f9-a2a16470e306"],

Cell[TextData[{
 "\:5173\:8054\:53ef\:4ee5\:7ec6\:5206\:4e3a\:53ea\:6709 ",
 StyleBox[ButtonBox["Keys",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Keys"],
  FontWeight->"Bold"],
 " \:6216 ",
 StyleBox[ButtonBox["Values",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Values"],
  FontWeight->"Bold"],
 " \:7684\:5217\:8868\:ff1a"
}], "Text",
 CellChangeTimes->{{3.619438180044606*^9, 3.619438194929821*^9}, 
   3.6806087552363577`*^9, {3.690912239423643*^9, 3.690912239969633*^9}, 
   3.6909122972191334`*^9, {3.6923781123145814`*^9, 3.6923781126575747`*^9}, {
   3.694380048092482*^9, 3.6943800882154818`*^9}, {3.74351287362728*^9, 
   3.743512876130604*^9}, {3.790001363967018*^9, 3.7900013707960863`*^9}, {
   3.790083866086229*^9, 
   3.7900838741340446`*^9}},ExpressionUUID->"9bcf100f-f6ff-48c5-8259-\
eee4705a2644"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "assoc", "]"}]], "Input",
 CellChangeTimes->{{3.619438198219534*^9, 3.6194382015550127`*^9}},
 CellTags->"Keys",
 CellLabel->
  "In[400]:=",ExpressionUUID->"6a4ef16a-e25c-429e-a3c8-95f30d50504e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", "4", ",", "\<\"cat\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.813856623859969*^9},
 CellTags->"Keys",
 CellLabel->
  "Out[400]=",ExpressionUUID->"279888fc-9a6f-4a63-86d3-bdb2602f0e9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "[", "assoc", "]"}]], "Input",
 CellChangeTimes->{{3.6194382035811663`*^9, 3.619438208473506*^9}},
 CellTags->"Values",
 CellLabel->
  "In[401]:=",ExpressionUUID->"eb0c32a2-c643-465a-a3d4-f2e4a6401f3a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "100", ",", "200", ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw8uwdwa/l55Um11P36BT5GMCDnnHPOiQAIIhEEiJxzzgQIEgxgTi/366xO
r1tqSbYsW2qrbckay3LUJHvHs7MzXs/UbNXWVs3s1lZt7VTtev+Uprbq4y0Q
IPlY93fPd87hxcPEK670axMTE403wcEV62jq9VjPPQ0+WS83cplyKrlSbqYy
qbo4/k3wZBJ8PAMft491zjmTG2LzLLu9iKAXH1nHR5zYsB2R8ZMLUWo2Tvb7
l22uByvrd+2RGU8KYt+cDqTgsQI+nMWE0rhIlhBMET0hZDBJSRTYiTw/EKcH
IvRYihtJcDYCZH+A4vaiPBvoRIZea4mbPVGpzsqUCNU2s1AjpUvoVBGVKWMK
dUKxQcw1icESItLCZbrUTIscK+GieUymSAHfUq1zShVmocrOVVjRNNEVgnki
iEieHE2SAkG0dW1eqbsr19xVGGdUpnmJYU5uhgqNi3w9hGuE8EwLXPMi37Yk
tiNkNpTQAOVplwV6mFiP5KuhHNkSW7rIli6xJIsM4SKVN09izxGYMwTWPJEN
YUvgHCmCJ8eA4UqxLBGKxoNTOFAcbQFNnsOQF3DUJSxlGY6bg2JmwHEO9hBB
WMKQlqHo2SX4QzR+gcnGCkQUkYDIZqLYVCiLskzGTBFRkzI+xuNUs4XkB4t3
IYjpJdTU3NK30NgHBMIkiXiPz5wPeCUreqJSAlPLEGIeRAJ+N+pDlgjLVzHp
AvwM9C4CM01lIsw+qMUHs28g3T60z4sLegghBy5oR5VirGqak08xNoMI6/q0
yfPA5J9cCU46grPBNCJeJERy+HAGH8uTojlqIEkIp2mpEjdV4gcTjGCUAQhG
k1x/iOr0oq2OJZtzMRAjFGqcaodfbLCyVVK1yyi1qLkaPlvFFZukSoda69Er
A0asjo80CYkmMVknxMv4RImYKVMLVUahyswUqdkSrVBnpcoMfxK9HkMFM4RU
jp5M0QJB7Kpj0WRb0FsX1eZFmR4i0kHEhkWxeVlsgYqsUKFlWWiDydaQgKBA
v8zVLImMCLkZKzGgeAooS7LAV8LBcGVwumABEMQzpgnMOTJngSWGMUVQpgg8
D6XxYFQuFOADg6cvAoJIwhyKOI/Azy+jbxHAsLPLmFkMBU6kIwFEFA6CIy1T
aAg6E43DzHJYaC4LScLMULDTCiF+RcvSqVlo4tLdmW/NQu/PLt+dmf8GjjDF
Zi5KBFCTluBzC+wrNNcqC3Bk0yb5nFkeb1GlZ8r0LDoPMwmZWIDdwRFnLEGs
LYBd3cSv+XAuD27djdtwYH0ObNhLivhJGxsYm2tBtzaldU+qvZMa731HCBLM
ohNlSrRAjOaIyRI1VWbF8rRolpEu87IlQSTJBASjSQ6YzRjD6obqVmd0q9PO
ADxaoGQbzEyDlq6Ty1vMYpeeb1MLHVqlz2ru8tt7wvaBKNdnpbYYqRY13aSA
r8w16IA4mHyNkcgTkwVSsc0pdfmJKjWQxW2mMO2OrNdRNmvSbIYTDtM3/GSn
h2BxYGXaBaUJrraiVTa0zIoEKEUrtzQlFgRXt8hRQ8QmuMqKk5vRAhWULYVI
9RiZASvVoHnSZSpnlsh4SGHN0fhAlcvgSObME1mzeMYswEpkLpBYS4AgijQL
w05DMVOA3TzsPgT+AHCch0/CcPOAC4qwiAIP8BA0dh6BmkEjp6jkZRp5kUKE
yIS4VbNAK6Pg0FMzkDden5yYg96bmnttcnoCi3/AoM0KOAv2FbpRg7MZyMmw
0rXKYNPuAxlqNTi+GCFU4dkC5Axk4uH0BBz1rZUgAYzVT7R58TYXds2JdTsI
XtfteFzYFfuSyjwltTyQOx/KPNNy931bEBLMYJMVaqwI1EcEckhX2PECPZZj
AA1mivxIkh6IUkMxZiTBBnq0+xF617zGMWXdXNxIY8JlUqSCj1YJYE+mOxRw
zPcZpW1ubSRsHcrbY0VzLK8fiCs7wnKfV+yywVS3BPWBqNzigNUNhF/osOo7
klyPDX5UMIPrdGSDjqpTU+Qz/EiIHtikbvpp3g2a3oLUWzFaK1ppgctNcJkZ
CiTJ1c7x9Yss9TxLOcfXLUkMCKEWylMsgQH45EacXIcVyGF03jyFPcPgLXLF
cICPyvvvqsTRZ26HNoenz2OpcwjCNCAI5nYBQu8BEQGOU4tvzizfg8Aml5DT
cPQMGBhiamn5PhEPWYS8gYTdUyvom+taQJBBnJ+fmbhzf+L1BxPzS3cAvunZ
CRJpikqcZJDvG9RYDu2+RgaLB+UOK43PmhJx5xVSGIcP4QiXWFzIzPzEg8kJ
OGzCHCSBsWxSbD7y6jrR6SGte+mbfkYyJQnHuA4fQWNfktrn5Ovzci8EQLQF
FsB5S1XpsSI5lCUCWQF8kSwlmqUnCqxkjhVO0Pxh4maEEokzIhlmIE9Zi8JX
NudXw4ueNNyXR4LxFxGhKiZcw8YapESLku4ys1vswkBQGopaY1XvRN091jRH
slKXV2hzqgN+Z19W3eIBWwxk0ckmpbTNz24xgzViMIdLJsnZGDW2SfTY4Tbz
kt0G9zjx3nWKw0my2nFaM1ymm1calrVWuMq8LNDMUKX3KZIHNNlDhmKaJp0i
ix7QxdNcJdiiy0CMIrBIgRtyZ+mcGXCihDIES7BMFywBjhQuhMSGABkCgljq
LJo8gyAAy5sGSkTgZxcQt2sQzAL84dzyfcjyvUXYAxjqNxBRD+GISSR8EhBk
0WG+dX1006IQkTCw+/DlNyenvnHv4cTDmYk33pyYn5ugU2eoxPss6iQfXDCI
CSF7etVEMKrRcuEClzFJwn+TSHodR/oWmzNFJn+LRb+r1yAtYZo9ynREWa4w
0x2grwcYwRAnGhPk8sp4VuyN0s0baN0GXB9EGuJoUxTpiCGiBVKqygT4vDGU
L4EBSeY3PkgFEOMZRihO9oUIAGI0QU/l2bmuIFQmeVJIgG8jh/DmoGA28jBf
AR4oo8JVfLROjtao0Rot3mAkmszKUNLcV3YP1Y1dabHDzbfYgGD3QFof8oEz
BosYQBzgi7bIvgpmM4+JJfCJMD7gRTqs81bznHMN7t8gBgO0DT/VtU402uBy
/W22MbuQJidCYYFQRG8QhXfI4rsAIkBJFNyjCO+zZHNMyQxLMs+RzLNFEI4I
whUtCsTLIjmSL7tNMiDPgHVK5S3dQrwVIDC7W4gYyjyBAZLMIlDiAmISLFI4
dh5ABAQXoPeX4JPLsEmAD42ZAT4ol9IAvoDPpFMwCMA0Ia8joPeRmOlF6N2Z
2Yk3Xp+AzE2QcPcwsG/QCW8SERPoxQkO7a5MMGdQoZxWmloGYzMe8HhTBgMm
n9dn0+qgj5dPqtei9PUE2wdSR4LjCzM3Q8xIjJtI8ZNpQSLDDyRZzjDRFsbb
k0R7lrSWJW7mKakaK1llr8cwqxtLwN38MUIwSY6mqXFAME2LJMj+IG4zhE+m
6PkqvzGUAFMDZ36zgAgUkZsFmD8PBcdoDQfiSrpNS7cZySYjXqPHa8xEnZVt
cotdYaUvqQxExR6vtMWv74jaB5LOobgwoIOtWxiy8ttMkHZ8FVSohAUhp1Sk
p1KkcBgbCuOjCWoizYqlmeEUK5LlbEQpJteSdnXO6Flc2YAa3Es81SRTfp+l
eCDUQaSmZSHwROUsUzbNkc+yZXM82bxAsSRVw5VajApc+Sq0XIcXa7A8OYIp
WvrtOiWyADUIkbmIp0MAPjIbRmTA0CQIHDcDxAiMD4qcAgIERxhyEggQi5uj
0mAqBdPrMQT8Fo2KjUVNL86/fjuQN4ikRRxxDk+cQaPuMekQLnMOj3pNyJrl
Ue+LmFN6GVQlWXSvMrIJ3bqD67YzkzFlpbhyfpzq1h2bLmZ8U+gJU3xxRijN
CYEEEqYHg+RomJaMs0olSRnEg6oonGOsp0iOJGEthbfFMYkGv9ARJatcRxBu
dMzYvIu+KB4IMJahAYKgMkSTlEAEDyaTZVUawtaOGMSVRBkbLSHjJVSkCCoA
HDwu9xjVAbs5FNW3xZWuoNDmF5qCQkuYqrDTde4txx6/ui1q7Ip/i2/rTNY8
FNQP+a1jUXWfH2uTgmAJ1/HlNqPcpOcqlCSIVQVyukgHsWozgU9XOcWuONPg
OaMonWtG55k2+eaNngWVbUGsnxXr53VrKNsmxbxOAhbJVsxI9Msi7ZJYvagw
IPUWvNlGMZmJGgNeu0KWG4gCJQoUjd8s0jkgQ5BRQSgFeYbIXAYESUw4kOF/
bxbERSR2DgyOtESk3A6LjZZIqetuvd2mADIEYlxeuANfvoeCT8Kh9+GI+yTK
vFRC0OvpPrfCZeepxHC3jbVhZwXd/JhPsrZCiQXljbIjuCFJxXXJmHpFjzdp
MFLOrJwzE/Hw/WF8OEaOp+iJJDUSJkZC+EycWsoySwV2ocjOFlnA5oJZsjdN
cKfxngwhVGKGi8xQgbmRIrkjmLUAwrGJcG0ig3FitswtVECJIAVDmESSXCxw
CyVmbyAY7As7fRZofIUKLpGHp/OISpsyOpQdnKq3d2X1Dn9rIOtuK6o1Qb7M
ydV5uQa/1BPVd6TNkaS1L+6dyvce63ZvNMNr5da5tH0sBCgre5zMFg0QLPao
tQGz2mdkm+RUjZRt0rMtRqpOT7dZtT1ZcVu4WcG7swhHamk1DnEnkbYNVCjF
XXGiFSaII0gF7i82QuQrMCBJgXYBQJTrYRozSm/GGUxYjQGrNOBFGhRoGUCD
wBCBDCncxd/uUgpnmcqFERi3xRC44W8JYgjzaNwskB4QIAo9TaPDZXK60SRy
ODUqNZtJR4BIQyXDOCwsj4MH/YIvwAlEWI2a7nRKQj5tYEO+6RYFPCKwNoH9
gSRj1hFAoXDYWCYdUSVDahRoERfCpU0R4d+QsubiHkk8Rk6nqZkUNZum9Fri
87Hl7NC03ZEUs+RsjpTM4CNpXCCN9SWxnhTGk8QFCozbydE3UmRvjLAew/kT
xGCaEkqQUgVGpsCMpcjJFAWwK5U4mQxpZ0dyfq49Plb2eqxanVgsYSpVfH/A
fvTIfH1t3tuTD/rio7Hx6NDcaYnzBVYeaLzNBysUBM7aDr865LSPRLuP1IBd
50TUHPPbh/zO4W3vqGyzcy1K/1jcGfMqQ0aygU3UsLktemWHD6Y5BqzljWNZ
aY8X71F8FYSnsLyRQ0UydIsd5ovQg0mO0QHXrSEMbrRmDSm3LIOlKjYsy4xw
7QraYMGCARyVBtxvCQIN/jaXAgH+liCJtUhmLwOCwA1/SxBPXgS+hiNCaEyE
QEzSaLkWq8zl1nk3TLZVhVbHk4jIfC5OwCOCARBpdCSBuIDFzZBJc1wOXCJC
SwRwuRCukaPkgiUQPrmMKR5rVqvE2KwsnZbIYc/z2RAWZYpFmcHBX+ORplxG
ZjZBKeXolQJzqyl85/nGj3/Y+OKTxNGeOpPEhENQ78acY33W4V9wR2HrSdR6
Cg82qjtFWU9SPEmiJ07wJUihDDUGwGUo6SITiKhUYbdaon5f1qwL0il8o0o5
P1VfX+p3h/xeh97vMUc7/LMT5csX9kdX5tFQMhrKnlw7nt64hluKfJ5erHMB
wXJfWBsKS0N2cZtRP+BunYub++zqDh2Qao64/bG0D6rHtqjSYTZ22fURHbyU
H1CBUdb2uK2xuHkkruzxcgNG5UDQvZQ3TkTVMa96zK2OeKWaMJPiJpNc7yYp
XZHmm2qdA6ZzIlUAog0hWYHKVxAaG8a4hjfZ8QYrQa7DCNVItnSJIYLQ+BAq
KBpcsEXnb7vhb9wQEMRSIUCGYHDkeWBqVNqyUETQG3hOl3rdqwcE7WsqsYTC
FxBYbCyVhiCRoTj8Ago1B4PfxtSF5TeWoK9j0PdxmHtY5Otk/F1ADQhNKUXI
RFAmY4bNnpcpcRI5hsacQyK/hUa+TiNOE9FvihmL6xZ+Nk4uZKjNMvf0wPid
T9N/+PvNb78f3N4SAHwu95TB/E2V8TXt6l3rBsQRgbvimJUAyhrC2UN4RwTv
ihLcMbwvTgQyjKbJmRKr0RKClbi7q97eVpRLjGBgKZ1AHu5LLk7UwwF3u8fa
2xUcjkSH+2LwzPhAOuhy9nakLx47nz1yDbvSfI5SbvJzTXahy63vCpqHIoCv
fsBuHbAqQ0qhSyx2yJ0d7uhItXeo7g+kjTanucNp7XEbe5zKNrO4xSgPOM09
UXss65+pmweS3omyd65ojYW9c1n/Ul4fco+P7KWMIBKklMvSj1+1Hr+TUdkW
FfYluR0qsYLWvyi1wLRrGKOTaHIQdFasUI3gyqFM8QJNAAo+5Ddzq8TbWkGf
AUoEEIEbAoi3MiTOkqiLgCCXh1GqGOYV0YpFDJQI8IHEAuSGxswtQx/Mzb8x
M/ut2dk35iB3FpbfhCy9DtyQSJ4jgTyDvIPH3gVak4ngeh0JDI+3jCc9INFm
eSK0VElYhn0TCp0gER6C2qgWY0LrylSUHIsQixnG3lDz+MpxeWHb6kvyBdK6
D2J1PdRY7qgsb6rXHuo9EO06RO2al9vnVY5l4zrSuolxhHGuKM4TxrpD6EAM
Bwj2+vLdPQ3AV60wA5vLK+bX83n83p50vC/vdpnbffbuSACUWK7ggBi3tthb
HfZoJHtyYz87Xek2+fkCpdkXgw6Y77DAnty5Vu8+Um6d8Jv7zNoOtdglljvk
wa7wcKw92NeO+ortnuTk3LR/pt0+lDe2+IU6s9hgd4ay3RPjzrFh79y0c6Jv
giy0Kzq4No4fGfsj2em+zWmYa1dkf/SH4z/50+uTRwGTBymzLfBN02z9FEs3
LTQvKO0InQOrsiFlRhhXvsiS3OKj8mcBPrpgAdQKYIgAH5ryENQKEGnofARQ
IpI4g8RNEUizYCWymNDbcKLjaDUsID0yZRmBnEahZ5GomVuCc3dmZl6fg7y5
BJ2cBigXXsfgZzg8JI2xiES+AYZGm1HKcQIBjMmcJ1NnUbgHCOx94LkKAwNL
fgBFfQONe5NAuKuSoYNeeSRM3vAiN/0Y4IbZLD0UQXsDy/4owuKetqzPWLwL
lk2YeROu9S6LbDMs/V2uYVJomlauLgCI9gAgSPgtQZBk8lX29o56/1A/6Etz
WYLHPW0yfrNUJvcHwm6PV2/Stnf4e4fido9erGCbHerWNnsw5B2MFReX5v0D
dbPFqbe4WwcqUABLfXbvSHr43DB+od29FveO2J19Vm2L0uhQt3eERwea8wPj
9dj69Nw5PjTsHehGI93unm6wreltAW1qd0em/QPLxY1n/8Dc6IoHQ8XuobY/
lHU7It/q4k5F+ePvbv3Dv/30F7+4ag2MgKDOg+AaHjK092iqe2z9jNQGBRCB
GG+7hmyBKYYAghTeDFihv9UgGCxtGkl6AAgyhUieDE/hQG//RIO+BwhSyPNs
FkwixivkVAEfC9rE3Py3pqZfm4fcgcImwUAgdwHBmTmgwTen5l6fW3wTT1rg
8DFkKmR+YWJp8TUKZcZm4zNYi0vQ16DIO0jc5DLmAZwwTeIs4xnTS6gJBPY1
HPGOVoONhFUOF3rVAQPjcEPXPNBV96JtfcHuWza6Zk1eiGUTvhJCm4IY1QZC
5FjkW+fYhkmO/r9DNHngqwG0M4ByBpD+CC6Zp7a7kp2Rensgq1UZqTgqEIBU
G8x6l12oUfJVYneHOzwUd3c47W1Wa8DcGvH6e4LRkeL4Ug8W49aueHSs7R+p
QAEEKaW1z+9fSLavJNsXgu0z3vCU3x7SAPdhn38y0j4+sn76PPrjV81nF97D
XXO/qdxqqrc7ul5DUy9Ky1nh6YHr8XVgb2BuN+SjgT6VIFtN9zY90Pwm8a++
Ov6Hf/X+P/zdh1//dJzKc81umDvJULlgIts80zDFNc5I7TCVEwUgysxwger2
5gVdOA8IkrnTZM4sMEHQKTDUKTjhHiDIk+EkGiqQIYLwcAlxh0JboFEhdNoi
gMhhI6mUReB0s3PffDA5ASAC9YGZmvnW5NRrUzNvAIiQ5ftz0HtI7AyJvgRH
PZicnliGvc4ToKyrIo4ACUO9uQB7fRF1D4K8Pwe/O498A0N/sICeQJFeIzPv
GU2EeEJjMkBsNqjDDrPboU4PwhfCuQNos2dB65rXuCFgVO4FlXtJ64YbNzA2
P16mm5ZqJiXqBzL9lM4yb3ZCrR6YzQtdXV/2hJCJHK3eEfQGkjZoczVGoUzq
7Yha2/xsg5SqYqt9em1IrwyozRGrscvs7HNau5z+WDy+1Bycaw5OtdfPnb0D
1W2G6TPL2/TyLrWyR26PGYDg3iVAz2q1GIOO6GRgePtk48cfNf/l19e/+uri
3etkNSEKOfBhJynmoUbdlIiLDB6AJ1M+eiMlvthxpH0Ug+iNYpD265+c/v0v
nvybXz77f/73P/7qD/Ysa4vrUWK0LlxLkHU+lHgVIrIuKF0ovRdvWCfqHHix
FsFXwn9T5wG4GSJrGqgACBCsUBjuPo42J1QSwXJjiVAIwuQi/HWgIxJxFo+b
IeBnKaQlOhUGAidIL1DoQ9jy5CLk7tzM6wDl7NzrYJ0if3MHanrhzQXofShy
cmb+G2/en0Bh7mt0DICPxYMTKfOL8Dcn51+bXrwzj3iwiL6PZ81Aia8RGffp
3Ieg7Pg3xd4VeHyD4jEv2bQzQS/e7YJrTVNrm0jF2hzffFdguqtamzGuLVhW
FzY3sNW0oJUU5v00l3FBLb6jVz5cW0PY3QitdV5nnze4FzbixFxLUOwIkhVa
ukqrdbmdPWHvQNje5zX2WK0jTu+CXx8z0n10qocuj8jA4Fp77O1D8dGF7vTC
uD/W7J9bhycGkEZKA0p+G1few9X3CY09UqVLuHq80qhwT3ZsH1wl3z2K/+Xv
XP/rn7z9q997/NPPT57sRNsx7SBrAtMMKTpRdTMg78VUVZ/w7VH4w6OknT8z
zpn++KPhX3zv5G9/+uT//k8/+Y9/+2mvoUpmmJkav3VozPRk6zm6PUZZjVLM
PtKKl2zboJtcVI54kS1aIjNnwXDFSLYQTqDOYUnTYJaRd5YQb4BnNCYaS7AM
w34Tib9HZ8BAYrmNmuhZ6NIDLGqBRsYQcXA6BU3ALFEIUDJ+CTL7zcl7E9DF
bwHKC9AHCBzk/uxr80sg1bwxPTfB5sJVGgqwP4EIwxOg0bjpZdgkBreAwS/P
w+4vIO9A8Xe5YrhQhjCuUJUqVHQVu1NWd9PiuBOX8lNCGziDeUZjm5WYJ3mm
NwFBtXVq1bEY8qGbSc5RTf18sHZRNzWCbJ9p2a6fc63BnetYixuusS/oXItr
EUykwk41OZEyJVEF2YM9OJIMjsT9Y+HgTLh9LRrcCJsnzNwuoTgiNsaM9iG7
vsNobbO39yWHx5qDI+3R9druhblzKK7t0sojQvUA1xoT24fU67fMN4/svbr8
Zm/j1ZPaJ+flf/fTT/79z1793U8/+uXvPPv0snnVCZ1W1zshbdrKLjqFw6j+
eS80ihv6QVXfr8gYKEdJ87OW9zunuX/1B4/+23/6w7/46VWjJCnXRfWBotCX
Zvsyb57mStO8OY43yVuP89dDfKubyZdBeRIEnbvAESHURrpSR2fy4CQ6hMxY
xBCn0MQHHBFMrsNTOdNw3GtE2iSwMyJpGYuDoNHzsKUpBHQGi1pCwubxqGU8
epHHwMgEJDZtiYybImEfgAZBosDQxKVlxEMY+sHU7AQcfUerpwvECAYbIlMQ
FCoKiwPHEyA4wiKOsARHz0AQb8Ix93gipFiGXjHTZVJ4fp387lng05v4QV3b
yYlLaa7TAZXp3pQa7kot9xXWSb19xr+J7tbFz8euz24i33uWfnUdv+7bimGG
dw0GNOsNEMAisvqRZh/UHkb5c+RwiRwo4MMFQqpGao8E7dsGJxpdyvdv5INz
cMEzaiNKd8zaOuZ1DriVLVqpRa5vsQZ7UuCDp08de1emrWNJ/ZBeOyTWx4T2
Eal3xBodS0F9AH4HCH7veeudUfKffXj29bvjP//+Lb79wtowbTksONpBTckl
6Ed146zto8Pcs85mwyMqWVnDoHoU1na8ok8OEr/67tF/+PMP3r4IF5LMWl3c
HWmzHX5mS+wr0TcKzEhDHClJAzmxN8JfcVLlWrRMjQUXvEJDtLtEFrtAKMVQ
mRAqcxEcGZwF8KraQGDwZnCUO2wBRCInESlLGPwcOOcgfy4vTy4tPQTet7Rw
D7p0n0VHaJQMhYwo5CN4nCU6fZ5MW/qt+jCEhzDUGyI5ctXBg6Mm+JJllZ6o
M9FBg6CzoKBponCzCOzDJdgbcOSbQiFSIcOurbCUIljZT/38aeLn391+9Sz5
5MC939ElohTr2rzRMQeC6Mr6osU9H48TLw5WfvB+7utXjR+8zH7vZfadc/+g
Ko8FCZsBbDjNSFZ4oQLTmyaByu/PEwG+jQzSl0IEs8jKFrMxZO8cSY9vtOMr
5faY19tj9Q84wyPh1j63MWAAfMAlCy16a0e8faI5eWYfXmnax/z6IQ0IsHqA
aR4Cguy9E/nxkWlQVzViki+ftH78cvfff/Xt/+PXP/lPv/rBR2e1ml9R31Tu
pCzNTVV1XTxMGC8q7tOi4/8nWLaxa3buXkTzi2+Pfv7J8I9fDfslZTHFqlT5
3ZG6PlKmenx/mRaosGMNUSDP80SZ9g2yzobRmHC6FZJSh9MYiTYnz2hl8ERw
OhtCY80zuYt8CUxrIplWaUL5EoM3JVUjFRoymbZw2+sZUNABEciHy9B7IIsu
LdyZm50AFqmUk8RCFJsJUcjRq6s8lYaGxU/Nzk9Akd+kc2aMNqrWiJtbnlDq
kSoDRm3Ey7QYnhRGYc3hyDOAMgJ1F4N6UyKAa2QY9wpTK4TnfcS3jj1ff975
6vPWZ8+TVwf2dk2SztD8cVwgjXcFEVbnTCCA2O8r3r/e+OxJ8PnY8fx0/fpw
rd9UpFO3f8dOlrmFjiTTEsVq7ECFHCwRg0WcP4fczMICGVh9mzM4EB1faa+f
mM6vtAeHor19wfhIMtoTtruMcp2Yr5OydUqmSS8PBb0T9d5jQ/dUXN2nlvYI
xT1kYQdeHeE6+4zDM83LFwFgxGbh9LePcn/6yfnXz3f/xZdPv/720XHVU3CL
OhFdP2YsOIUZG6vuEV+UneU17lXJWVnlpHUEK/leWIa4yFt+9v7g6w+3fvb5
zmFL3y1L2m3pzqGhf6zLbfEjDWasyY01BJ4E2bKBMTkRmpUllRGut+DVRqxS
j9aaiTINiiNcuL33JIUKZTChHAqe11uIEtUyTzIHvgxsVBoHQmUvANMEUYRM
h2CJU8uIW+HMQSYIpCm5HMtmz+MJb6g1mGTKmEisOBxCJnMWS3xdroap9HAq
53U6747JjlWZYVLdkkQPlZtQUj0KBCqOcIlGmabgJmU8uFaMchtoGt5S0oPe
LkneOfd9/jLx3uXm6Y5p0FE026JkiR4r0TxRpMkxueacTsWw7Tyzm2M2wORZ
1Twzm6ZFY4RQghDO0iJlBsAXqzPDdWqkdnsXPlLFxiroRBXTGwl3x/KjM83Z
mebyXHtzqr06Up2MJAfbgnaDXioRQNFIVsnhMiHV47ROVYMrZW2fkRvickNU
bgeWHSyXhtj2Hnt0pHl84wvYMWz4xHXd++efXV5mnZd5V8Ujia0wqj75UcU9
TK4UHLy8jV1a4x2mVwDB5y3/RWFt4JcFxNCYEr0TlN9UbN+9yvz1j04+uI70
a/J+XwUItvYU1ZEs2eUku7xkk7eeIK76kLZ1pHENqjIs6q0ojREh1SyBMyxS
LAokC3ItEijllpcaIdfC1XqUQD4nkM5qV9AK/e1dfvFvb0spUHzgaJwFFO7N
Zfg3lmATNOaUVIFkc2aotPtaHSYUlrtd/FhU6/dJbHZKKCIyraKIzAnDKnR1
A6t3wmTmObl5wejCr22yLOs0rRkvEUDZ5BklH6YVI9wGqoqzEHAtx/3oZo6z
3RD3ysJ2ld+sCwpVZrRACuQJngSo7RCnbz4QhEYDsND6QiqKjgTgft+SPwDf
jKIDSZwviV9PYjayWKC+aJ0ca5BidXyyjss08bk2ERDc3pWAUr8zEDw9N332
ru+jJ86rXcXJQLzd5DRr9HKNHsyi16LLgTq1daHpXYjLI1K6D8/tIPJDWKYP
LW3ju/uCqxvH7rbZKJkizEzkrKy//Z23vrrp//Vn12/1Y5dN//NhFMxO0lTf
kDa90pKDe15yDELq84Lt+5eVZ431y8Jq1y3c3pTuhiU3TdtPP+7+8MPKsKHY
7quH+7qtQ017rEp3OIkmM9nihEv0QIbiixJW1+EWO9zqxBjMMLl2QaODKbTL
cuWixoBWaeDmVcKak2p3U1fXSDINRCSd0plRajNGbSGYHTS9jSTTIaUaFE+y
iCJ8cwk5gaO8DuhLFFBwJdhdjEBI7PGwTXpcNCDrNJ31hrU3WCs1NSAWbkRJ
ziB6NYA0uJcUthmDB+GMUK1+otIEVcrgfMacWoIyK3G+Na5BCne5FlwOyAYo
AmCckGQUlytQQ4BIEuVJId0Z1EYWAzJJPAfKIyocghZLQHqoDf+SPwyP5oiJ
MjWUI3lTaGcMenvHvEaMNwjxKiZZw2Sa2HyL2B+JAL5WnTFocd5/4vqTH9Z/
+ir37onlalu13xX32/xKneGJQHWeSU8B175U9y6EpV18eguWHyIKO8h8H1XZ
Jm8dyFptedBLlNDeIE1PiJYnvjypfb6b/7MPT//NVx/86O3dt/eSo6wFCLDp
l++lTC2f9INRcieqi2uw3z0rXhXtrw4zZ+mVJ1XHO1vrB0nFh+MAMI5x37Cz
rd050F+88HSO1IkmA2SwVPP2LnO2wYlnqW4/4jan+YkrqzCtYcFkQehNcKV6
SauHc3j3LTZ8JCbJFtSRuAi8JFVMa81wYJ0rHqprk7PiJMv1MIUBLpBB4NgJ
NGmCL5tVGxAy9dKqi9obru+MNjc3+fm0rpDS7Q39W9214a7z6lm0vWNM1XiO
CNKdwFoDULltUrE6Zd6Aq9cWWJI7MtkyjzmjVaBtJkp0U2o3E/1xTDJPjaWJ
gRAyEIB5vBCbc8q2Madff+hIIxxZpCW+4MkhwZaLFfDJAiGSQuWr1GyFFkih
N5OoVJWWqNJ8KZQ3gfCnkck6qbzFLHTJySqy2CWCuHJxYwA1vFYkPzkz/9EP
an/5k/4ffpb/4pn/Zqg76SsPBorBtgz8EEcMak/DQy1S54y7fcnO9pbLO6jy
Di6/hd29UO6MtU4nTMJ9g42ZoM5OGMnTWT39MKT/1UcnX72ze1b3tDYV23HD
bsLQD6u3w5phRLsbUd9UnSktvmxlvN8P7Abl7/b8FznTs7p9sMkfRAQ/+6J/
MjDv9jXDXc3BhaVzoKzvyVJ1uiuy7AwuhdK4dImazFECYUI6xw9FGBYbVG+E
aHTzCuWsSr2gUM5LZTMmMzISFSZTMreHvGJB2tawYtWcVLcQzkizNb15DQfG
6aMLFTMWBz6UEKUKqnhWXm2Y9w43u1uuSFQcC0g2PWyfh7lqQ69YoemyYHBk
LQ1kngTa4J1Vrt3X++ZWQ/AVP1TvghjWoOsbXLkYxmZNSySLSiVUo4E5owjg
d8UWv9YRVZrcaArn8i/YAwuWwDzAt5pBmJOLrjzSW0D7sqhoER9IIQHKeJG0
mUKvR2H+JCpWJKVr9Nq2INOgpKukap/RHXG7I9DTueMz2dOn1r0d8U6X+9b1
6k++U/z592u/90Hq00cbj3b0475ib1txcKjr7imSLWawTkn2ad0z7u4Vt3tE
HV0Lhuf83ph/cGmqtsVy2X0B400B8a6euZBZ4QyDuhdV768+Oj4rO3YzK/tZ
63HJcVpaG+esFQdvlTkzimp6PglYnmv0h2cZ00FU/ahsP4ypvhjHbyorH+wH
fvRe/Z2rwPG+tdmSgMu4uSNr7EqzLZYvgfRGYbEsNlehZIrUWIqaLwljSYZr
HZzhZZVmWiS5J5VN0eiviSVTVhvWv8kMBNkbPrrXR/EF6EY7wuxCp8uKzo49
V1ODKbcN4SQ/EOPUOqbOljWaELrWyV4/0+2hGvUIvRIuZD/kse7xuG9wBN9c
cUCBANNtAQgVwRLJXyLG6vREkx0skIEqwYK12UkM5kMc/jUO76FYOidWQNwZ
bKQKzr9se2zobiviGZInsOQILTliMEDQmoHbsghPGe8pYgHEVIsOQiMIHskK
NV4ie2Nw28ZsII1p7UjPn601h4JMhVjt0vZP5WePtGfXypNzxeW5Zm8o2B8I
X1xZvv9h9Icfpb7zduSTp/7rkXGvK9vuScZHhsMrc/9Y3TpSbF0oj54qT58r
zl4oL9/W7V3Kd06Vg0O9L0CUiacUfIiEMu1WEIsOadku2AtpgcGBnVl2C6rr
oq2Ipr4uiumJATnCJ4E+qrkOk4absr22yqiYKRdpU9/DO0vqfvFO/4dXhX/9
exefXsY/vI5fjF3DbX0yT6/2xPVtSanLAxdkKINOlfAgYpWqtEyOmkhSvRtI
jwfsKNL6Os5qga/akJYVRDjEKZc0YAp5ZbWiaTWNjZYxVZCly7LO0Hp6Ez6+
CrQG5liW7wtS7C50NMmNJ3k2O0qtgZhXEDYLRqtelgsXSJhvoOETeMIEkT4h
1jxwx/CJBre4LckPRSAhp9rsRJ0FrGrND9WYZ212IpV2F4v7Blc4I1Eu8GUz
ziTWGUdGi9Rykw+WxmYQsRlBhTN4kGEcaaQ1BXcVsYEWzV8jgZxZ3RPX9yTp
Bg1sm0KXG8riLOvT/gRysK969q5/sCcvlEnNLh20hucvrY+f6E/PZON94cGQ
f7wrfnJmfPeRA8zLK+dbl47xUN2ucSplRm8gGh6q+keq3QvD2XPr1QvD+RPl
5TPNySNVf18I9me7r7GuIpXSRZC+JOT5gJHT8GvrHulFcfVx3XmQMW3H9ePC
6kXdA2j2gsr9pOG8ZD/JrrzTC+xHVMdJfVCwsBeQA4KDdf6fvTd8p+UBbuiW
zmS81G5VVauKUwVWoSmoDaQAYqHFzJTJ+Sq52qTWmoximREKY+1rkGAI3+lo
+v2Vek3TqOu7Hev2wAGm07aAT9stU7ezAo7pvDhXlTe7htObwPN30rW22mCZ
lynv6k2zYA+bTBC1agpcA6Eg2+9lGDRwCX+RjHsDBQgSv8EVPzA64IE8K92T
pHuiWIvtyxEcEfjtu9NB1w6jzKuL9jUShzNJZ95VaaByzRKLfx8sWI1jyr6x
5A+h3c4FjwuSjBNyBbovhl5PohxJhLeIj7QYoRo13mA0DhSNfXm0SgmViLk2
O5wjgK7h2Jgv1VmnF5atbXG1Ruv1uefn2idPTY9uNGfHkkdnikenqifnumeX
xkdnhtN91eG2cn+oHHTFAF+pTG91ea2+oL7F6Y3Ex9e64wvF+ER8dq3eG0t6
O6LR2Fiuyc0rKI0cqRZjZPTliEXUCOhAYnnUdF3X7Zc158ud2FXdk16hxbQ4
wO7dQWg7qOj7xNel1ac1Z9fDb9hoxzH1y4brICQ/jemeltd+9en+9x+X3xoH
L/Y8iSgtkWaUGoJ6X9rekdcHgkqbXW7Say1avcGo17mlEieXZbVbiuMj5+G+
a7tv3d9199rWbEq6uUEP+BiRIAdMwEfz+6gWG8zhwWwGqf1dy4u3072Bwe6E
2mwLfj/O7ye4HCibBbrhIUVD3DULlk2/S0DdwcLfWF6aQOFeU+hh/pQg1VQk
29L1LNkWQWic01r7Q3cImavwciVuOExdXcGJ+TMS4ZxRj5TK5ij0b9iDSLML
shFARyK4dXCluaG5KCm8ibgVYwK7kcB4M5hIlRopU+IVarEv7B5rMl0OgJio
UtejcKXpWwrtxOraw0qFBYjUa8xBjzs+kJ4fK8+OZacHwreude8+MX3wYvW9
F/Znj6znJ/rDA81oTz0cKbe2pcOR/OBUv3eobG+xuwPu4ZH85FR+fqF6/MQ8
PlYdHOkHuwaPl6CQQTQyjJSL0vPx0VV5aUPd2JSPc6ZRSr2fM/fCarA8zbRJ
QPDdYeTL89Jxxpw3kZzMhykNpmKl1SyU/aCsYia9qKy9XXG92on95avjn3+8
d1Bb6ZbUuTRvf7xWbUsbA0V3pOyM5O2BsNZh1BpUcEE2GrzdXf3BvmW0a97q
6TIpfihAS8UFsTBv1YJSK2bNBqhrDe92EByraDCrNvjqGgKYZqWuuLj2D3eM
8QQ1maL7NjDRCCUSovo8hHUnft1BNKihLMpdNPRbBPQkEv767f0+C86bELiT
7LUYybiJUDimBYY35OZ7Dh88nqLH4hSfl7CxRjYrYWY13GpEK6QzXPad2/uz
fkQ2w6zmuJlNQjPFHADj9iJ97uVIDAsg+hKYaIGSrDBSZVq+xemdaOv78tJA
lG4wvTGUce2hfuWuxXY/kcABgsO++GhffnakvD5VP77QPLvSvPfU/PHb9s8/
9H7+kf+jD/wvX3punqydXluOLi37p8ajS/PNc+fljWXvQLa3Jz6/0FxdaJ8/
tb587jga687P7b2eTqOel4oWFCIUm7RgUTBiDnVhQzXMmI9K5pOqOW4m+ZXo
rJUBIs0Pn7R+/YObv/ny/PefNoEDtt28qBz6qGy7zBifVexNK+374+wfnFU/
7AZBufj6g+EHp4nnp+FR35rJ8Jo9VXOg7uyqevvK3o6k0WNVauRiiTQYyPf3
TVs9dT7HiUWp627simnRbFjyOIlg3A6Sa4247iL5vbQND8XtwPk2SF4vHsit
XJaORtZeV53NsNIput06v7mBjQQpAQ/R7yIG12leO8WsxTKIc2wGnEaFcARQ
o4NhdJOllmWlc9ngR0ptD4X6O0rzA6tjweGG3/4J2oFuZDRxN9dnpTiMWL0c
opHPrzrnHY75QprerQhbWc7ljvnlmadXFKzb5hJhfDxODEXQ2Tyt1uDX6/za
7bvI+I19cXtfVupxEiVyPIPP5kjFArVUpAF8V+emF89sL1/Y333b8dGHnlef
AHDrX34W+MGX0e99N/bZ5+H3P/I/emEfX5tOHlt2TzUgqJzc6E+utftHUhBc
Hz8zHR1LHz023dysDHdkl5eurS2jRrEIuo9Nz+JTFtdUbLea5ZDiEhZ6zITP
2gh1L2cYU11U7TdN11t9/3cucp8fpy6LK+d50+eHsdYaLa9HXWf1W2v0R2ld
3UR4ll99XnX/+Gnnz79z8s5BdNyw3hz4tuqa7S1Df0szGKp2RmrwT3e63EqF
VCgQrs5s+9u6RJjosM77vZhomOF2YoyGRRBm4jFePqcIbbJca9h1F8HjwAG4
KyuLFsvC+jqqUORt9TWdrvw379mjBYPoWJQUC1NCfko8zMqnZKmoeMPF5dCX
uCwkmwVVaIirHq7chGIrpgxutC2A164tqswzRuB9TrjHgw0HaaW0+KTvayR1
EQdrTYsyyBYtWljAO++2P2iXWRf7xt225Gp/5e3LjZ26LOZBFaLUTJCYDuEz
QXy3JLg6sPU74u1jef9UsnUkHo4lx+fa60crN5emsyP19blhbyjq91jHJ7LH
L8wH55KdE97NS9P4QrV/qujvCVpD1uBAdHipGp3K6tvMbBNb7lNGV9Kb980n
z1XdMbN3xDp+pjx9otg54u+MxY9euMAKdTkxNjPWpMbpJTgFE+ZS05N2iU8J
dIdp+cTjrPaiavxovPm7TwvfPgxclg2PG7b3Bt6njdWKDf/Blrugh9kwEz0b
9r2S/jvd1RdZ9cv62k+etv75lxc/fFT77CTz8XHitLbyfNd73rFc7dj2WspR
R34y0rZrjEaF/Oxy9f3rjU6KF3UgEhuE0DretQa/vSXqQJlt0HU/KZuXVMrK
cJC+YlhY0c257EizeR7oZc21HI4Tdg8NByemRptXrjGTGTwIRZUqP1/gulzo
dQ++UTfmcjo2+/aevsHMCIQ1RguFJ5pVaJcNVpTVjlFqZtXaOZNxSa2YNuqW
khHBTsfRKpiDLpZJATUplp0r+I01ai4OL6XRp3uat24cp3v62/efHK4OapJy
jF5NMLMBYj3F3q1Jn47Xvnwv8/bjdUBh60iwdSgcHorGx4rrS/3NhfHySHOy
J+82aZUSbrDDPblW9w45xS1c64DV2uNV+qxEBRcuwIsdyvBEuneh7B8JSn1i
fZcyuhFfvq8bP5c1jymdM/r4peziHc3+laQ/FoEFW2/L3C6s10H3WJkS6pwA
P+2QEcvrqopbthVUP+v4PjlK/OHb9V98uvXjtytXdXPLxzzOat4ZeF92XZ/s
BX9wmvh4yzVwkory+Q+rpj99lLmOit/tAAG2/vqL8y9P8x/txn/nuvLRXuSD
veCnZ9HrruWya3x2uHq2q91u8cc7spc3juf79t28pJXgNdOCVIDqtMMsliW9
GaKzLNjcqGicUyrJ0knehhvnXkX4XGinExYIE3xBTCSJH4xUh2eGzrag1mHF
s9hKk1PviJJZhlr3wGCCgOqx1Xfr9HixDL6ySvduinQGtEA0rdUt21YxG17q
ihmq18wbdQsreijwzViQH9nkeywkswKhFUPsekxknZMNSzNJRLtBP9pTnxxo
d7fk/ZaoVxU1C9xalpOPUdMBwk5T+fjY8fFbsd//ovrxe9HtQzkQYHdf1Nnm
DbZFRweqyxMTmGaFkU2gYuHlRos+vlAPjsSlLXJt9/Y/BhY6tFAO4U3MJ6qY
/rH4+Knh6Il291IyuhKfPFefv6PbuRKWd3CVXfzggvPkI/P5C+3uiRRUjGyR
A67VeFAc3ZDaVWSTAOPXs5oBw3bCMs7annU239sNdzf5vYDgprH6vUelL6/L
7wyDH+4l/uBF7y+/OPuT93d+/eroky1fUYU88PK/O/C9GviBAH/5yfhvvnv9
3bPiu/3Ij560fvem+v4o9Psv61dd25Nd+4ePAue7+vFQ8eJm9eUj582u+WzL
eNY3j1q6TITpdiJtdrjJumywLRtXoR4vKZ0S5DKikJ/qsiLWVpZBYslkmak0
NZkm9Iey0wvzcCQt1UiJNKrdu313OnhJJJ6Qye406trD8abTTTNbcGtOimeD
bjBCleoZkIV8PmIqwU3E2ODaAA/A1k3FuJEAc9UIX9OiNdw5MeVNo2ghvMYs
R5TxJKzRZDbqrEKeVC4x8jlKNkGpFbnlHCcdo2Rj1OM984tHvrceb3z7rfD5
mXX7SN0/UnRG4lqHU2+wel3R3lA13tUW0+RkFB0Jw2p15uGZDhhcc8TtHIq7
B9LWSJRv0yMFFFBie59/+EgHIJ4+Nxw/05y+0B0/U3WP2bkeOr+F6Yxpzz+2
PP3QevJItztW5/LsgJ9SSKjSAZVbRwcE7WJcziEdZezXLd/bw+gHo/irk/zb
w/B3Lst/88Onf/PDZ59fNj49q/7V9579xXcf/ekn53/16vJP3t3/6rrzKG3d
35D/3Zc3/+WvfvCPv/js3331/h+9M/r0IPc7j1o/etZ5bxT58knxrT3viwPX
ixPXxchwdWR8drP6+Mzy+Gj10aHj0ZFztKVPxRnAjMJR1maI6fKRrU6M00W8
dcOMNBpkuFaQZu1sOEQqFLmgjqUyxN5AcvXIunsgjafh6RwWtK39Q329KTAY
H2i1D6pV5VZvZX2DCLZxKMaKJTiBMMUfJCUSDLBpC3ku6C+nJ+6zU0+jqgj6
iQ4b3KiaC63RTcIlHu41KfWuR4/L+kTpMqE9FJSbzFSBcBtUmtxsjlFviBpN
KfhNCgUWSGLjsaXfVwwHqnKVVd3iNXfF3T1Ze1vSbAtAXaoWWYUMtZil5dMU
kEjzRVpnKG0ORaUeq74raOyIAPHeoazYpafrxHKfDiS8cy4fXSp3L2R7Vwpg
hZ1DdqmPB0t155z/+APzi4/tj962nVytVKrCSIheTKqSflnQxrNJ8SYOPKhj
7KTsT7ci749SHx/lXp2Wf/rh+E8+O//Zpxd//cN3/s3Xr/7jr370f/79L//D
P/udf//z7//Dz7//3/7+l//0f/3Hf/yjV985rP7TP/7VP/1v/+q//ssf/09f
f/zr7z/70dPB96+bf/CiDy6A9w+jXzzNvxh799ua8z3TzYllPFLtbcsux+aL
A+vZweqwp81ludmsMFeSRdPCzSjX4SW7PdRYlJ9Ly5JRXnidvukmVEvCWk2Q
y9FicXSrzX3ydO3sQp/Joat1yt6+4vpm7fzclssxwiF8rSoFsDwb6HSO3eqq
+gNtf6DubSm7XfnWlrzTkXQ6svNT56PrjUpRYDZMK6R3tLJJmxJmk8AsomW7
DOEzEGJ2JlAHOL3tXUmtzx8cakGlzZbZhRpo2apinZ/IUCtNfrbECMXR6SzJ
H4YFs+h8lzEYqw7PzfvHxk5PnIyDojoXDWNiESxokYEoMluh5VqMTINW6LJB
ZB0cq/cu9UCM5S1mbZvTO5Rsn8p2LwBBBeA4PJO09tjlLWJ9SO0fcc6ea56+
Z336ztqT565OWxELMQoxRdIryXqVEYvAISUEtPRB3Pq4G3r/IPO9x+0vLtu/
/O7jX33v+dcfX/7ii2c//+LFzz5/69c/fvWff/3H/+Vvf/n//uPf/dP/+u/+
6X/5H/7zn/3o3/7k1T/946//67/46f/49Sd/+unNn31+85O391+dVn/0vP+j
lwOQS3/3ncbL481BRXq6YwLgtrvCQU+4N1AOu/Ldvmaroy4WhZkcMDKhN8h0
eKm2NfyqHe/10IIbjIiPmYuKWmX14Z6115OBVRaOICplGiD49tvu/jZ/e1tw
fmF69x3/tz+KHY9X2m1puyH3rsM968B3hAdjE5DneGzc39f1+7JeT3J1tQY4
Dgea4/EquCpWLRCt6t6Kdp6JnrBK4SmPML0u8plJqwp4okGuAqXsSys7wtpQ
ku9wo0V6OE8ttkXJMssXx0Xy5EASsxGDxwpET3hxMw3Nd2mjM+31i7XHb7mP
z8ylCtPnWwoG4aEI0utb9AaWMuXb9zhlm/RMi1rp88Di3b/Qbx8pO/uS/pFs
50K9e6kaP9YfPTEcPdKDYNMeccsdIpjGgDa+ll480928sD594d7qqqKb1EJE
ktuUJdaEGac0pGeC6YSM5/WNj06Lv/ji/OuPTv/s+89/8sHpq0f9z24GT3dL
T/dqX3324vfeu/6bH3/xP//513//J7/31Qc3X71/+evf/fbPPnr8k3ePv/7w
7IvL3u8+2/3h89HHx9Ufvtj+6YcHn12VPr3OvTjcPO6bjrdNZ3um00PD2ZFp
dyBvtwRADq22PJvlBsP0dR/FsopesWHMFuwKGBPSqFkEDpWLCsbDtfOjtX5P
3qiwsxlirUx7/Hj1k28HLi4M4335kyf2jz8Mf/4qc32+OthSDDqKTR/C513e
3lacnID2pBjtqnZ3lN2OcKsnvrq0g5/T7yn3R+Z2VR7xk9yrMLtpmYWdsMoR
CY8g5uI5tTijaGmzgk1tMfI7/FSbFSqT/fnfvNElT4nX2JEybSONi1eoyRot
VaeWtrj+DDxRx1R3mPvX6kfvrr389saTl67hgTxfpRbKtEyJFIzDAwlosc0A
Wks1iMD76gPe1oHi/+PpPYMbybNsv1HoxVNIqzUzO90z3dNd3tB7770vek8C
IEB474HMhEt47z1h6L33ZLGKZdtXmzE9dmcnVorVewrtPrkXoW/S5XSEIm5k
/JEAWSz88tx7TiIBqMw3oxMIapyNuKdJ46zXexqMviYgaHI1YMZSKZYrQXMU
mjy9o8LiqXH5WoOhAVRWSxx9zCVWCogNyGy3gTeqIHbQe8vY/ZXC0VoLb3An
hGwFkHdn6WdrHr+GbhJOKWgD7Il2GXXQpeKeLAaebyW+udz43cu937/a//Z0
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
KJlCSY3FPuQNTGs0HVRqHnkmi8cvpTNyZfIqjbpFyC+1GXswUQ3CrUBYFQZR
Y9g4mnaS/fiIXtqu4jcq2HUiRplMUoXjzUxmFp2exf3/SjrvqDbTM+17N5NN
NpOcbHYyM56xx73Qi+lgwAYbN2xselfvvfcu1CVASCAEAoTooiN676a6jG08
tmc8fZLMnE2ym6/t98f33STn3Oc9Qocj6Ty/57rv65L0viJHUvBhSvEVSI4y
esJgK3G6j9NSW2qruv2PH8JGk86Xkk+ytDEEYQiefaHKklVluM7lxCglVxnE
WAYhCV+emB7/UULk8aBT78dHBl9NjL6eGFRyO0HOqhzpcgx312NKb50++ovT
H7zz7pEjNxNP70y2fL83dDDV+Pls/Uab5EWg+vPV9p8OZl6tdL3dHPhmZ+xv
r9ffbox+uzO53u/qtoll2Hv1cjyUkVuio+cO1otn27UzrepXi+1fb/btDNS+
mmv785PxlzMt3236P5tt/Xq1+4tFHww7QAZJ89GA/e2sb9jCVZRdL447ib0W
Sc9JLksPLko5X3E1mFuS9jTg+nq166ed/j9udkAM7FKWL9YyZozEpWr6hpO7
YKWOaFA+Xl4N+qq+NMmOy4KqwWTB7Ft2CtdcsjE9db/D3MItc1LyRg2MBYd0
qV5G5sUUoU9h6GF4RgSCGHz4YT0umECLpjLiUdhQDCaczb4sk2bxeelUcgIB
HwX3s/kpbA44mStV8pugPgklWUxMrOJcP5SeIk/NucknpbIJoLIEZHkYnZUo
01ynM2KYzFgwrlzKJRU3FTKjVX5joIUw1EFtriu1Gu6JRKk4fEgl4QJeCMkl
GC8MY8riaNwoDOY89ASHpUzNv8fEXMUWp+XdjEcW3s67nXknKyM5Jjwm+JOM
pCBsxV2jiquVs29dT/rwdz//9TtHjv/bkfMf/JPHyPzLwfSftnoe9xtWm3mv
x2verHifL3lX/dWfLXd/+XD47cYwsHs80dljk4mQ2WpSHq0gFXEjUk2+L8Hc
aNETx9zSP+6P/Lg38mjE+cVSx18/nfxxd/i7jb6DqeY3895vV7ofD9YF7ILZ
Rvkjf+1uj61VhFWWZ3HupdBux/Pyr9JzUvLiz+UnnRMjb+0Ou/7P6+Uvlzu+
XW3f6la3y0u7FWUBHbpbkDdZhX7UIgOCDvw1ZW60/EGUi5KtLIirwd5Ydomf
9JgmrKwhHXmjWWNC3mzjV05XC2ZrRcM6+qiBiaWFlKBPkjlRNG40inARgTtf
hjiDxgdLZZkU6iUUMoiAj4CxCMWgJtBpcWJ5JpufRKVFG413lZJMs/oOaJCP
jxEQ4qWU1MPTzHGJLHwil5rKIl8m4C6RGDEi9VWeOFkoTlFI0vjMWBEjlkeK
NMmvNVhz60w5GtlVsTCFyY7BU0Ix9BAMLzSPeKyMdhbPCSczoxTKLKupSC26
R0WnIQsSiOVZZTnpD26lJUYHx0SEnD1xNOLCR1EXj15PjSrPv5F/LyMtMSz8
/NGzx399/HdHbiad63cpfnwagBX7Yqru66mavW7leo9uc7gW7MeTyZaHgw0Q
GdwqmtfAtXKRqJuxclwO5k7M/eQzYGVV1JwGBWbNb53yKOfbqz5b8P6wO/Rm
uePFVPPree/TsYatPttapxF6Jqhvv7923Wfo1VMBnw6dbcLfZ2TH3486di/y
45thH5alh/ywM/6/3iz/cWdoyau2km83C/Mn7HQguOeVP25XvujUbjWJRzTo
TmGRj1/kZuTY8bcmrIyHrZpxG6tXjQtY2BM2bp+aqKu83q+lzDulAQtnqkaw
2apDEc9DjuDLkqFgDRHYc0VlJxDIcwrlNZhWZFIUkRBBJkRRiNFMWjyPe1mj
v83gxQHEmpp8sDFqyTUxI4mNiyZXBNMQEXRkNAUVRcPFc2ipbHoalZqIIoey
pMk8SYpAelkmSxdyE9ikCDouRCVMNSqvy4WXidiLCMTpw7eDmFEEdgSaG3J4
yjDiaBnhPIF6iUSKK8w9fzn2t/iKK6iiNAY2tyA7NfHShaO//9ezpz46c+L9
1Lig6JCPgWDx/czM1OjQ8x+eOvruB7858tGvj9RpqGBOvljtfDpsfTvt+PO6
Z71FcHi6botysUMPsc5fLfDqmTpKIb3gqo2HUuBzhYhbUOzya3lpZ8W421LC
7alW1f5Y/Z8ejf70JHAw1wpxD5rn88km0CCwm2qUrXeZdnpt0w1ScJs67K1q
Sl67gtTIR6IzQhM/eqfs8sXKjLDyKyHdZs6LqRaPHGWj3XNx83tUyAE9ZsXN
X3cJwMMs1bFb2XmmijRg16dAtAlKwGSOmul+LaFLhR+oogwa6Z1KXD2rEPDN
1onHrdxRE2u73fisvw5DvIDCnxNIk9mCODT2LApzmAphJEmlaSxGLAEXQiKE
QR8TsJOFnBQehHdNJokdqdJlWavvmwx3hJwkBT+VT4ljYqO4xFguOQEGFgUX
A+rD4aIR2LBC5GkMM5TCvwQaF4gShcJEJjWcS4+SCZIM2usaxRU87nxRydHD
D4hZERXEs5XMC0DwPuoYRZBEZqVGRP7s+NEjD26Hi1jl+Irs0gcZyZfOXwo9
febEe6HBn5w78/7l+KCEyDMgQIWIgkfmxkedOf77X7z3iyNxF94b95lfLnU8
HXc+H6vZ71Z+Nqh97tcMWEijTt64S9xlpnfqae06up2PZBdlGOkl7Xp2rRDd
UsXYnWiZ9plfrPR+sz8Ghuf/fr0GnvZgoQ04PptunmiSbw3WHkx7YKjtDtqX
fXq/hWlj5Glxt+Do5JTW0AsUFdeo2TH4m1EtSqIam12UdJp4O8ojR+uwN31K
9Hy9YNbOnqymPu8z7LWrZ6oZEMwDZlqPAtUuKhvQ4kF3fRq8m1faJkFO2IWT
dqFXhmmVoEZt3G41calJBTVRK5h3yaHo9Ag88SKPF0ckB5eUfITBnKXToyDr
iQTJhxlccQ0ig4CdyGPGQ/RTKq8x+DHQco01d4227JqaXD43AUK9jJsiYafI
OGlS3lUx9wqbmUqjJeFJsShSxIOKY8WEMzh2OIYazOBeEkmSWcwosSiJQg4R
8OOVinQOJwaLP09mhFPYkQXIY+X0cyheeDklCEOPrcDEBAX984UzP2eS86Uc
rICGqSy8ExF0PDLoxJkT/37uzHtnTv0uNSH4cuzF0vwsIRuLLr93KfTYiff/
5fzHv8QXXF3021d6zUvtyi9m6l8HrF+MGb+dsT8eNO4MmF9Ou9e6jX4rq0GE
6LNwR5yKgEv9dLJ9tc/RpmeBL/3Ts7lnS91A8K+fzb9c9C73mLaG7YBvzqsd
rOMvdxmfTbhBjEvtumY5GmwnZPZWJRZQuoUIZeV1QVGanV1iIj/os7A1mNuY
zBDwpaQbobzc2C41esRAnHdw932qzWYpxPNBPbm/igjHLhW2V0sYtbKh/DrK
fKNisUnVp6O2SdEDZuZknShQw+9Q4pea1ast2kETc8jEXHArYTGZf19SMjmk
ovw4mRQsFCQYDq+rmX54kT17gcVwR8xP4jJj4B6rNQdPC+ErUwzVd8w1d6ur
cxTyNBEnQcxNlvHTxZzLAnaKkJcmEmXyRRlMXiqRHV9KulBBvXh42VLKRWDE
lySRqaGgRHg6NPoMPLVMlsrhxVJZkURGWDHqBEl0iSFPwjCic4rPXs744NzZ
d0589DPggi65b1ZLNGJORko0dNFPPn73449+EXzhvcvxF9ITgzJSQqHg347+
9ghMwKSwjxr1rAmvbrRBPGZngY35cbnxz2vuryar3842vF3w/I9nY2BQIbJB
fNvosUA02B6s/24nAIl+3FP1dK7jv7/d/f7x1Nd7o+uD1duH5wV3PRyqadHg
oAO/XevaGqzZG7bDHmhRYXSkO43iCr+F0Wui9RipnTqyk18KcpvzqIBsmwpn
JGQbCXeyg39TGncUm35GXpS46havu8V+OWKuhjNp5wVqeaPVHAiJPVWkebd8
p9u61qZ7O+udb1K3yXHtSsKkU7rYqpuql/UZaDMu2YxLCv823SCZdUk3O40q
RQbg02lvgCKIhItsVrRImFilvaZTX9cqM1WyK2A/1PKrxqqbVmO2yXQbRw3W
2G5VWW7WOHMPz5LW36CRwji0aLngCjRbmJjgdjj8dLYgncRKRJIjiIJYouAS
R5kCLoXADGcJD3s1gxWlVmcAQRIpWKPJFEtTSJTDb9pUYE9TBTGluLNociSe
lnwt6+Spkz87/v7PTnzwbmL4RRmXphGyM5OjoXMeO/rz3/7myMlPfvnJB+9c
Cj4aF/ZJdNCHSeGfpMecLb6TWMWrnINkp8Q2yZFAcLGR+9Sv/WbK9nrE+OmQ
+fGg+Yv55tV21ZpPuztQ89VK50qHYXfQ8e3W4HC9bHvUtRtofjLr+3p7dNVf
++lM83xHVX8dN9Ak3R2pO5hr2R9zrnQbV7sMgQaRS1LRICzrNlCapAgT5V4d
twhk2G9lLbZpX097+gzU1TbtoJnRU0VQlqWx74R1yg/fCuuSlA1psbM2BniV
SYcQKAMamKorbVXgaR92mV9NeXwq4oCZDexmXIqAQwI116zZ6DavtGlHqjkb
HYavFn2PBmoDdr7dmicVpqhlmTxWLA51jkWLArmx6dEK2RWJ6LLZmG2z5ADl
GtsDV32JCAQriJUZMvW222r9tSp9ls1616C9Af4EBqVUkM6gxpHI0QzuZRQp
KrfsTBk+pJQUJLfelhlvYBnhBGYkV5zMFyYJRMngahz2ArUyEwpmLqSG8vIT
N279qqD0YxongURNwBNSivKjQ8796vh7/3zu43+7+PG/I/LvVaulDFzZlYSg
Ux/9y29+ceTY+0fOHvvlr44cuXjs3fTYM1VCgk1BzcuIqFORxjxVbhWmy0jy
qREu7v2HXvFGM/eLyZoudaVPifx6sXXWLdruNe0P1UBHfTXf+oedAbCaX673
Hcy3H8x3QNZ4NN680GGcblP5a5mjLsHuaO2L6cb1HsNsi3yls2q1o2rEzhmw
MTzSCkFhgleJmnaJlttUq96qYRt7zi0P1HKgOpUYUNmYhSbOi+1RIFp4BaN6
Qq+8csxAnLGxJm3sqXrJmFMCElv06mfcqs1uG5TfzF5q06/6TMtew2yTesql
AHxwD1AG0e0P2L5cbNvrt8LTtcgqbcYHclE65AIOPRbiNpcRx6JeYjEuCXiH
c7CuNt/hKASCsMjwJ40RJZCnaG23NKYsFj8GpqfFfMdue6BVXJfw0+Siq+BX
iaQoCjMRQYwsRFxAUaOgH5L58TRBIl2QyOAl4EhhSNR5IjGs2prb6DhMglAW
/V0+K4GEDUGVnykuOqFU3LAYis26cgbpVkL474//9siH/3pY4Sc/yIwLSwk/
lXoJ6sTJ94+8/+6RXx85khDy4d200AYDL+Crnul1ZsWeMPLKR93KnmoWLPjD
bt2cm/e3/d4vp+27Xap+I0mJuLLhq3o56fpqyTtgoQGIb9e7vt/seTXvebPo
/Wl/9D8+nXq71gutFWqzz/LZXPPL2SZ4qNUu3dMxx+6AbaJBWC8orqbndOsI
s24JSGylVbXYLJ9rlEw5RX160qM+616vcdbBGzWTZ2pZZnQGJeMM2BUwLVNW
Wo+sYq6Os9OuXW9RAaCdAedqp3nLX/vVau/ekHPULgJYewOO5+PNT0cbV9qN
/1DfkxHX8zHX57Otb2abX0+5n405YIfUMh8YtXdV0mtyUQabFsfjJIsEaTTK
IT4+N0UqvQKhr7om32DIFonTuNx4Di/eUJ0NNkahzYBOSKVGQJTTq28aNbeI
qBAKPhKDDEUggpE4wBeUW3auDB9GZMZV4ILx1Cg2P4XKjEOhgyrKz5aXnmZR
YyXc1GpdTr21sKmm1KS4RUYEEyqC5NyresU9CjLmXsbxuKBfnvztkQvv/1PY
sXff/9mRlOBjuLzrhMIs9IPUvGvhYSfeOf3ekcKsSJ9d7jawn6307061jbbo
oj7+Z2z2pQ4T4/CLMQbiUC1jqoH7n4/9naqKlTYZmHl2Xvyev/p/H0z95dEw
aMerREBThfrzk6HvNrrXOnXLkP5mWl5MNk26pN9v9r2Zb3nYa1poVQK7z+c8
jwarx+wcnxqz3q79r8ejf94dDFSzx2s4U3X8Da92yETrVuMOhusOhmsnbfTZ
OuZao0CWGwU1qscFjISAkTRmIu90VD3uNS15FBtd1oBLudJle73Y/WikYdQh
DtRLt/vtnwZc8BpeTjQ9GrA/HXZCz/x+rffLhfaDQP0Pa13Ph+vWvJo2SeWA
iSoTZIJ75DMvU4gxIv7hFd2JuAgBP1WruS2WXOXyUhSaLIv1gUx1DTKgWJFu
sN6VqtKhE/L5iSBVGjFCyE40abJL8z4pLzpVXnKusjKoHBVaUH4hr/x8CToU
S4pGYUOp1Hg6Ix6LCSeToumU+Iri09nXf4cpOWeWZVsUd5xV+Q36fD4+TkRK
VLMydbzb1NJLpTfP5aafvJt0Ijft/I2YY0LMPZeGOdNpn2y3Qk20m7rsooFG
pZ5TBtQ6bPyBhsMvYTplGMLdWBUhW0/N2R6odghKoEmC+fzvNzMm0k1om8/G
G7f91T/tjRxMNUE7WvBIt3pAj47XMw2PhywPu7VbXbrdXvOjftuzEeeryaZn
I3U7fWa458100x/Wu2HzTzr4bl7xVof+xYjjmwXv60DDarPi84nGh17tmIk+
bmGOGimPfLpdr2pMh1uwMx42i1o599v5eUMapF9ZOWoiLLoEa23Kw/Jp17ut
+6Puz+Y7ASLgO5hu/dPuKMxlwPdktP7JkAPm6R83/T9u+wEfvBhg9/1yBzz1
vEvSLkPCzqGSwH7EQuHQkRxmKpuVgkQEs9hJStVNBjuJQI5mCy9Lldep7Hgc
BabY4ZdF6ZwYBjOWRosGfGxKrFKUUaN7wKcm0PCXCNhoiIGVyIgSZFgFPhpJ
ikUiw+ABGdQkFj2JgIqk4KIZhHhEwZmynJMCUmJDVZGaeXjqlkdfbJfkeHSl
NaL79fJiI+uulnpTSbhpZD5o05Oa1NjBenFPDd9fKxxyyvcDnrfrg6u9dvCN
LiW+SUNq1VO8RtpMW1VfLWet1wJFfxCjwmYZqfc+nXC1aTCPRu1+UESL8g/b
w6/mOp4G3EO1vIVW9RdLLd+teTe7YX5Jp+pZ0G/BuB6M1e50V222qfa69Ls9
hi9mm75b9j4ZsM42CEZt9CEzZUBH+Gy07lGPcbdT92Kg+pnf+v1861KDqF+J
WQQlumVbzbJNt2i+mj5jIc9YiCsO5rC6cspCWKhjTtgo007OlJO31Kp8OlYP
DurpRMuCzwD13eYA4Hs+4YZt9uWC7+mwA3bRdysdsHMOAo7DfeU3/8d2359W
O76Z8yy7JfAyHLR7ZHwCFhkFRyI+jkZJplASEIhQKiOxAhlcUHqqEhNMZsRh
iBF5ZSehGXIk6Xhy5D9+1QKNPI8sOcNnJBoVt6HqjIUSTgaFGIdCReYXniso
D0IQYtGkeDQyElFykYSJETLTmcQkTElQRe658vun2Kg4uzLXZ8PYBHfM7FuN
8rxGaX6rqkyBSnfyi7oM+GE706tFQy14FQsdquF6zkgDf7pZHqgXL7UbVjos
nTpWs5I43aIJNEohoL2Y9Wz22zZ6zYAMhteQnQteEWS42KEbc4mXOg0Hc617
Y66pZt2gXTreqJpvrQI/ueU37vUbV32ySSdjpVW05BFM2WmzTuZmq3TezvSJ
S5/6LTvd+m2fdqFB2CGrhBXza3GPu41vJ1xvxpzfTTd/P+MBT9IhLGtm5G66
ZRuN0ift2s1G4ZM25Y5bNGXA9gpy152MfxBccrK7lOVAcKtHv9ljXO8xrfZY
p5q1m/21MHz/9mJuf9ix4tO/mW97BgIcrv1swvXVQsunwzVLHhnspT+sdfxl
q+8/d/qBYLuk3MMvahWW0MipyMoIOiWNTr2Mw8Sg0VGVlWEEclxe4ekb2b8v
LDuLJIbfL/7kbtExAitOorkB40wuuyaXZsIgI6JCWYRLSm6GQXq73lIGjIAU
ChFZUHShDB1JZKZDIqAQEmm4eAIimoyIpmPiCaXh5XfPVN49raJfa9aXt+kR
Pv3hD1c5uHcPL/XJzxuxMAYMtE41FhxjLfNuk6Rgd9DwdsXdoUf02QhjTo5P
i2vXEPotnKFq4WZ3zUKrBkAAta/XO8FpzLcowGaAUXw67vxxf/iH3cH1PusX
q10rPdbFTtNit/XxeNtqT91ip22tp2a8QeK30BY84t1+3Vq7dNxOHjKip2rJ
q40cWOoZG2XSROqQlDVxC6Axgtb2OnRdMgTUdovqea8FtDZtYUzC4BNXDEIY
F1fut2p2muXrDv60gbjdIJw1EgNqhF+QO2tCB7SVfkXplJUMBHd6da+mYZuZ
pjyKOe/hJ87/74e9//lyYacfjLHnx63BnV7rXh+08bpX466ng7bVVsWyR/Jy
pOav272wc16POhacAif1nodbOO/gU8hpxUWhZFIKlZJaXHT4S8GFhefKKoMZ
7JTcghP5JSfLURdv536YX36KK70qU9+USDMZ9Hg+5/KhBRJfIyNDucR4p7Go
uiqXTU6iERJYtDQKOZkrzJJr80WSbB49o0qUQ0Ml5GUdxxaEiQjpzIo4XE5Q
iw7ZbSW6pEV9FuKAheJg57TLK/16gl9H7VDgINuCrxuupndqUYE6ZpcB3WfB
e1TlHkVFp46w3mUCnzbj1gzXCB6POF7OuP6w1ffpeN1alxZ8y5iD99WK74ft
vudTrhmPYrXHPNEkn/z7hRwfDjpnvaZJj26gTjrRpJz1qGAZt3sNo7X0IStx
wydbbuJ3SIv7FOXL9Zx+RaXwTogJkQ7xbaNJsu/TLDq44ENWGgSf9VeD1lac
Qr8c1c4rHteRv5twf9ph2GtRQ40osD52/rgW30y5MySvmNChJwxYGIIdosLl
JsFik+jNrBtSzGK7dmuw9qsN/3dbI6/nO59Pel7OtG32WiEyPBt3vQi43s61
gAbXvar5RtFWpwas0csR+zczzQNavBWbNVPLAXxwmy+9X46Ov3bj48KSECw+
Lvfvv7+GxYQS8OF4XBiNHns145cPCj4uLP3EWlek0WeLRJllJRcI2EiV5IaQ
lWLW3vPUVZpV2Ux8NAkRhikLIaIvcZlXJaJbQsEtDvO6hH2LT87Q8O7TK5Nx
DyIYxfGswkQz/f5oHb9XT3ELygZMMFlY+722uQZZhxLfb2IBHXDOEIUgHY85
RdA2d4brRupFYE66zPTdkfreaq5bSZhrN+4MOx+P1S16ZXtD1plm8WSjADg+
Gat9Nef+4WHvik870SCeaJQs+arAG4Di5ls1/bX8xQ4j9C5YvUVvVX81a7ia
2WsgrXlVYC16q3DyongbIWvcQnUxcmpw14c16K0m8bSZvOrkzlgovZLS9Qb+
nJUxbaLOmGmLdg6MvKedhsc+3VIdf0iN83JKRjSkGQu7U1DRJawMGCiwyAEr
HR45UMuCFPN6pgniydrfv8L65XrP54vdB1O+3WH3XJtpwq3dGnAezPr2x1xP
A65Xsy0zLim0o9UWFUzApUbprJ3byM7zSSuGjeTJGhbUuI2BpVwtQ8ffvn/u
Xv658srwguKzhQUnwfDTqTEkQhjYlfz8oyRyBIebaLDkUBixYuH1BzkncnOO
C7jptabCZifCpLxTmX8SVXQGioCI4NIvS3k3eKwMOuUKjZhGRiUjc8Op5cnM
ista2t1mFaZRgoA22KUmtkpQzXzEmJU/oGfON6qmHNKAXTTv0T3sswfq5RMu
5ZRbvdBm6LPxJ9zqDhOrToT0aMgtWkqNsHKkUfF2c+DLzd4nAceYkzXl5g/b
6Qtt8q9WvV+vtf/l6fCz8XoYNLsDNetdRkgHKz4d+Jb9kbpHI05gB6Nz2Ckc
rOEOHH4yW/WwyzTvls40iDzCMvL1IOGDS7BKMO9WGkXjevx2o3Bci1mwUmdN
JNDUdrNkAwK+RwEN82GTdNMtAT0e4tPg27hFw2ryoJLoV+BbOaX9atJsnciv
IXVrif1G2la3GazLzmDN4zHn85nmJxOu/bH6Z+NtD3udiz7bTIsR+sPuaNOL
Od+jcferufb1bvNINWcMHFejtFdLaOYU9Sqx03bORDVzDGKsiQIFN3JLIoFg
UUU0ECwpC6lEhZWXnS+DvMaIZzPjOJwEMjmCxY6v0t1WVd3EEMKI+JjS4ot4
TJRGecfrxjfUlCp4V7Cl56nocCgR64q5Kk+neMCkppIJl/msGzLWHTY6TUK8
oWXmNGuwg3W8Dh3Zq8Y7WUUNnBKfgjDtlPn1jEELZ7pB/rCnGuLtend1n4UL
+Na6bHC708gCiA4xCth1mtlwbDcxNwYdL5e6Hg7VjruE/Tby7qBpf9jysM8A
Nd8q+2y2EQS40W34NNCw1mmYaZIDRCAIPgd0N9ms6LYwxlwSuL3Urvt0xAk1
YmNCMK+jP5AUJrUIiuecfLAuuz4N+EkgCOBGVciJKuywohLwgSoBH9RGo3ih
lj1rY8FAHNWR+uSoGQt3SAU3cJ0i5JiRCQT71ES/gbrYrHw54X453bzVb3sS
qP98pePZdBPM6L3Bxmm3bqxBPddmXumpBYJPJlvAcYFHHXUIAR9ssNl6kVeK
aIN+pSWCBQXpgQvtr8KDZ5i08+7kBhUjYlCElOLKCCQ6GkeMqay4iEEHM2ix
ElGaQpHJ5yejMRdV6iyJIoMrTC0tPg+uVSG9ZTUVdHhI0EW14usW9V2d9IZa
mGmtym9yYozqfCI2DggaNCU+J9NbS+usZfos1DY9sUmJruMW2xh5Jny2m18+
auPPuZS9ejo0T2ibLyY8YDK3+x2TjSpQ36LXON+q91bReq28WkElCLCvRjDr
NeyMNW6NNEy0aLth2c0UUN83696f9vueTTgGqmlm2h04rncdmr1tv228XgS9
dLPHPNUo9duY7Vqiz0ABght+28G0Z2+o7tFA7UaHoU2G8IjLQYOwVhAToJYa
xfMO7qHcmsR+cUmPoBAg9ktKp0yk5Tr2sp275hRAF50wksd0JIC45BAsO4VA
cNLImq3mBwwMIDikp/Uo8fNu+UHgcLQ9GXW+mG76fKkdBLgFYhx3bfvrA07V
aL1qtdu+0e9c9ztgWG8NQWORjNQJ4IVtdhqB1JiNtdIom7SxQXSAr09zeNrL
RO3h6Uv/HxmiWBw=
      "], {{0, 100.}, {150., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->{72, 72}],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
      Association[
       "Source" -> "http://www.eol.org/pages/328605", "URL" -> 
        "http://www.wolframcdn.com/waimage/hset050/ac9/\
ac99116210e54c705c59c5a92e61cb14_v001s.jpg"]],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 100.},
    PlotRange->{{0, 150.}, {0, 100.}}]}], "}"}]], "Output",
 CellChangeTimes->{3.8138566254775763`*^9},
 CellTags->"Values",
 CellLabel->
  "Out[401]=",ExpressionUUID->"9ac57039-b749-4867-ac3b-7f28aa57d9ef"]
}, Open  ]],

Cell["\:5bf9\:5e94\:4e8e\:7279\:6b8a\:952e\:7684\:503c\:ff1a", "Text",
 CellChangeTimes->{{3.7883878426318636`*^9, 3.7883878499663477`*^9}, {
  3.7900838850093827`*^9, 
  3.7900838962839813`*^9}},ExpressionUUID->"a9950a02-7623-44cc-a7bc-\
4ebedf1a3ada"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"assoc", "[", "a", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "\:6ce8\:610f\:4e0e", " ", "Part", " ", 
    "\:51fd\:6570\:4e0d\:540c\:7684\:662f\:8fd9\:91cc\:53ea\:6709\:5355\:4e2a\
\:65b9\:62ec\:53f7"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7883878517961683`*^9, 3.788387882271983*^9}, {
  3.790083927584042*^9, 3.7900839674502225`*^9}},
 CellLabel->
  "In[402]:=",ExpressionUUID->"2aee0d83-afcc-4226-a99e-07d538b7cda5"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.813856639959262*^9},
 CellLabel->
  "Out[402]=",ExpressionUUID->"9ef0782f-15be-433b-a721-b4f5a456a9d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"assoc", "[", "\"\<cat\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7883878574279737`*^9, 3.788387860926117*^9}},
 CellLabel->
  "In[403]:=",ExpressionUUID->"22505cef-37ce-4820-8622-931006757dc7"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
35D/3Zc3/+WvfvCPv/js3331/h+9M/r0IPc7j1o/etZ5bxT58knxrT3viwPX
ixPXxchwdWR8drP6+Mzy+Gj10aHj0ZFztKVPxRnAjMJR1maI6fKRrU6M00W8
dcOMNBpkuFaQZu1sOEQqFLmgjqUyxN5AcvXIunsgjafh6RwWtK39Q329KTAY
H2i1D6pV5VZvZX2DCLZxKMaKJTiBMMUfJCUSDLBpC3ku6C+nJ+6zU0+jqgj6
iQ4b3KiaC63RTcIlHu41KfWuR4/L+kTpMqE9FJSbzFSBcBtUmtxsjlFviBpN
KfhNCgUWSGLjsaXfVwwHqnKVVd3iNXfF3T1Ze1vSbAtAXaoWWYUMtZil5dMU
kEjzRVpnKG0ORaUeq74raOyIAPHeoazYpafrxHKfDiS8cy4fXSp3L2R7Vwpg
hZ1DdqmPB0t155z/+APzi4/tj962nVytVKrCSIheTKqSflnQxrNJ8SYOPKhj
7KTsT7ci749SHx/lXp2Wf/rh+E8+O//Zpxd//cN3/s3Xr/7jr370f/79L//D
P/udf//z7//Dz7//3/7+l//0f/3Hf/yjV985rP7TP/7VP/1v/+q//ssf/09f
f/zr7z/70dPB96+bf/CiDy6A9w+jXzzNvxh799ua8z3TzYllPFLtbcsux+aL
A+vZweqwp81ludmsMFeSRdPCzSjX4SW7PdRYlJ9Ly5JRXnidvukmVEvCWk2Q
y9FicXSrzX3ydO3sQp/Joat1yt6+4vpm7fzclssxwiF8rSoFsDwb6HSO3eqq
+gNtf6DubSm7XfnWlrzTkXQ6svNT56PrjUpRYDZMK6R3tLJJmxJmk8AsomW7
DOEzEGJ2JlAHOL3tXUmtzx8cakGlzZbZhRpo2apinZ/IUCtNfrbECMXR6SzJ
H4YFs+h8lzEYqw7PzfvHxk5PnIyDojoXDWNiESxokYEoMluh5VqMTINW6LJB
ZB0cq/cu9UCM5S1mbZvTO5Rsn8p2LwBBBeA4PJO09tjlLWJ9SO0fcc6ea56+
Z336ztqT565OWxELMQoxRdIryXqVEYvAISUEtPRB3Pq4G3r/IPO9x+0vLtu/
/O7jX33v+dcfX/7ii2c//+LFzz5/69c/fvWff/3H/+Vvf/n//uPf/dP/+u/+
6X/5H/7zn/3o3/7k1T/946//67/46f/49Sd/+unNn31+85O391+dVn/0vP+j
lwOQS3/3ncbL481BRXq6YwLgtrvCQU+4N1AOu/Ldvmaroy4WhZkcMDKhN8h0
eKm2NfyqHe/10IIbjIiPmYuKWmX14Z6115OBVRaOICplGiD49tvu/jZ/e1tw
fmF69x3/tz+KHY9X2m1puyH3rsM968B3hAdjE5DneGzc39f1+7JeT3J1tQY4
Dgea4/EquCpWLRCt6t6Kdp6JnrBK4SmPML0u8plJqwp4okGuAqXsSys7wtpQ
ku9wo0V6OE8ttkXJMssXx0Xy5EASsxGDxwpET3hxMw3Nd2mjM+31i7XHb7mP
z8ylCtPnWwoG4aEI0utb9AaWMuXb9zhlm/RMi1rp88Di3b/Qbx8pO/uS/pFs
50K9e6kaP9YfPTEcPdKDYNMeccsdIpjGgDa+ll480928sD594d7qqqKb1EJE
ktuUJdaEGac0pGeC6YSM5/WNj06Lv/ji/OuPTv/s+89/8sHpq0f9z24GT3dL
T/dqX3324vfeu/6bH3/xP//513//J7/31Qc3X71/+evf/fbPPnr8k3ePv/7w
7IvL3u8+2/3h89HHx9Ufvtj+6YcHn12VPr3OvTjcPO6bjrdNZ3um00PD2ZFp
dyBvtwRADq22PJvlBsP0dR/FsopesWHMFuwKGBPSqFkEDpWLCsbDtfOjtX5P
3qiwsxlirUx7/Hj1k28HLi4M4335kyf2jz8Mf/4qc32+OthSDDqKTR/C513e
3lacnID2pBjtqnZ3lN2OcKsnvrq0g5/T7yn3R+Z2VR7xk9yrMLtpmYWdsMoR
CY8g5uI5tTijaGmzgk1tMfI7/FSbFSqT/fnfvNElT4nX2JEybSONi1eoyRot
VaeWtrj+DDxRx1R3mPvX6kfvrr389saTl67hgTxfpRbKtEyJFIzDAwlosc0A
Wks1iMD76gPe1oHi/+PpPYMbybNsv1HoxVNIqzUzO90z3dNd3tB7770vek8C
IEB474HMhEt47z1h6L33ZLGKZdtXmzE9dmcnVorVewrtPrkXoW/S5XSEIm5k
/JEAWSz88tx7TiIBqMw3oxMIapyNuKdJ46zXexqMviYgaHI1YMZSKZYrQXMU
mjy9o8LiqXH5WoOhAVRWSxx9zCVWCogNyGy3gTeqIHbQe8vY/ZXC0VoLb3An
hGwFkHdn6WdrHr+GbhJOKWgD7Il2GXXQpeKeLAaebyW+udz43cu937/a//Z0
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
KJlCSY3FPuQNTGs0HVRqHnkmi8cvpTNyZfIqjbpFyC+1GXswUQ3CrUBYFQZR
Y9g4mnaS/fiIXtqu4jcq2HUiRplMUoXjzUxmFp2exf3/SjrvqDbTM+17N5NN
NpOcbHYyM56xx73Qi+lgwAYbN2xselfvvfcu1CVASCAEAoTooiN676a6jG08
tmc8fZLMnE2ym6/t98f33STn3Oc9Qocj6Ty/57rv65L0viJHUvBhSvEVSI4y
esJgK3G6j9NSW2qruv2PH8JGk86Xkk+ytDEEYQiefaHKklVluM7lxCglVxnE
WAYhCV+emB7/UULk8aBT78dHBl9NjL6eGFRyO0HOqhzpcgx312NKb50++ovT
H7zz7pEjNxNP70y2fL83dDDV+Pls/Uab5EWg+vPV9p8OZl6tdL3dHPhmZ+xv
r9ffbox+uzO53u/qtoll2Hv1cjyUkVuio+cO1otn27UzrepXi+1fb/btDNS+
mmv785PxlzMt3236P5tt/Xq1+4tFHww7QAZJ89GA/e2sb9jCVZRdL447ib0W
Sc9JLksPLko5X3E1mFuS9jTg+nq166ed/j9udkAM7FKWL9YyZozEpWr6hpO7
YKWOaFA+Xl4N+qq+NMmOy4KqwWTB7Ft2CtdcsjE9db/D3MItc1LyRg2MBYd0
qV5G5sUUoU9h6GF4RgSCGHz4YT0umECLpjLiUdhQDCaczb4sk2bxeelUcgIB
HwX3s/kpbA44mStV8pugPgklWUxMrOJcP5SeIk/NucknpbIJoLIEZHkYnZUo
01ynM2KYzFgwrlzKJRU3FTKjVX5joIUw1EFtriu1Gu6JRKk4fEgl4QJeCMkl
GC8MY8riaNwoDOY89ASHpUzNv8fEXMUWp+XdjEcW3s67nXknKyM5Jjwm+JOM
pCBsxV2jiquVs29dT/rwdz//9TtHjv/bkfMf/JPHyPzLwfSftnoe9xtWm3mv
x2verHifL3lX/dWfLXd/+XD47cYwsHs80dljk4mQ2WpSHq0gFXEjUk2+L8Hc
aNETx9zSP+6P/Lg38mjE+cVSx18/nfxxd/i7jb6DqeY3895vV7ofD9YF7ILZ
Rvkjf+1uj61VhFWWZ3HupdBux/Pyr9JzUvLiz+UnnRMjb+0Ou/7P6+Uvlzu+
XW3f6la3y0u7FWUBHbpbkDdZhX7UIgOCDvw1ZW60/EGUi5KtLIirwd5Ydomf
9JgmrKwhHXmjWWNC3mzjV05XC2ZrRcM6+qiBiaWFlKBPkjlRNG40inARgTtf
hjiDxgdLZZkU6iUUMoiAj4CxCMWgJtBpcWJ5JpufRKVFG413lZJMs/oOaJCP
jxEQ4qWU1MPTzHGJLHwil5rKIl8m4C6RGDEi9VWeOFkoTlFI0vjMWBEjlkeK
NMmvNVhz60w5GtlVsTCFyY7BU0Ix9BAMLzSPeKyMdhbPCSczoxTKLKupSC26
R0WnIQsSiOVZZTnpD26lJUYHx0SEnD1xNOLCR1EXj15PjSrPv5F/LyMtMSz8
/NGzx399/HdHbiad63cpfnwagBX7Yqru66mavW7leo9uc7gW7MeTyZaHgw0Q
GdwqmtfAtXKRqJuxclwO5k7M/eQzYGVV1JwGBWbNb53yKOfbqz5b8P6wO/Rm
uePFVPPree/TsYatPttapxF6Jqhvv7923Wfo1VMBnw6dbcLfZ2TH3486di/y
45thH5alh/ywM/6/3iz/cWdoyau2km83C/Mn7HQguOeVP25XvujUbjWJRzTo
TmGRj1/kZuTY8bcmrIyHrZpxG6tXjQtY2BM2bp+aqKu83q+lzDulAQtnqkaw
2apDEc9DjuDLkqFgDRHYc0VlJxDIcwrlNZhWZFIUkRBBJkRRiNFMWjyPe1mj
v83gxQHEmpp8sDFqyTUxI4mNiyZXBNMQEXRkNAUVRcPFc2ipbHoalZqIIoey
pMk8SYpAelkmSxdyE9ikCDouRCVMNSqvy4WXidiLCMTpw7eDmFEEdgSaG3J4
yjDiaBnhPIF6iUSKK8w9fzn2t/iKK6iiNAY2tyA7NfHShaO//9ezpz46c+L9
1Lig6JCPgWDx/czM1OjQ8x+eOvruB7858tGvj9RpqGBOvljtfDpsfTvt+PO6
Z71FcHi6botysUMPsc5fLfDqmTpKIb3gqo2HUuBzhYhbUOzya3lpZ8W421LC
7alW1f5Y/Z8ejf70JHAw1wpxD5rn88km0CCwm2qUrXeZdnpt0w1ScJs67K1q
Sl67gtTIR6IzQhM/eqfs8sXKjLDyKyHdZs6LqRaPHGWj3XNx83tUyAE9ZsXN
X3cJwMMs1bFb2XmmijRg16dAtAlKwGSOmul+LaFLhR+oogwa6Z1KXD2rEPDN
1onHrdxRE2u73fisvw5DvIDCnxNIk9mCODT2LApzmAphJEmlaSxGLAEXQiKE
QR8TsJOFnBQehHdNJokdqdJlWavvmwx3hJwkBT+VT4ljYqO4xFguOQEGFgUX
A+rD4aIR2LBC5GkMM5TCvwQaF4gShcJEJjWcS4+SCZIM2usaxRU87nxRydHD
D4hZERXEs5XMC0DwPuoYRZBEZqVGRP7s+NEjD26Hi1jl+Irs0gcZyZfOXwo9
febEe6HBn5w78/7l+KCEyDMgQIWIgkfmxkedOf77X7z3iyNxF94b95lfLnU8
HXc+H6vZ71Z+Nqh97tcMWEijTt64S9xlpnfqae06up2PZBdlGOkl7Xp2rRDd
UsXYnWiZ9plfrPR+sz8Ghuf/fr0GnvZgoQ04PptunmiSbw3WHkx7YKjtDtqX
fXq/hWlj5Glxt+Do5JTW0AsUFdeo2TH4m1EtSqIam12UdJp4O8ojR+uwN31K
9Hy9YNbOnqymPu8z7LWrZ6oZEMwDZlqPAtUuKhvQ4kF3fRq8m1faJkFO2IWT
dqFXhmmVoEZt3G41calJBTVRK5h3yaHo9Ag88SKPF0ckB5eUfITBnKXToyDr
iQTJhxlccQ0ig4CdyGPGQ/RTKq8x+DHQco01d4227JqaXD43AUK9jJsiYafI
OGlS3lUx9wqbmUqjJeFJsShSxIOKY8WEMzh2OIYazOBeEkmSWcwosSiJQg4R
8OOVinQOJwaLP09mhFPYkQXIY+X0cyheeDklCEOPrcDEBAX984UzP2eS86Uc
rICGqSy8ExF0PDLoxJkT/37uzHtnTv0uNSH4cuzF0vwsIRuLLr93KfTYiff/
5fzHv8QXXF3021d6zUvtyi9m6l8HrF+MGb+dsT8eNO4MmF9Ou9e6jX4rq0GE
6LNwR5yKgEv9dLJ9tc/RpmeBL/3Ts7lnS91A8K+fzb9c9C73mLaG7YBvzqsd
rOMvdxmfTbhBjEvtumY5GmwnZPZWJRZQuoUIZeV1QVGanV1iIj/os7A1mNuY
zBDwpaQbobzc2C41esRAnHdw932qzWYpxPNBPbm/igjHLhW2V0sYtbKh/DrK
fKNisUnVp6O2SdEDZuZknShQw+9Q4pea1ast2kETc8jEXHArYTGZf19SMjmk
ovw4mRQsFCQYDq+rmX54kT17gcVwR8xP4jJj4B6rNQdPC+ErUwzVd8w1d6ur
cxTyNBEnQcxNlvHTxZzLAnaKkJcmEmXyRRlMXiqRHV9KulBBvXh42VLKRWDE
lySRqaGgRHg6NPoMPLVMlsrhxVJZkURGWDHqBEl0iSFPwjCic4rPXs744NzZ
d0589DPggi65b1ZLNGJORko0dNFPPn73449+EXzhvcvxF9ITgzJSQqHg347+
9ghMwKSwjxr1rAmvbrRBPGZngY35cbnxz2vuryar3842vF3w/I9nY2BQIbJB
fNvosUA02B6s/24nAIl+3FP1dK7jv7/d/f7x1Nd7o+uD1duH5wV3PRyqadHg
oAO/XevaGqzZG7bDHmhRYXSkO43iCr+F0Wui9RipnTqyk18KcpvzqIBsmwpn
JGQbCXeyg39TGncUm35GXpS46havu8V+OWKuhjNp5wVqeaPVHAiJPVWkebd8
p9u61qZ7O+udb1K3yXHtSsKkU7rYqpuql/UZaDMu2YxLCv823SCZdUk3O40q
RQbg02lvgCKIhItsVrRImFilvaZTX9cqM1WyK2A/1PKrxqqbVmO2yXQbRw3W
2G5VWW7WOHMPz5LW36CRwji0aLngCjRbmJjgdjj8dLYgncRKRJIjiIJYouAS
R5kCLoXADGcJD3s1gxWlVmcAQRIpWKPJFEtTSJTDb9pUYE9TBTGluLNociSe
lnwt6+Spkz87/v7PTnzwbmL4RRmXphGyM5OjoXMeO/rz3/7myMlPfvnJB+9c
Cj4aF/ZJdNCHSeGfpMecLb6TWMWrnINkp8Q2yZFAcLGR+9Sv/WbK9nrE+OmQ
+fGg+Yv55tV21ZpPuztQ89VK50qHYXfQ8e3W4HC9bHvUtRtofjLr+3p7dNVf
++lM83xHVX8dN9Ak3R2pO5hr2R9zrnQbV7sMgQaRS1LRICzrNlCapAgT5V4d
twhk2G9lLbZpX097+gzU1TbtoJnRU0VQlqWx74R1yg/fCuuSlA1psbM2BniV
SYcQKAMamKorbVXgaR92mV9NeXwq4oCZDexmXIqAQwI116zZ6DavtGlHqjkb
HYavFn2PBmoDdr7dmicVpqhlmTxWLA51jkWLArmx6dEK2RWJ6LLZmG2z5ADl
GtsDV32JCAQriJUZMvW222r9tSp9ls1616C9Af4EBqVUkM6gxpHI0QzuZRQp
KrfsTBk+pJQUJLfelhlvYBnhBGYkV5zMFyYJRMngahz2ArUyEwpmLqSG8vIT
N279qqD0YxongURNwBNSivKjQ8796vh7/3zu43+7+PG/I/LvVaulDFzZlYSg
Ux/9y29+ceTY+0fOHvvlr44cuXjs3fTYM1VCgk1BzcuIqFORxjxVbhWmy0jy
qREu7v2HXvFGM/eLyZoudaVPifx6sXXWLdruNe0P1UBHfTXf+oedAbCaX673
Hcy3H8x3QNZ4NN680GGcblP5a5mjLsHuaO2L6cb1HsNsi3yls2q1o2rEzhmw
MTzSCkFhgleJmnaJlttUq96qYRt7zi0P1HKgOpUYUNmYhSbOi+1RIFp4BaN6
Qq+8csxAnLGxJm3sqXrJmFMCElv06mfcqs1uG5TfzF5q06/6TMtew2yTesql
AHxwD1AG0e0P2L5cbNvrt8LTtcgqbcYHclE65AIOPRbiNpcRx6JeYjEuCXiH
c7CuNt/hKASCsMjwJ40RJZCnaG23NKYsFj8GpqfFfMdue6BVXJfw0+Siq+BX
iaQoCjMRQYwsRFxAUaOgH5L58TRBIl2QyOAl4EhhSNR5IjGs2prb6DhMglAW
/V0+K4GEDUGVnykuOqFU3LAYis26cgbpVkL474//9siH/3pY4Sc/yIwLSwk/
lXoJ6sTJ94+8/+6RXx85khDy4d200AYDL+Crnul1ZsWeMPLKR93KnmoWLPjD
bt2cm/e3/d4vp+27Xap+I0mJuLLhq3o56fpqyTtgoQGIb9e7vt/seTXvebPo
/Wl/9D8+nXq71gutFWqzz/LZXPPL2SZ4qNUu3dMxx+6AbaJBWC8orqbndOsI
s24JSGylVbXYLJ9rlEw5RX160qM+616vcdbBGzWTZ2pZZnQGJeMM2BUwLVNW
Wo+sYq6Os9OuXW9RAaCdAedqp3nLX/vVau/ekHPULgJYewOO5+PNT0cbV9qN
/1DfkxHX8zHX57Otb2abX0+5n405YIfUMh8YtXdV0mtyUQabFsfjJIsEaTTK
IT4+N0UqvQKhr7om32DIFonTuNx4Di/eUJ0NNkahzYBOSKVGQJTTq28aNbeI
qBAKPhKDDEUggpE4wBeUW3auDB9GZMZV4ILx1Cg2P4XKjEOhgyrKz5aXnmZR
YyXc1GpdTr21sKmm1KS4RUYEEyqC5NyresU9CjLmXsbxuKBfnvztkQvv/1PY
sXff/9mRlOBjuLzrhMIs9IPUvGvhYSfeOf3ekcKsSJ9d7jawn6307061jbbo
oj7+Z2z2pQ4T4/CLMQbiUC1jqoH7n4/9naqKlTYZmHl2Xvyev/p/H0z95dEw
aMerREBThfrzk6HvNrrXOnXLkP5mWl5MNk26pN9v9r2Zb3nYa1poVQK7z+c8
jwarx+wcnxqz3q79r8ejf94dDFSzx2s4U3X8Da92yETrVuMOhusOhmsnbfTZ
OuZao0CWGwU1qscFjISAkTRmIu90VD3uNS15FBtd1oBLudJle73Y/WikYdQh
DtRLt/vtnwZc8BpeTjQ9GrA/HXZCz/x+rffLhfaDQP0Pa13Ph+vWvJo2SeWA
iSoTZIJ75DMvU4gxIv7hFd2JuAgBP1WruS2WXOXyUhSaLIv1gUx1DTKgWJFu
sN6VqtKhE/L5iSBVGjFCyE40abJL8z4pLzpVXnKusjKoHBVaUH4hr/x8CToU
S4pGYUOp1Hg6Ix6LCSeToumU+Iri09nXf4cpOWeWZVsUd5xV+Q36fD4+TkRK
VLMydbzb1NJLpTfP5aafvJt0Ijft/I2YY0LMPZeGOdNpn2y3Qk20m7rsooFG
pZ5TBtQ6bPyBhsMvYTplGMLdWBUhW0/N2R6odghKoEmC+fzvNzMm0k1om8/G
G7f91T/tjRxMNUE7WvBIt3pAj47XMw2PhywPu7VbXbrdXvOjftuzEeeryaZn
I3U7fWa458100x/Wu2HzTzr4bl7xVof+xYjjmwXv60DDarPi84nGh17tmIk+
bmGOGimPfLpdr2pMh1uwMx42i1o599v5eUMapF9ZOWoiLLoEa23Kw/Jp17ut
+6Puz+Y7ASLgO5hu/dPuKMxlwPdktP7JkAPm6R83/T9u+wEfvBhg9/1yBzz1
vEvSLkPCzqGSwH7EQuHQkRxmKpuVgkQEs9hJStVNBjuJQI5mCy9Lldep7Hgc
BabY4ZdF6ZwYBjOWRosGfGxKrFKUUaN7wKcm0PCXCNhoiIGVyIgSZFgFPhpJ
ikUiw+ABGdQkFj2JgIqk4KIZhHhEwZmynJMCUmJDVZGaeXjqlkdfbJfkeHSl
NaL79fJiI+uulnpTSbhpZD5o05Oa1NjBenFPDd9fKxxyyvcDnrfrg6u9dvCN
LiW+SUNq1VO8RtpMW1VfLWet1wJFfxCjwmYZqfc+nXC1aTCPRu1+UESL8g/b
w6/mOp4G3EO1vIVW9RdLLd+teTe7YX5Jp+pZ0G/BuB6M1e50V222qfa69Ls9
hi9mm75b9j4ZsM42CEZt9CEzZUBH+Gy07lGPcbdT92Kg+pnf+v1861KDqF+J
WQQlumVbzbJNt2i+mj5jIc9YiCsO5rC6cspCWKhjTtgo007OlJO31Kp8OlYP
DurpRMuCzwD13eYA4Hs+4YZt9uWC7+mwA3bRdysdsHMOAo7DfeU3/8d2359W
O76Z8yy7JfAyHLR7ZHwCFhkFRyI+jkZJplASEIhQKiOxAhlcUHqqEhNMZsRh
iBF5ZSehGXIk6Xhy5D9+1QKNPI8sOcNnJBoVt6HqjIUSTgaFGIdCReYXniso
D0IQYtGkeDQyElFykYSJETLTmcQkTElQRe658vun2Kg4uzLXZ8PYBHfM7FuN
8rxGaX6rqkyBSnfyi7oM+GE706tFQy14FQsdquF6zkgDf7pZHqgXL7UbVjos
nTpWs5I43aIJNEohoL2Y9Wz22zZ6zYAMhteQnQteEWS42KEbc4mXOg0Hc617
Y66pZt2gXTreqJpvrQI/ueU37vUbV32ySSdjpVW05BFM2WmzTuZmq3TezvSJ
S5/6LTvd+m2fdqFB2CGrhBXza3GPu41vJ1xvxpzfTTd/P+MBT9IhLGtm5G66
ZRuN0ift2s1G4ZM25Y5bNGXA9gpy152MfxBccrK7lOVAcKtHv9ljXO8xrfZY
p5q1m/21MHz/9mJuf9ix4tO/mW97BgIcrv1swvXVQsunwzVLHhnspT+sdfxl
q+8/d/qBYLuk3MMvahWW0MipyMoIOiWNTr2Mw8Sg0VGVlWEEclxe4ekb2b8v
LDuLJIbfL/7kbtExAitOorkB40wuuyaXZsIgI6JCWYRLSm6GQXq73lIGjIAU
ChFZUHShDB1JZKZDIqAQEmm4eAIimoyIpmPiCaXh5XfPVN49raJfa9aXt+kR
Pv3hD1c5uHcPL/XJzxuxMAYMtE41FhxjLfNuk6Rgd9DwdsXdoUf02QhjTo5P
i2vXEPotnKFq4WZ3zUKrBkAAta/XO8FpzLcowGaAUXw67vxxf/iH3cH1PusX
q10rPdbFTtNit/XxeNtqT91ip22tp2a8QeK30BY84t1+3Vq7dNxOHjKip2rJ
q40cWOoZG2XSROqQlDVxC6Axgtb2OnRdMgTUdovqea8FtDZtYUzC4BNXDEIY
F1fut2p2muXrDv60gbjdIJw1EgNqhF+QO2tCB7SVfkXplJUMBHd6da+mYZuZ
pjyKOe/hJ87/74e9//lyYacfjLHnx63BnV7rXh+08bpX466ng7bVVsWyR/Jy
pOav272wc16POhacAif1nodbOO/gU8hpxUWhZFIKlZJaXHT4S8GFhefKKoMZ
7JTcghP5JSfLURdv536YX36KK70qU9+USDMZ9Hg+5/KhBRJfIyNDucR4p7Go
uiqXTU6iERJYtDQKOZkrzJJr80WSbB49o0qUQ0Ml5GUdxxaEiQjpzIo4XE5Q
iw7ZbSW6pEV9FuKAheJg57TLK/16gl9H7VDgINuCrxuupndqUYE6ZpcB3WfB
e1TlHkVFp46w3mUCnzbj1gzXCB6POF7OuP6w1ffpeN1alxZ8y5iD99WK74ft
vudTrhmPYrXHPNEkn/z7hRwfDjpnvaZJj26gTjrRpJz1qGAZt3sNo7X0IStx
wydbbuJ3SIv7FOXL9Zx+RaXwTogJkQ7xbaNJsu/TLDq44ENWGgSf9VeD1lac
Qr8c1c4rHteRv5twf9ph2GtRQ40osD52/rgW30y5MySvmNChJwxYGIIdosLl
JsFik+jNrBtSzGK7dmuw9qsN/3dbI6/nO59Pel7OtG32WiEyPBt3vQi43s61
gAbXvar5RtFWpwas0csR+zczzQNavBWbNVPLAXxwmy+9X46Ov3bj48KSECw+
Lvfvv7+GxYQS8OF4XBiNHns145cPCj4uLP3EWlek0WeLRJllJRcI2EiV5IaQ
lWLW3vPUVZpV2Ux8NAkRhikLIaIvcZlXJaJbQsEtDvO6hH2LT87Q8O7TK5Nx
DyIYxfGswkQz/f5oHb9XT3ELygZMMFlY+722uQZZhxLfb2IBHXDOEIUgHY85
RdA2d4brRupFYE66zPTdkfreaq5bSZhrN+4MOx+P1S16ZXtD1plm8WSjADg+
Gat9Nef+4WHvik870SCeaJQs+arAG4Di5ls1/bX8xQ4j9C5YvUVvVX81a7ia
2WsgrXlVYC16q3DyongbIWvcQnUxcmpw14c16K0m8bSZvOrkzlgovZLS9Qb+
nJUxbaLOmGmLdg6MvKedhsc+3VIdf0iN83JKRjSkGQu7U1DRJawMGCiwyAEr
HR45UMuCFPN6pgniydrfv8L65XrP54vdB1O+3WH3XJtpwq3dGnAezPr2x1xP
A65Xsy0zLim0o9UWFUzApUbprJ3byM7zSSuGjeTJGhbUuI2BpVwtQ8ffvn/u
Xv658srwguKzhQUnwfDTqTEkQhjYlfz8oyRyBIebaLDkUBixYuH1BzkncnOO
C7jptabCZifCpLxTmX8SVXQGioCI4NIvS3k3eKwMOuUKjZhGRiUjc8Op5cnM
ista2t1mFaZRgoA22KUmtkpQzXzEmJU/oGfON6qmHNKAXTTv0T3sswfq5RMu
5ZRbvdBm6LPxJ9zqDhOrToT0aMgtWkqNsHKkUfF2c+DLzd4nAceYkzXl5g/b
6Qtt8q9WvV+vtf/l6fCz8XoYNLsDNetdRkgHKz4d+Jb9kbpHI05gB6Nz2Ckc
rOEOHH4yW/WwyzTvls40iDzCMvL1IOGDS7BKMO9WGkXjevx2o3Bci1mwUmdN
JNDUdrNkAwK+RwEN82GTdNMtAT0e4tPg27hFw2ryoJLoV+BbOaX9atJsnciv
IXVrif1G2la3GazLzmDN4zHn85nmJxOu/bH6Z+NtD3udiz7bTIsR+sPuaNOL
Od+jcferufb1bvNINWcMHFejtFdLaOYU9Sqx03bORDVzDGKsiQIFN3JLIoFg
UUU0ECwpC6lEhZWXnS+DvMaIZzPjOJwEMjmCxY6v0t1WVd3EEMKI+JjS4ot4
TJRGecfrxjfUlCp4V7Cl56nocCgR64q5Kk+neMCkppIJl/msGzLWHTY6TUK8
oWXmNGuwg3W8Dh3Zq8Y7WUUNnBKfgjDtlPn1jEELZ7pB/rCnGuLtend1n4UL
+Na6bHC708gCiA4xCth1mtlwbDcxNwYdL5e6Hg7VjruE/Tby7qBpf9jysM8A
Nd8q+2y2EQS40W34NNCw1mmYaZIDRCAIPgd0N9ms6LYwxlwSuL3Urvt0xAk1
YmNCMK+jP5AUJrUIiuecfLAuuz4N+EkgCOBGVciJKuywohLwgSoBH9RGo3ih
lj1rY8FAHNWR+uSoGQt3SAU3cJ0i5JiRCQT71ES/gbrYrHw54X453bzVb3sS
qP98pePZdBPM6L3Bxmm3bqxBPddmXumpBYJPJlvAcYFHHXUIAR9ssNl6kVeK
aIN+pSWCBQXpgQvtr8KDZ5i08+7kBhUjYlCElOLKCCQ6GkeMqay4iEEHM2ix
ElGaQpHJ5yejMRdV6iyJIoMrTC0tPg+uVSG9ZTUVdHhI0EW14usW9V2d9IZa
mGmtym9yYozqfCI2DggaNCU+J9NbS+usZfos1DY9sUmJruMW2xh5Jny2m18+
auPPuZS9ejo0T2ibLyY8YDK3+x2TjSpQ36LXON+q91bReq28WkElCLCvRjDr
NeyMNW6NNEy0aLth2c0UUN83696f9vueTTgGqmlm2h04rncdmr1tv228XgS9
dLPHPNUo9duY7Vqiz0ABght+28G0Z2+o7tFA7UaHoU2G8IjLQYOwVhAToJYa
xfMO7qHcmsR+cUmPoBAg9ktKp0yk5Tr2sp275hRAF50wksd0JIC45BAsO4VA
cNLImq3mBwwMIDikp/Uo8fNu+UHgcLQ9GXW+mG76fKkdBLgFYhx3bfvrA07V
aL1qtdu+0e9c9ztgWG8NQWORjNQJ4IVtdhqB1JiNtdIom7SxQXSAr09zeNrL
RO3h6Uv/HxmiWBw=
    "], {{0, 100.}, {150., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72, 72}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Source" -> "http://www.eol.org/pages/328605", "URL" -> 
      "http://www.wolframcdn.com/waimage/hset050/ac9/\
ac99116210e54c705c59c5a92e61cb14_v001s.jpg"]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{150., 100.},
  PlotRange->{{0, 150.}, {0, 100.}}]], "Output",
 CellChangeTimes->{3.813856653674185*^9},
 CellLabel->
  "Out[403]=",ExpressionUUID->"010998a5-fd1c-4bc4-a183-9fb2fb23ee09"]
}, Open  ]],

Cell["\:4e5f\:4f7f\:7528 Part \:51fd\:6570\:ff1a", "Text",
 CellChangeTimes->{{3.788387969871319*^9, 3.7883879746314783`*^9}, {
  3.790001378067197*^9, 3.790001380757229*^9}, {3.7900839835441637`*^9, 
  3.790083990168878*^9}},ExpressionUUID->"302c1b48-b4d8-4e97-873d-\
6388c49fcf3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"assoc", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.788387885843029*^9, 3.788387901891833*^9}},
 CellLabel->
  "In[404]:=",ExpressionUUID->"12c14821-bb2a-4398-a10a-476d0fae2188"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.813856667880073*^9},
 CellLabel->
  "Out[404]=",ExpressionUUID->"6c9bfc75-c1b2-4165-a586-cec9f8d62b95"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"assoc", "[", 
  RowBox[{"[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7883879770892305`*^9, 3.7883879793345675`*^9}},
 CellLabel->
  "In[405]:=",ExpressionUUID->"d9606828-1db3-4605-ba59-ed9c050faeff"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
35D/3Zc3/+WvfvCPv/js3331/h+9M/r0IPc7j1o/etZ5bxT58knxrT3viwPX
ixPXxchwdWR8drP6+Mzy+Gj10aHj0ZFztKVPxRnAjMJR1maI6fKRrU6M00W8
dcOMNBpkuFaQZu1sOEQqFLmgjqUyxN5AcvXIunsgjafh6RwWtK39Q329KTAY
H2i1D6pV5VZvZX2DCLZxKMaKJTiBMMUfJCUSDLBpC3ku6C+nJ+6zU0+jqgj6
iQ4b3KiaC63RTcIlHu41KfWuR4/L+kTpMqE9FJSbzFSBcBtUmtxsjlFviBpN
KfhNCgUWSGLjsaXfVwwHqnKVVd3iNXfF3T1Ze1vSbAtAXaoWWYUMtZil5dMU
kEjzRVpnKG0ORaUeq74raOyIAPHeoazYpafrxHKfDiS8cy4fXSp3L2R7Vwpg
hZ1DdqmPB0t155z/+APzi4/tj962nVytVKrCSIheTKqSflnQxrNJ8SYOPKhj
7KTsT7ci749SHx/lXp2Wf/rh+E8+O//Zpxd//cN3/s3Xr/7jr370f/79L//D
P/udf//z7//Dz7//3/7+l//0f/3Hf/yjV985rP7TP/7VP/1v/+q//ssf/09f
f/zr7z/70dPB96+bf/CiDy6A9w+jXzzNvxh799ua8z3TzYllPFLtbcsux+aL
A+vZweqwp81ludmsMFeSRdPCzSjX4SW7PdRYlJ9Ly5JRXnidvukmVEvCWk2Q
y9FicXSrzX3ydO3sQp/Joat1yt6+4vpm7fzclssxwiF8rSoFsDwb6HSO3eqq
+gNtf6DubSm7XfnWlrzTkXQ6svNT56PrjUpRYDZMK6R3tLJJmxJmk8AsomW7
DOEzEGJ2JlAHOL3tXUmtzx8cakGlzZbZhRpo2apinZ/IUCtNfrbECMXR6SzJ
H4YFs+h8lzEYqw7PzfvHxk5PnIyDojoXDWNiESxokYEoMluh5VqMTINW6LJB
ZB0cq/cu9UCM5S1mbZvTO5Rsn8p2LwBBBeA4PJO09tjlLWJ9SO0fcc6ea56+
Z336ztqT565OWxELMQoxRdIryXqVEYvAISUEtPRB3Pq4G3r/IPO9x+0vLtu/
/O7jX33v+dcfX/7ii2c//+LFzz5/69c/fvWff/3H/+Vvf/n//uPf/dP/+u/+
6X/5H/7zn/3o3/7k1T/946//67/46f/49Sd/+unNn31+85O391+dVn/0vP+j
lwOQS3/3ncbL481BRXq6YwLgtrvCQU+4N1AOu/Ldvmaroy4WhZkcMDKhN8h0
eKm2NfyqHe/10IIbjIiPmYuKWmX14Z6115OBVRaOICplGiD49tvu/jZ/e1tw
fmF69x3/tz+KHY9X2m1puyH3rsM968B3hAdjE5DneGzc39f1+7JeT3J1tQY4
Dgea4/EquCpWLRCt6t6Kdp6JnrBK4SmPML0u8plJqwp4okGuAqXsSys7wtpQ
ku9wo0V6OE8ttkXJMssXx0Xy5EASsxGDxwpET3hxMw3Nd2mjM+31i7XHb7mP
z8ylCtPnWwoG4aEI0utb9AaWMuXb9zhlm/RMi1rp88Di3b/Qbx8pO/uS/pFs
50K9e6kaP9YfPTEcPdKDYNMeccsdIpjGgDa+ll480928sD594d7qqqKb1EJE
ktuUJdaEGac0pGeC6YSM5/WNj06Lv/ji/OuPTv/s+89/8sHpq0f9z24GT3dL
T/dqX3324vfeu/6bH3/xP//513//J7/31Qc3X71/+evf/fbPPnr8k3ePv/7w
7IvL3u8+2/3h89HHx9Ufvtj+6YcHn12VPr3OvTjcPO6bjrdNZ3um00PD2ZFp
dyBvtwRADq22PJvlBsP0dR/FsopesWHMFuwKGBPSqFkEDpWLCsbDtfOjtX5P
3qiwsxlirUx7/Hj1k28HLi4M4335kyf2jz8Mf/4qc32+OthSDDqKTR/C513e
3lacnID2pBjtqnZ3lN2OcKsnvrq0g5/T7yn3R+Z2VR7xk9yrMLtpmYWdsMoR
CY8g5uI5tTijaGmzgk1tMfI7/FSbFSqT/fnfvNElT4nX2JEybSONi1eoyRot
VaeWtrj+DDxRx1R3mPvX6kfvrr389saTl67hgTxfpRbKtEyJFIzDAwlosc0A
Wks1iMD76gPe1oHi/+PpPYMbybNsv1HoxVNIqzUzO90z3dNd3tB7770vek8C
IEB474HMhEt47z1h6L33ZLGKZdtXmzE9dmcnVorVewrtPrkXoW/S5XSEIm5k
/JEAWSz88tx7TiIBqMw3oxMIapyNuKdJ46zXexqMviYgaHI1YMZSKZYrQXMU
mjy9o8LiqXH5WoOhAVRWSxx9zCVWCogNyGy3gTeqIHbQe8vY/ZXC0VoLb3An
hGwFkHdn6WdrHr+GbhJOKWgD7Il2GXXQpeKeLAaebyW+udz43cu937/a//Z0
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
KJlCSY3FPuQNTGs0HVRqHnkmi8cvpTNyZfIqjbpFyC+1GXswUQ3CrUBYFQZR
Y9g4mnaS/fiIXtqu4jcq2HUiRplMUoXjzUxmFp2exf3/SjrvqDbTM+17N5NN
NpOcbHYyM56xx73Qi+lgwAYbN2xselfvvfcu1CVASCAEAoTooiN676a6jG08
tmc8fZLMnE2ym6/t98f33STn3Oc9Qocj6Ty/57rv65L0viJHUvBhSvEVSI4y
esJgK3G6j9NSW2qruv2PH8JGk86Xkk+ytDEEYQiefaHKklVluM7lxCglVxnE
WAYhCV+emB7/UULk8aBT78dHBl9NjL6eGFRyO0HOqhzpcgx312NKb50++ovT
H7zz7pEjNxNP70y2fL83dDDV+Pls/Uab5EWg+vPV9p8OZl6tdL3dHPhmZ+xv
r9ffbox+uzO53u/qtoll2Hv1cjyUkVuio+cO1otn27UzrepXi+1fb/btDNS+
mmv785PxlzMt3236P5tt/Xq1+4tFHww7QAZJ89GA/e2sb9jCVZRdL447ib0W
Sc9JLksPLko5X3E1mFuS9jTg+nq166ed/j9udkAM7FKWL9YyZozEpWr6hpO7
YKWOaFA+Xl4N+qq+NMmOy4KqwWTB7Ft2CtdcsjE9db/D3MItc1LyRg2MBYd0
qV5G5sUUoU9h6GF4RgSCGHz4YT0umECLpjLiUdhQDCaczb4sk2bxeelUcgIB
HwX3s/kpbA44mStV8pugPgklWUxMrOJcP5SeIk/NucknpbIJoLIEZHkYnZUo
01ynM2KYzFgwrlzKJRU3FTKjVX5joIUw1EFtriu1Gu6JRKk4fEgl4QJeCMkl
GC8MY8riaNwoDOY89ASHpUzNv8fEXMUWp+XdjEcW3s67nXknKyM5Jjwm+JOM
pCBsxV2jiquVs29dT/rwdz//9TtHjv/bkfMf/JPHyPzLwfSftnoe9xtWm3mv
x2verHifL3lX/dWfLXd/+XD47cYwsHs80dljk4mQ2WpSHq0gFXEjUk2+L8Hc
aNETx9zSP+6P/Lg38mjE+cVSx18/nfxxd/i7jb6DqeY3895vV7ofD9YF7ILZ
Rvkjf+1uj61VhFWWZ3HupdBux/Pyr9JzUvLiz+UnnRMjb+0Ou/7P6+Uvlzu+
XW3f6la3y0u7FWUBHbpbkDdZhX7UIgOCDvw1ZW60/EGUi5KtLIirwd5Ydomf
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
RO3h6Uv/HxmiWBw=
    "], {{0, 100.}, {150., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72, 72}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Source" -> "http://www.eol.org/pages/328605", "URL" -> 
      "http://www.wolframcdn.com/waimage/hset050/ac9/\
ac99116210e54c705c59c5a92e61cb14_v001s.jpg"]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{150., 100.},
  PlotRange->{{0, 150.}, {0, 100.}}]], "Output",
 CellChangeTimes->{3.81385668002931*^9},
 CellLabel->
  "Out[405]=",ExpressionUUID->"e67f0881-c08e-4eb8-aed5-3e67ab8f0895"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lookup", "Subsection",
 CellChangeTimes->{{3.739023984449273*^9, 
  3.739023985698222*^9}},ExpressionUUID->"f4cf70dd-97f1-44ad-aa72-\
5581e57c405e"],

Cell[TextData[{
 "\:4ece\:5173\:8054\:5bf9\:8c61\:63d0\:53d6\:503c\:7684\:53e6\:4e00\:79cd\
\:66f4\:901a\:7528\:7684\:65b9\:6cd5\:662f\:4f7f\:7528\:51fd\:6570 ",
 StyleBox[ButtonBox["Lookup",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Lookup"],
  FontWeight->"Bold"],
 "\:ff1a"
}], "Text",
 CellChangeTimes->{{3.739023989551724*^9, 3.739024005217432*^9}, {
  3.739024043937009*^9, 3.739024062718239*^9}, {3.743960828451888*^9, 
  3.743960837613512*^9}, {3.78838949200428*^9, 3.7883894979187264`*^9}, {
  3.790084069711532*^9, 
  3.7900840951624565`*^9}},ExpressionUUID->"70d404fc-150c-40fe-b8e8-\
ca93c5bcaa42"],

Cell[BoxData[
 RowBox[{
  RowBox[{"assoc", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "100"}], ",", 
     RowBox[{"4", "\[Rule]", "200"}], ",", 
     RowBox[{"\"\<cat\>\"", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
35D/3Zc3/+WvfvCPv/js3331/h+9M/r0IPc7j1o/etZ5bxT58knxrT3viwPX
ixPXxchwdWR8drP6+Mzy+Gj10aHj0ZFztKVPxRnAjMJR1maI6fKRrU6M00W8
dcOMNBpkuFaQZu1sOEQqFLmgjqUyxN5AcvXIunsgjafh6RwWtK39Q329KTAY
H2i1D6pV5VZvZX2DCLZxKMaKJTiBMMUfJCUSDLBpC3ku6C+nJ+6zU0+jqgj6
iQ4b3KiaC63RTcIlHu41KfWuR4/L+kTpMqE9FJSbzFSBcBtUmtxsjlFviBpN
KfhNCgUWSGLjsaXfVwwHqnKVVd3iNXfF3T1Ze1vSbAtAXaoWWYUMtZil5dMU
kEjzRVpnKG0ORaUeq74raOyIAPHeoazYpafrxHKfDiS8cy4fXSp3L2R7Vwpg
hZ1DdqmPB0t155z/+APzi4/tj962nVytVKrCSIheTKqSflnQxrNJ8SYOPKhj
7KTsT7ci749SHx/lXp2Wf/rh+E8+O//Zpxd//cN3/s3Xr/7jr370f/79L//D
P/udf//z7//Dz7//3/7+l//0f/3Hf/yjV985rP7TP/7VP/1v/+q//ssf/09f
f/zr7z/70dPB96+bf/CiDy6A9w+jXzzNvxh799ua8z3TzYllPFLtbcsux+aL
A+vZweqwp81ludmsMFeSRdPCzSjX4SW7PdRYlJ9Ly5JRXnidvukmVEvCWk2Q
y9FicXSrzX3ydO3sQp/Joat1yt6+4vpm7fzclssxwiF8rSoFsDwb6HSO3eqq
+gNtf6DubSm7XfnWlrzTkXQ6svNT56PrjUpRYDZMK6R3tLJJmxJmk8AsomW7
DOEzEGJ2JlAHOL3tXUmtzx8cakGlzZbZhRpo2apinZ/IUCtNfrbECMXR6SzJ
H4YFs+h8lzEYqw7PzfvHxk5PnIyDojoXDWNiESxokYEoMluh5VqMTINW6LJB
ZB0cq/cu9UCM5S1mbZvTO5Rsn8p2LwBBBeA4PJO09tjlLWJ9SO0fcc6ea56+
Z336ztqT565OWxELMQoxRdIryXqVEYvAISUEtPRB3Pq4G3r/IPO9x+0vLtu/
/O7jX33v+dcfX/7ii2c//+LFzz5/69c/fvWff/3H/+Vvf/n//uPf/dP/+u/+
6X/5H/7zn/3o3/7k1T/946//67/46f/49Sd/+unNn31+85O391+dVn/0vP+j
lwOQS3/3ncbL481BRXq6YwLgtrvCQU+4N1AOu/Ldvmaroy4WhZkcMDKhN8h0
eKm2NfyqHe/10IIbjIiPmYuKWmX14Z6115OBVRaOICplGiD49tvu/jZ/e1tw
fmF69x3/tz+KHY9X2m1puyH3rsM968B3hAdjE5DneGzc39f1+7JeT3J1tQY4
Dgea4/EquCpWLRCt6t6Kdp6JnrBK4SmPML0u8plJqwp4okGuAqXsSys7wtpQ
ku9wo0V6OE8ttkXJMssXx0Xy5EASsxGDxwpET3hxMw3Nd2mjM+31i7XHb7mP
z8ylCtPnWwoG4aEI0utb9AaWMuXb9zhlm/RMi1rp88Di3b/Qbx8pO/uS/pFs
50K9e6kaP9YfPTEcPdKDYNMeccsdIpjGgDa+ll480928sD594d7qqqKb1EJE
ktuUJdaEGac0pGeC6YSM5/WNj06Lv/ji/OuPTv/s+89/8sHpq0f9z24GT3dL
T/dqX3324vfeu/6bH3/xP//513//J7/31Qc3X71/+evf/fbPPnr8k3ePv/7w
7IvL3u8+2/3h89HHx9Ufvtj+6YcHn12VPr3OvTjcPO6bjrdNZ3um00PD2ZFp
dyBvtwRADq22PJvlBsP0dR/FsopesWHMFuwKGBPSqFkEDpWLCsbDtfOjtX5P
3qiwsxlirUx7/Hj1k28HLi4M4335kyf2jz8Mf/4qc32+OthSDDqKTR/C513e
3lacnID2pBjtqnZ3lN2OcKsnvrq0g5/T7yn3R+Z2VR7xk9yrMLtpmYWdsMoR
CY8g5uI5tTijaGmzgk1tMfI7/FSbFSqT/fnfvNElT4nX2JEybSONi1eoyRot
VaeWtrj+DDxRx1R3mPvX6kfvrr389saTl67hgTxfpRbKtEyJFIzDAwlosc0A
Wks1iMD76gPe1oHi/+PpPYMbybNsv1HoxVNIqzUzO90z3dNd3tB7770vek8C
IEB474HMhEt47z1h6L33ZLGKZdtXmzE9dmcnVorVewrtPrkXoW/S5XSEIm5k
/JEAWSz88tx7TiIBqMw3oxMIapyNuKdJ46zXexqMviYgaHI1YMZSKZYrQXMU
mjy9o8LiqXH5WoOhAVRWSxx9zCVWCogNyGy3gTeqIHbQe8vY/ZXC0VoLb3An
hGwFkHdn6WdrHr+GbhJOKWgD7Il2GXXQpeKeLAaebyW+udz43cu937/a//Z0
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
KJlCSY3FPuQNTGs0HVRqHnkmi8cvpTNyZfIqjbpFyC+1GXswUQ3CrUBYFQZR
Y9g4mnaS/fiIXtqu4jcq2HUiRplMUoXjzUxmFp2exf3/SjrvqDbTM+17N5NN
NpOcbHYyM56xx73Qi+lgwAYbN2xselfvvfcu1CVASCAEAoTooiN676a6jG08
tmc8fZLMnE2ym6/t98f33STn3Oc9Qocj6Ty/57rv65L0viJHUvBhSvEVSI4y
esJgK3G6j9NSW2qruv2PH8JGk86Xkk+ytDEEYQiefaHKklVluM7lxCglVxnE
WAYhCV+emB7/UULk8aBT78dHBl9NjL6eGFRyO0HOqhzpcgx312NKb50++ovT
H7zz7pEjNxNP70y2fL83dDDV+Pls/Uab5EWg+vPV9p8OZl6tdL3dHPhmZ+xv
r9ffbox+uzO53u/qtoll2Hv1cjyUkVuio+cO1otn27UzrepXi+1fb/btDNS+
mmv785PxlzMt3236P5tt/Xq1+4tFHww7QAZJ89GA/e2sb9jCVZRdL447ib0W
Sc9JLksPLko5X3E1mFuS9jTg+nq166ed/j9udkAM7FKWL9YyZozEpWr6hpO7
YKWOaFA+Xl4N+qq+NMmOy4KqwWTB7Ft2CtdcsjE9db/D3MItc1LyRg2MBYd0
qV5G5sUUoU9h6GF4RgSCGHz4YT0umECLpjLiUdhQDCaczb4sk2bxeelUcgIB
HwX3s/kpbA44mStV8pugPgklWUxMrOJcP5SeIk/NucknpbIJoLIEZHkYnZUo
01ynM2KYzFgwrlzKJRU3FTKjVX5joIUw1EFtriu1Gu6JRKk4fEgl4QJeCMkl
GC8MY8riaNwoDOY89ASHpUzNv8fEXMUWp+XdjEcW3s67nXknKyM5Jjwm+JOM
pCBsxV2jiquVs29dT/rwdz//9TtHjv/bkfMf/JPHyPzLwfSftnoe9xtWm3mv
x2verHifL3lX/dWfLXd/+XD47cYwsHs80dljk4mQ2WpSHq0gFXEjUk2+L8Hc
aNETx9zSP+6P/Lg38mjE+cVSx18/nfxxd/i7jb6DqeY3895vV7ofD9YF7ILZ
Rvkjf+1uj61VhFWWZ3HupdBux/Pyr9JzUvLiz+UnnRMjb+0Ou/7P6+Uvlzu+
XW3f6la3y0u7FWUBHbpbkDdZhX7UIgOCDvw1ZW60/EGUi5KtLIirwd5Ydomf
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
RO3h6Uv/HxmiWBw=
         "], {{0, 100}, {150, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", ImageResolution -> {72, 72}, 
         Interleaving -> True, MetaInformation -> 
         Association[
          "Source" -> "http://www.eol.org/pages/328605", "URL" -> 
           "http://www.wolframcdn.com/waimage/hset050/ac9/\
ac99116210e54c705c59c5a92e61cb14_v001s.jpg"]],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{150, 100},
       PlotRange->{{0, 150}, {0, 100}}]}]}], "|>"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7809338420030117`*^9, 3.780933844937152*^9}, 
   3.7883895166679773`*^9, {3.7894081369240675`*^9, 3.7894081395690355`*^9}},
 CellLabel->
  "In[406]:=",ExpressionUUID->"cd60745e-92e0-4138-be62-af898802720b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Lookup", "[", 
  RowBox[{"assoc", ",", "a"}], "]"}]], "Input",
 CellChangeTimes->{{3.7883895185819435`*^9, 3.7883895251624765`*^9}},
 CellLabel->
  "In[407]:=",ExpressionUUID->"1a362dd4-d6e1-4294-a166-0d6eaa267854"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.813856698119906*^9},
 CellLabel->
  "Out[407]=",ExpressionUUID->"4be24176-9c61-4614-969a-e05b40225678"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Lookup", "[", 
  RowBox[{"assoc", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "\"\<cat\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7883895313830814`*^9, 3.788389540145527*^9}},
 CellLabel->
  "In[408]:=",ExpressionUUID->"828acd58-3603-4ac6-b829-f8eedc8df79c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
35D/3Zc3/+WvfvCPv/js3331/h+9M/r0IPc7j1o/etZ5bxT58knxrT3viwPX
ixPXxchwdWR8drP6+Mzy+Gj10aHj0ZFztKVPxRnAjMJR1maI6fKRrU6M00W8
dcOMNBpkuFaQZu1sOEQqFLmgjqUyxN5AcvXIunsgjafh6RwWtK39Q329KTAY
H2i1D6pV5VZvZX2DCLZxKMaKJTiBMMUfJCUSDLBpC3ku6C+nJ+6zU0+jqgj6
iQ4b3KiaC63RTcIlHu41KfWuR4/L+kTpMqE9FJSbzFSBcBtUmtxsjlFviBpN
KfhNCgUWSGLjsaXfVwwHqnKVVd3iNXfF3T1Ze1vSbAtAXaoWWYUMtZil5dMU
kEjzRVpnKG0ORaUeq74raOyIAPHeoazYpafrxHKfDiS8cy4fXSp3L2R7Vwpg
hZ1DdqmPB0t155z/+APzi4/tj962nVytVKrCSIheTKqSflnQxrNJ8SYOPKhj
7KTsT7ci749SHx/lXp2Wf/rh+E8+O//Zpxd//cN3/s3Xr/7jr370f/79L//D
P/udf//z7//Dz7//3/7+l//0f/3Hf/yjV985rP7TP/7VP/1v/+q//ssf/09f
f/zr7z/70dPB96+bf/CiDy6A9w+jXzzNvxh799ua8z3TzYllPFLtbcsux+aL
A+vZweqwp81ludmsMFeSRdPCzSjX4SW7PdRYlJ9Ly5JRXnidvukmVEvCWk2Q
y9FicXSrzX3ydO3sQp/Joat1yt6+4vpm7fzclssxwiF8rSoFsDwb6HSO3eqq
+gNtf6DubSm7XfnWlrzTkXQ6svNT56PrjUpRYDZMK6R3tLJJmxJmk8AsomW7
DOEzEGJ2JlAHOL3tXUmtzx8cakGlzZbZhRpo2apinZ/IUCtNfrbECMXR6SzJ
H4YFs+h8lzEYqw7PzfvHxk5PnIyDojoXDWNiESxokYEoMluh5VqMTINW6LJB
ZB0cq/cu9UCM5S1mbZvTO5Rsn8p2LwBBBeA4PJO09tjlLWJ9SO0fcc6ea56+
Z336ztqT565OWxELMQoxRdIryXqVEYvAISUEtPRB3Pq4G3r/IPO9x+0vLtu/
/O7jX33v+dcfX/7ii2c//+LFzz5/69c/fvWff/3H/+Vvf/n//uPf/dP/+u/+
6X/5H/7zn/3o3/7k1T/946//67/46f/49Sd/+unNn31+85O391+dVn/0vP+j
lwOQS3/3ncbL481BRXq6YwLgtrvCQU+4N1AOu/Ldvmaroy4WhZkcMDKhN8h0
eKm2NfyqHe/10IIbjIiPmYuKWmX14Z6115OBVRaOICplGiD49tvu/jZ/e1tw
fmF69x3/tz+KHY9X2m1puyH3rsM968B3hAdjE5DneGzc39f1+7JeT3J1tQY4
Dgea4/EquCpWLRCt6t6Kdp6JnrBK4SmPML0u8plJqwp4okGuAqXsSys7wtpQ
ku9wo0V6OE8ttkXJMssXx0Xy5EASsxGDxwpET3hxMw3Nd2mjM+31i7XHb7mP
z8ylCtPnWwoG4aEI0utb9AaWMuXb9zhlm/RMi1rp88Di3b/Qbx8pO/uS/pFs
50K9e6kaP9YfPTEcPdKDYNMeccsdIpjGgDa+ll480928sD594d7qqqKb1EJE
ktuUJdaEGac0pGeC6YSM5/WNj06Lv/ji/OuPTv/s+89/8sHpq0f9z24GT3dL
T/dqX3324vfeu/6bH3/xP//513//J7/31Qc3X71/+evf/fbPPnr8k3ePv/7w
7IvL3u8+2/3h89HHx9Ufvtj+6YcHn12VPr3OvTjcPO6bjrdNZ3um00PD2ZFp
dyBvtwRADq22PJvlBsP0dR/FsopesWHMFuwKGBPSqFkEDpWLCsbDtfOjtX5P
3qiwsxlirUx7/Hj1k28HLi4M4335kyf2jz8Mf/4qc32+OthSDDqKTR/C513e
3lacnID2pBjtqnZ3lN2OcKsnvrq0g5/T7yn3R+Z2VR7xk9yrMLtpmYWdsMoR
CY8g5uI5tTijaGmzgk1tMfI7/FSbFSqT/fnfvNElT4nX2JEybSONi1eoyRot
VaeWtrj+DDxRx1R3mPvX6kfvrr389saTl67hgTxfpRbKtEyJFIzDAwlosc0A
Wks1iMD76gPe1oHi/+PpPYMbybNsv1HoxVNIqzUzO90z3dNd3tB7770vek8C
IEB474HMhEt47z1h6L33ZLGKZdtXmzE9dmcnVorVewrtPrkXoW/S5XSEIm5k
/JEAWSz88tx7TiIBqMw3oxMIapyNuKdJ46zXexqMviYgaHI1YMZSKZYrQXMU
mjy9o8LiqXH5WoOhAVRWSxx9zCVWCogNyGy3gTeqIHbQe8vY/ZXC0VoLb3An
hGwFkHdn6WdrHr+GbhJOKWgD7Il2GXXQpeKeLAaebyW+udz43cu937/a//Z0
JYQy5nSc47hh2SrZdCuPo3qQ8EXK8GrNfhRTBjVjQXw0bp+wqTqceOd8dHJ+
bspsalEi5VJ5uUhcQSRn9Q/e6em93drxC/Ae/QOZA30ZHa0fVZX+TUPl39Km
C53GIaO6DZGVodIyubhIKSkMeLtX5qf9ng6rsTYS7FuZJ64uzVgNzUppKUib
OnOfQrxttbTfMMWqtFg1EFSraoyGZpGgSMgvxpAGrapdyK4gjmeAU2qrf6+5
8v3Oultd9bfbaz6C7WD74yHWrQnBA4Ika5L/aIhxZ5B+e0qQxVCWMJHSEfq9
aV4mBy1lIUU8dQmIlCy4I9BkivAMmSFHZS0xeGot3kbIFwJFFkf0mCF4wJFk
iFR5Um2hUJ0LoBXGEpmuBOasCCuCkuvLgJ0p0GYKdxj9N+exI4vD0fkhjamC
xvqYy78Pud7hbzI5azQ352e61co6KbvSrR03CPt1nH4FqV1L7ZNMNMmJbTJC
s4HTpyA1h9TktJ23EUTmnRKLjMAnts/0V04/qehvzEGYw3Gr+O1R8uVOKG7k
BTV0u3hyP6w9mdN75aQ5nLnhkkGFlUTQ4H5IMW+lXi5ju0mBQdYSsg9vpOhO
6KWqarGkkMvPZ3PySaTM3v5b/YP3pwmFQ8M5w4PZQwMZT7pu11f/XUvt3zNI
BW7LkMfWJ2BlQyizGVvYlLu4qmIhPhoPDRhUFSFvz0pyOuDu0SkrcVWNRduo
EBXzGNmYosph6nTZuuzGNouhxW1/EvaNmfFOMa8MkdTLhQ18RiWHWjE5lDny
JGNmsmx8sKCj6U5t+XttDbdG+/P6mR+N8O5OizNn5Lkz8jySLJckyYOaVRQB
UKIgU6CrFOorJKZKEV5GEt0GfBLjIzCNEMDVjhKto1xhKOQqHzFF95iSB1xF
hlCdLdbmSvAcpaUIvIrWXoPb6qCFouYqaKFAEPe3GIJtBl8LEAzNDwbnerWG
cg7vnlD4CNeX6W2VN2WucTq6lOIKIb00qJ+OGWkpM9cmGJdPtZm5Ixp6r57d
H1LPWsQjBn5fSEdeDcjmPRKrgiCcaacMV032FEGNd+SPteWIia067gDO7Yvr
6ftR1ZcH4eO41swdiGlm90PoaVSzYGA9TeJf7Hj2QuLLZfXRvMyl6rWgbQHz
gE3XiilAfQU3Z30FxUxGITirWUqJSNgyNpLzpOvuQO99MqFglpA7NXKfRckz
adoNaL2Ile01dwYcT7SycvC06fAIZO05/8BifGI1OR3x9Dr1LWF3X8wzYFLX
65EGC94edAyC4Q+4hhymbiivYygeIupVHRplB+CjEUv49HoWuYY+UyMVPqGR
67ra7hfl/Q1UY+2HA6yPB9m3xvkPyYo8pqaMraugISUz0vwZae4I6x5RkMHX
lQE+ua1KZq5gqzKUtmzMlaVy5aKOXMxZoHYUK835Im0WQ3KXj2VK8XyRLluo
zYIsr3FVmAJ1ekeN0VlvcDfh7nqts1btqNF6GwzBFsxWBXMQWjGMPIutTqcr
sxiqXI4GvaVca64AB26ztmOyaimzwqcZnTNSN72yEEYxcYZXHFKLYMwmGktY
uGEDzaEcn7Myj+b1lxuug3njWkQdtwstCoKU2sUYrRIS6s2i4Xkbe9HBCWum
F+3Mz/a8R3HMLRkNKKfWbLzzmHrTIdhwCD7ddG77Bdt+3nFSOmeeUrFrME6V
XlEvFxXyeVkcdhaPU8BllXCZFTJRk149xGXUDvU+6O/5mMMox2SNUkEFIq1y
W3s8pi67rnUxPL0cJ6T8o6sJ4uocAbb7K4z11MxCeDxo7wk7nqwlSetJAoD2
mXvdpl6QfDJIiLjHLJp2I9Zi0/cEnKNGdScMVqWwic+olfPbGaSq0f4cLrOV
RqkfHynqbLvf3nK/ryd7mH0bGukI5x7IkIYVc7QVbE0lU1VOFGcT+I/J4myO
upCPF4kNxXJLudJeAuDUnhwo1JGN2PMwRxFqL5KbCtiKhwpzsdZdjdrKpIaC
v64rTf4GaLMQ7hzBVnOgWe2slpiKJcYSha1cqMkHL+qKdrlDHV5/ezzauzg3
tJAcsjnrVbpiBVKg1dTqFHVKdqWG02zkdh1GVAkdc9uLAkHQIM4ZStkFm2Hs
dMl0teH45fOlv3x18JdvTv71+6s/fXV4vRtMuUQBHQXk6cemtoPii7QqrpmY
N5L2w6KTOeW6mxdTTc+pSHteybZLmNSQIRVuungrVvpZUrkXFdiknTp+AwR5
6HgyYR6Pkcml54jYZYioQY/2WPERh3FcwASDkcmmFigl1TpVvccBI29mKUZc
ihB2F9jrCcpmirq7yFyOEncWaAcrrJX4dNTV5zW1A8HNNHkzTfKbu8K2Qa+x
P2QbSQeJYceIHmkyoM1B+wiuaFIIa/RoNyZpxaQdJs0wZ7aut+3uLKGaSW3k
MFpgSyff1CDjo1HOnWlhBlmWS0OK2FgpV13O01SQxTkw/oS6SrG+XIgXc9Fs
gToPs5cqrFl/ZZcjt2RLLblKRxECjdRWysWyEEelKdxmDLVqXDUAS+9rgOQe
TPYEEt1QrngH8OXrcphoBkedyVNlq2zlANfpbfYH2tNzA6upkcXEoDfQBk1V
iRQjslJUUC6ZLZIQygyczv2Q0icjXC+5QIZA0IfNnixYv7hI/9Pn+3/56uj/
+Ke3//uf3vzzu5P/7Q+v/s+/fPb7t9s7UfV2UJk00lXk5ig2cZVCd1yMi5j4
bE4CdRDiL5spS6bZVRN1y87ZtLGfxrHrlHbHw7uax54taVIWYtwwGbeORxx9
drwBExVL2fkov8qo7DBjvUakJ+6heCzjONomE1bIxcUGfX043Lu6QEiHJlcj
M9sJ5lKQsB6jrEXJEevAUnBqc46y4B+bcw6ELT1R+5O12PTGHBHWcC+064Rn
cilMjjpGLaoWv6Vvc4HtNPSgwmqAyKeXygT1DuMoKumkTBY/ab4z0ZvHmK4T
MzrV4mGrmtRDfh8IziryWepSwMdQFtEVhUxFEUWUI8KrlNZ61ForM5TRpQ/J
wttgY5S2XGikN/iM2XJbgcpdpfbUIvYqhjJLbCjVeVstkR5wKWpHnc7daI90
eKLtkA480VZPssMSbgTWYnOh3F4q0edDEjR76izOGoetLuBqDjqb3da6cKzH
6W2xO1o1aJWCWyKcyUdmq1adHBunTznZsBfAIAyueRSXq67v3279+avjf3l3
/q/fXf3Xv7z7l3eX1zuxX73c+b/+/Pm/fntxGNc/X3ZAZkQmq33Cvn0358DB
eBaXfnNo3Q3QE9qRFD5x6OfGkdF5NeEirPx02fzlun3HyTmJyM7iypSRtGid
jelHl4MTSU+/B2/BxZVaQQ0uadEIm6WMajc+MuebSYRIYDzMhga7vcHra/Z5
Wuc8Qysh8smK6GCBd7jI30myYraRBf/UYmB6wT+xHJqe940Cx5XI5HqcAAuX
pt1v6Em6x9L+qYC5z6ZujrgG91c58xGiWd2iltcLmEUiTrlR06MQNTJJJSPt
D2ij5Vr+YNDEXA0h+wvG3pn3x1i3oVtCmqBJ88nC7BlBFiSIWWGWUF3+14/G
yuMhuWT+7SnmzznIA5kpF9jx8QyeNlNiKkQd1UrHzedokSWZs9Jc0Kza1Yba
m3nqMrG2XA/jz16pthTqnWXWcL012qD2VCKuMo0fmm2Jzg0Ea6yuapulymYo
t+lKLdoyX7Dd4Wn1erv06lqVoEI2W4xRq/fDEulYpZ7aFcFm7cKJ56vu82XH
r19v/Ob11m9e7H15svbubON8MZi2YW/3Fv79t5/+6e3RccwIgnXzR4S9RRZK
a0TYt42T3qbRzzdVu35KRNnlFbUeeFhhaV9UOnjqF79O4S+S2hU99SKquJhD
0vqZTRcnrh9d8o5uxKaWg+N+vFMvrMPYNRJKGWM8VytudRn6Y4GJuchYJPgE
2ojLV+u0167NkQ7SvM/PTFAv99RXm8rtOHMvxU65JhZ9U5sx8lpkOuUeWgqM
r0en055hg7jKoWoOW3oj1icObbMJqfWY2tOhsWRozKprsurbdGgDcLTi3Tq0
TSdrT9pZa37Zacr4fMP9Yt17tmCD+ACec4T1AGqM+WCc9XCS9WiakwEcabK8
ScbtYcrPiNzbU6wPJ1k/56shFWbAyKNK7kAw5CBZYl0xT11Ek+WQBBkTrHtw
AIByeapyAu8RmZ8hw8vVtnKlPkdpzMM9VTpP1c2blfA8mbEQBIi7qq2eRrev
xeVodBhrHIZqp6nWaK5FNSW4rhaVl2lkVTJmCXssJ6oneORjYB3d4km3lLDh
kdtEI5cr1k8PI+/OFrdDhoRJ5pBSzALC02X/n98ePF10BpWUbbfUzOh2cfp2
bKxVLfHUxft207TnpV4k+Rt2ooVRt24lx5VDMcXwpoXxNKo88UuB4Ltt1zcH
noOA6Nm8ZsPLWHCNHy0xztd5S/5JO9IK9kY0U0Iby0K49Spxo1nbGfGNpeKT
0Wh/KNwVizw5XGWfr4m+e2H/5rn9xR72fAc5XhKcroiSttG0e3w9QloJTcYd
/Snv0HJ4IuEe0IpK7Kr6gKnDb2y3qutNaI1V0+A2tgdsvWADbLpOqwaqO+4l
rST551v4i23Hi1XH1aLtIm2GWHQU041y83qpjzoJd7qId/upjwdoj3pIt9sm
PhhhPqLIC7umfto59eN+yvtPZn48I7k3I7rLlmcJ0DyeMoclyeKjBRDSRepS
Cv8RVZQJqZ8py1cYa3B3h0hTRuI+mOHfvzGouhyVvdTgvTkRqtAX85RZHMmj
Hy7FD0cGEonRSHAg6HnisXSoFOUoVi6WFWi01XZHJwRbVFYt51YLZysX3LzT
BeN5yrRqF8cwkkc44OZ1BWRDXsVEUDWjILXaxaMYuc0tndjwijfcomUbZ9nC
WDbRLaz2OXTi7TL+al79xYb51bJmz8dZsZC15NooOrphpelIddA8P1szP40j
lzHl51u2zzat227uvH5my892q7pglh0t847XhOA6BJRc9nQ2fSJHTKsW0WoR
YWvAQUhFZm3GLg1a7bJ2zPmGLrb4767133/iOF8THKToT9fETmWzTwXyGYTD
4KZz4q02baPf3p0IDnnNjS5Dnd/SGnP3BG3ddk2T19iV9hN8hkGPfiTqIG0m
ZGcbxost68Wm7emm83ze+HLN+WrddZE2nibwq0VLF+lRDznjCSWzdzZjgJ49
xMjqIt6uG/rJEPMhRMK+2Y9gUPbTPuydfZ8iewTDbpb3gCfNk6AlYqRYqCjk
KQpYkpxZ3iOuPF+sKRNgxTy0SG6olumruEghB8mhS+4LNZmopVRtr0CMpWJ1
Hl+WwRY+YvMeiSW5JmOjx/3E4+gJegciviGntRPFKrmCHIBoMDdarR0GQzuk
Wuj/akGPB5tZ9ypfrbrf7fpBMnsOxnlYtOcXp80MPzIZ05F9itG9kPQopryc
175c1r9ZM8FQOwyKXyxq3qzqrxfUp1HpZQLdcnHCylEVsSaCjC0aKUZ6y6qV
Dp0TjM15XPnLY//1ghYes+vlb3o5Jkmr19DnM/bFXaNB24BB2aQW1XNJRSxC
KZsIcbXJpBpyGkeVoloePV8tK4f0t7tEvtoVfHGlvljlrvjHN4IEp6JBxynx
qluTzmGwRhZ1A1hcp6U9FRvzmJtNaIVZWenSt7g0zVpxtU5Ya8N6NqK8jbjk
eEEH1J5veo6XbPsJ40HSdLVsB3zPl20HEdW2XwHbuoEPuomP+qmZPTMPu0kP
BmYfd03fqu3/h/7Zu7PSgjHmvX7Kz/vIP+sjvzcrfSTUFBKZt5n8DClaotRW
AkEq5+EM4y6Z80CmrcAdLaixlqPIF6pKEFOtAjjipVwkE4Fo765ErcUSba4Q
y+FJbz7al81/AAT1eJ3N2moxNIMVjwaH/b5+XN8gEOcLJXlA0Ocb8HqHtUgr
daqANFjAJzRahePbXuVXO75vd1zvNkzfH3u+Ow4ez6mfLZuer5ih/vmTtW9P
Q7+/Tv1QxxHZVVr9dt0Mi6dJDKAch6VAx8ru0MzUJbWEBQM5pBgBgkA2rpqE
7W8vIsB9zyd4swoHuSKIjwZMo2ak1aHpdOM9ZqRFJ23iEAulzAYx/aZUwg6N
vEPALIG4oVNWrSSmNtOEvQXKyyPps03homdkztznV3dYpfVeVXvcNjTnHvNZ
emx4s8/xZCUJgaInZH6SdI7OOcZMkkbw3jZ5915SdrlquNqwvdrxvtoNXa16
DhKWvaj5YM4MHuD5qvM4oV9yiOJ6ZsLIrur+aTfhfh/5cfPIB41DP+sl3umf
uds2+l4/+WMYapPs+08I73dO/EPv9I/JggdyfQUIkA0mR16A4dVKTQWDnwEE
gSOiqzK42nT2ZgVeBRyBIDCV6krE2ly1owyGIBBUGoswS6lSWwgylCH5iLrY
aKo3GhrUaLkRrwOITkeXxdqGqqvUumq7qysQGPL7R7WqTspUPnm4CGH26rkj
4GS2HOIvNuzf7NihKx5GkHkLazekOEtpny4a3h2H3m46P9l2/PHlPBB8mtKc
zyEw0Y7C0rOYAvQI7XHDwQIB4rON0CfTOGnFQlu3M18u4aBBeMDrFQM8Bli/
XTO9WDWsBbkJN9mk6DAqQCB1ImqBiFYMXdQo79NKnsjZLXJ2AypolHDLUGkF
NMaF8OhWcnonPXO+zgWCG2Fi1NAbUHcvewkxy0jIMADWNGIfgSAfdAymAoR5
L8GFdbuRniUv7Tgl20tIjxLo1brl6ZLlYtl2uWg/W3CeJhxHCed5ynO16DuI
6g9i2k0/mjJzI1pGDGdUdf7Dk+n7w7NZHWMftQ5/MDhzf5yeMTBze5zxgCrK
ATfSO/Ve19jfD5Heo/AfqMy1RnsLtDgOP1OJlekMdSDGm6vTeY8FMAE1FRpT
vcXd4fD3AES+LF+kKriZg/pspbEASgvxwd9gctaheLFUmSNHCzS6m/fFiETZ
cnkB6BFKpa5WaWvMtjaHu9vm6LJae1RIG41YwiHW2RBSUMcMqejbbvnrZcur
Bc1RSPR63X695ni+av/qJPz1WfSzA3Aya799nv7uNPrri7nvnyavV4zXi/q3
69aDoPQ4oli1MFfMNxHDQG1NakhzKsK2i7/p4J7H0HUbO60jLxlp8AB42I5b
AA15KyIOGaaks+XS2VIJrYQ1lcUh5FFGMlBeM8ptldDqRLRqJR8GYiWOVAcd
XTFH106KcLLC2E1RDiDRz81G8D6bpGk7wkw6pnzaPjvaqZc2a8QNJqwtYBmx
yrpNgq6wZvpyCf/lRRz+F6833NdrrvOU5SRhPoqaDiLm46j9ZM59EnMdRm1L
dvmSS7bkkqdtopRVtOiUVrX//ZPJexOMnJHZR6Pkh0R2DpmXS2Q9ZkkLeEpw
HcUTN+8j+AD6JEOUhVubnJ4uibSASrvLE2aj6grgCAsa5+Es6z6gFCuLDPaW
G4J4NUecI0bzpbo8CZ4lw3NRcxEQhMKMpQpNgUZfpsZL9cZqtbZMKM6USHJR
tEQqy2dxMyXyYoO52WhpUWsbdHg7hrQxKBXUiUqUPWCXzczpuQch7dMkDpPr
aUr15WHwi8Pwi3X3p3uB11uevSjy2+fz353H3x2Hvz4K/fYqdRzD9kOKl8vG
Ha/4IqHa94kBmZ3T4xMPAa+UdubALzkMSDfsnEUDNSgbDcnH5nEKFPBdtDJO
09qEnS4klrHGc5SMSrWgDuXWkgYeMCcK+DOVUCJqBUxGjaxGIy+3aGrD1va9
NPnNsXwnSV4NTB0kmSnrmEnYOO8gJmxEv3ZYy28SkorF1HIz2pVwUSI64qZP
Avbys93A9YoT7OWzJeeX+3NXC26oi5TrNO6EOoo4Nlx4Si9dcilXPDcFEOft
EoDY0P2PT8bvjM9mTtGziMzsWV4eU1LIkRYqdLVyXTViqIM+yRJmSbFS6J86
c4PD2YEiZVxOBl+QLVcUK5QlAJQvyqEx78N8BDHyJLmItlIGj5fkChQ5N23T
XKi2lRq9NRAf5PoCqToHNRQ5/DcXGbp8rRZHPaIuVKKFCFYkEGbRWY+E4kIN
XqfV12t0jRZrr17Xx6HXkUcrZIwneuG0B6GuORUHYWzXJ9r0Ct7u+M6XrC+3
Ak9XHWeLlkWX8GLBBC0IaL7edF4uGLb80p2gHJrtURR7tWZ7tWK6TKpXrMx5
w+yCkQoF2gSysPDLRrySoaBizCcdntMQ1+zsBTPzcsl4sWxyo2NCQqmG05Bw
EObs08zJXOZEnmCmnE8qE1HLYTKa0CadvMKgLAsa29bD41+cqQ7TtDnL4N4c
c9VH8WK9cePUzSXi6CDGakQY9Q7V0HKIe7SAfbrve73muUxZzxPmF8vuz3ci
bzeClynb9aL35bL/2bz7JGrdDxh2fYZ1h3reJN0MatcDmjW/etmDpu2yObOo
c/AXPSMfDUzdHiHdm5h9QGZn8uTFwE5rblIZavW2ZrArgAPYCaQ3T6zb020x
N2vUVRgKDbBCrakC56/V1YASobuCEseJP4ctNFUgyBZnynSFUn0u7qp0x9us
wSbEVKyxlHmi7XZf800Y9Lc5vS16cxVuqtQaKiVy8DAFMkUZ/EM6faPJ0hEI
Tjps41xWA4fS7DVyk3YkpOOtOJWHUe2cjqIg1h/GdQkzHwgep8xHSdOiSwzD
fckhgP2Xi+ZNr+zluv3Lg/B5Gofu9Om258td74slA7RTAJTWU4DjlpsPTGGB
U1ucgj7gqCLVB+SjZ3F0zcnfDqJfnSW2I0oltV7Fqt+Oc0+X5SpOvXS2Qkav
5RGLucRClaDaiDQakGoTWuXAaiPGzld7MuifXlXneoC6EWQAvjnrTEA7ifO6
FLMNTnT0cF715tD9cse56pQcRXAg+DRte7Me+PY4BRCB5rMF5/WS+zxh2fKg
KzbpzUvSIQM01TWfatWnAoIbf0UJWxqvZIaZT2LkkBjZU9SH05R7TEE22BKb
p/PGcGoqrO4OkAObl8XmZksVJXZHezDQDykAlGgwNkABPqerE9NUypTFwI4w
+zFsZ+h3YEHj3bzeBBbUFmpOrI/6k71qa6XBWRtdGHQG2/X2Wq25Um0sx/Sl
elsNlATJZwty5Fil0dZmdXX7wqPpRZbNOj4+nDczUePSc9fC5ohRAuEdRrl6
toM3UimYaJRTuk4X7W/2o5thzemibTus0bB6RVPNMSNrN6w6SeLPVhwg1d9e
r/zLZzu/fz7/1Z5v3cELKScXTYxVG2fJzNz1SWBtoHdoKS2wP4XPQsFjDsLI
XkizE1L/DuShGFlyUV/vm06WZJKZUoReAxAllHI5rRLjVOhlkOk6F4MjUVO3
WVT1Zg8N63pdys4wPnyUlF4saRJWWtRITjvYJwu6twdeYLefwFbcAghHr1dc
r5adsH2z4oXtyyXH9YLtNKpbtQqXTDxYwL3P0qaLOcPTtOUwYTpMWs+X3Fdr
/uO0HSBS2IUMQQlDUExiZgK+GcYDpiCTJ8sRyvNkWLFKX6M11YO1EEuLoVBV
NXhFr6cHCKrUlUZTIxDU4bV2V4fL241bGjmibBLtNhCEycgV52CGKiF2kyBU
lgpbsFXvqoM8iBnKfLEed7hTa6mCtdoE/qfC4Ki7uUZRX6EC9ZmaTfZ2IBiM
Ti2ucK2WseHBbBG3165lzXt1UYti0YXCCHBKJ3FWX0POT+nDdUs+7NOjuTd7
8eutQNImInYUsIdrbJKptEWwE8IuFizgDd7uBGBWfnca+2zLdRrDVqygQeqy
hfUDRABnYnZBOQUDDn4/3NxyC8+T+lerviWr5HrFnjRTT+eRr86ce3EewqjU
C1p0vGajqN2B9nq0vU51mw2tt6N1XqzFIW344lAfwQdxdp2O3bjsZh3Pq4/S
mutNx+fHode7nu0ImrSyVn1i6BJnkMpTxheL9rfwF655Xixaz+O6wyC67Zae
RlWfrLu/3g++WbWfRFG4+WLFfr3hu1zxni44IV9shnRLbmSSkgkEOZJyCifn
r/iyAR9L9Gia8nN4PnFLPbRQBVoukZXwBAUSWRmCVgAywAc2BjfWgx3V4DVm
Zxt4VNgCRLCjYHjAycjV5Tprvdpao9CXoKZyvaseM1eIVHkqS7U/OQAFdykN
5TpH/c1Hcnmard5Wo7NZa2zEdHUqvN5gbQvFppfXhFb71OhwHmG82muVrMXt
ZjnDq+bapCSXgsQZqQV8CvpgzCp9sRv94nz5ZMnlQGanOwqU1B4tZ8ghI0b1
7I0AdrnsfLUd/Pwg8mzRchhBT+LqDbfIr5hMGxl7QUUCp2qp7Zz+Yu5AiYrc
Amszpxd27gWRJM51S4inCfx6zfTpng0IzpkneOPZOLcRZAhlFLWBw4yY4W/o
T9gGEqYhp6hpP8o1C1r1nCa/agxM5hcn4W+fJt4cwLC2nS4Yz9Km05QeCkb2
y1XHs0XTRcpwntTB9um8AW4+XzJ/vuv7bMfzet1xkdIdhJUncygM8a9PIi83
fE9X3KDEzaB6I6DaCmlGiQ9nmLlMYQlLXMgR599EAKRAhOTN0D8y2Op15jqY
aHKwLvz8yanb5NkH4DS4giwYeeBCVdoqMC2orgrAgQv9IUp4wv3eyIDW1iRB
SyTqMj1Asd1c6WTxdejsjXJdOaxjy+O+uUHMDMmx2uJvs/o7Td4Ws6/V5GnT
mBoRTQ1ANFg7/OGJuRRDpx/q78/qbs/RY0y3XmpSsEGGAZwXN/NFhBYfzmZP
tLpUzOMlz9Vm+GzFFzGJzFJiGOfa5cSQlpm2ieF/erHkeLbm/WQ3vBdCl23c
/ZBy1cG38vpTBjrQDGNEoEZuy2Q+KfBIxwBrTEMGgqsOoZ03FVUxQCmnKVVE
N7YdYs2ZRl3KbuFUAWsoizmYKZkpM0vbwsbBJf/0bpymZ1SZmA1nc9K9kPB8
XvV02fhqywngLlatZ0tW8Frgu66W7dDYIQS9Wne9XHMCteOYBjr2SVwL7D7d
9n11ELxetrzddEHBnqsFw4sVy8tV69NFI4TBgznDTkS36lWuepGtkHqGVUBg
ZNN4hWKsSqwqZ4ozOZIMmbqAJ8vQmKuhkUJ4h87G4ucNjNy8x5DCeAAdEnip
DbUQ6mWqMtAazE0xAv6nElL8D8WS5c7yHnFkeQAR9GhytjkDTyDvw10AN5Ac
hrUIK4L4bwt0WQLdeneLwXPzZl69rVVrbAIB2ty9Ns+AyT7I5NQ0NHw43F86
Mdgw1F4dtqpPVsIbUeOyH10JYHGbbGagbjmAnyz7V4L6i/WgT8vBWCNpF2JT
kOcdcmg1K15s2auMGvhzJt66WzJvYm56xEtWjlsy+sPawu0TjlSABnW0DtgD
8oR7IyqSjT9kYY6m9LzLtPH5ssHEbXHKOt3KzqR5UjCexxnJ4Y8XKimVBn6z
Q97u0/XEzcMWTnMaJ3xz6P3q0Pdmy3mS0p6lDacL5pMF8/G8BezW6bz16ZLt
2ZL9PGX44czYTkB5ENHATUgTYLfebvnfbnnhrjebnndHUUB8HNeezOku501P
F8yrbinMhb0IhHrlslO6aBcKkYZZXiGdXyRRVYuwMhLrDpl1S6DIkmB5QmU2
k/8AYOktLSJ5GYH8gMrMZvKyIDWA7kBuamPdjdDQEgFSJNWUA0EhWsxR5EOR
eQ8n6bdgSxNkCeRF4Gxt3h6dvVUGsjXUmb2dbGkuXZgJP2V0t+OuVo29yeBp
h/XNhcRIOXRR3NyG4c1CWe3oRFZJ2Y9rK++01Ga3VOXppEwLyjbKKLhoMu2R
J1yoVcn85vn28525pBO93IgEcaGQ2AUi5Uy06nmT0G+17BGjYFLDGnYpZnyK
6ah6Zk43CyqDLfACAQK4mdYM2Cb1tLiWAmShwdr4A7zBcht71C8hQTv95sQf
0YyoqGXymULgqGXWKckVUmK5klKtZTWYRS0edXfCPPYsjb1dNn2+6bpeNIJy
96Oak3nTszXPxYrzKG0GlwWqOY7jwOswolp3iXeDGJilo5j+Im19CV1iO/T5
XhTqzWYA1tfQMKP4blB9Mme8WnRAATggCEqE37zmkSVNHAFSSxMUQQyECM+Q
ZBPZt8jcWxz5YwGaPcu/Q2HfFsgLMH29FK3iCIpYvAIK6+ZEqFJbafN2Yfoa
rjwfCsL+D9dyS7TlMn0VYq7joUUk7gMy9/HNuw5FeTJVJW5t1VpblXidXFuD
GuspvAyGOFdpqNM52hBjPWqu07vbDK42nrSAxc8RyooVqhqRopLOKe4bfFhU
8vf3b//H8oJbA+3V5JFOxkQPZ7qTNlKHcYbNCup61PrV1fbro6WTldDJamAn
YV8LG30a3khz/uxALWusmTlUp+eNuxHqdljrVU4v2bkBdNouGkqbmTefQkPv
MHF7NbR2PzK1YGUHMQLs0bO6zbw+lNQyp2KG5JQlE+d8DrGLOkQT2TirOoYP
IZQK0WShYKwQpdQ45U9SNuJOlHWxKH+xqHu7ZHmW0r9cskHQO0tb1v1o2iEJ
4aztqO7pims3qksZOQk9zF8EhiCAO0tZT5OWi3n78xXIsMFPd+Of7c2dpx2n
SRvU00X3q43Qy/XgScK67kGA+JKNnzKy0iZ2CJsxsvtAgGRO3gwri8R8SGHd
ZwofC+SZYjSXr8iY4Xw8w7nNkuTwFEViZYVAUkZlZY4SPhyYep8vK9Q72yXq
CrowmyHKIXMe8ZESkbqUjxVLdBVqe5PcUM1RFsBNhjSPKshiSfIUmiqwtWpd
tQItld58onIONFiDqwMKmMJBYnZ0WmwdWrxJKi+HSKhUV4sU5TR2wZP+u4XF
f1eY//MPf/ofmyqLqGMDSafej4sQxoBRPKnhTbzYSz7bjn/7Yv+Xrw6jViUo
EW6mndhURzl3sg2l9asYgwmzYN2Pvd2L7EdVb7fdwA4AwdYpGRGMVjjEw0kD
08jt19K69OxeGaGRPVgmJzaZuUNm9nBURT8Oq86SKp9iUMeoC6ADIdUQofU2
ofUud7jILu7fDAquVrUvt/SvNo1ncdXrFcfFHH4c1W14lHE9O4KzU3ZxxMAB
k7zgkCzaxSsuyV87pwpw7AY0R3Hz1ZLrzVbok53Iy3X/Rcp2EMaPY+bTOet5
0n4St+wGdDt+7WXa+dlOdNOrgDYCfydGbuMNVYxU35mkZQ8R7tI4+XRmJo16
X8DN5HIfSeW5Sm2RRFMg0d68Rs+U5ijwGq25WYpVTFHvE5mZdEEeT1kmVlfz
kXKaMIfAfEDhZbJlBTdfsgMOx9qAWeol2lKxrpSCZNPQXJG6WIEVKmTZOFqk
Qwp5rDu4ocoX6TM6WkXKErW2wWzsNKtbrOp2jaJBjTWYTS1GS5NCXc4RFQ5O
PCwu+Ul+3kf3b31YmVfEmSZ5NeiCW7fgkoZ0tBUf8mwr8sfPTw4XPAAuapFt
xe37ac9qyGCWUAwiwqJLeb7ogJEBNgZMIMxBgDWH0xetPDN3QDbV4EeJSRPL
KhxFaV06Zq+O028UDGP0bkiaJsFYAJmJqKlbXtluSJE00iIakkM8xB0qoXRm
SSZrfBA6/NL9CLLuEa66+NshOdjL3ZgmaeX5sNmAmpYw8+edkpRdBAtIN36U
cpI0vdkOHsZ1NxMtAI1U+XYz9OvLpbdbwcOo9mYgJoxgSk/jejgGdjyKDYfk
LGp4u+q7nLMsGgR6ei+9u2Cw/KOJuvus3mLhSFVD5z909L83OXVXwCuYC4wk
g0NidiaHeR9RF/PlmXzk5snnKwvBruDmZr2lVYxB56xkios5sjIRViNEq5mS
QhI7g8rL4irgkcUgTHApemerxlqvczcr3A1cQzEPyZUrc/VooVtf4dCWI6IM
A16uN99844AMLbfbe+KB6bh9zIf32tSdNkOnx9FttTWDj2IKcoBgWdXPcrJ+
8eD2R6VZRWMdfSISwSxmhHXMME6FHrUXN/3ly/Nfvti+WA+n3arr3RTMxJQL
c6uYMaMgauSuOOWHcf2vLxeOYjo4dCNqyrJdAATtwhEdvTuIkv3ojIEzoGX3
GfmjUmIbRnsS1rOg7wGCsIY6b+YcxW6cBvwUHP8O0aiVP7TqFEE32/TKLtLG
F6sO8BjgNw7jmt24NuEQ+XT0qIW3GVbvzekX3TKfmgq/asklg6YKf0lQRdWz
B0GeL9a9n+1GYPxdLdrAqIAjBZN8mdZ/sefb9Uq33eLTCPZ2xflywbps5Okp
T4T91WOVt4Edr68UXNaaTQD2ta37x+1dP25t/h/IU7d3FmiX2zwzVm1QVZjN
dTIkX4IUKnXlECggQSiUZTpdg8bYJkbrmKIitqREhFZLVLVsSRGJ+ZhIuwcj
D+IkW5QLBhUGJRhUiA+W2BPUVafUlWo0JXZdZcBUF7O3xr2dLluTwVgHRwVu
aLoRnbYjah2J2ycsWLvD1B3yDXg8nSptBQSc4anHFTUf3Lvz47sffZB7P7sm
v6yruoI52mWVE6MmBjwtwOiXz9b/p++erobwoEEAHMGXXm1Eg3r+glMBM+gg
qn93knyz6TNz+slt2fMm9kEYSxtZXtmkVz41hzM9smm3dIo3Ui2dblHOdKCU
LqecCN0vaRGE1LPAej+MwTMMhnDBwgUJQw8EZGAjVxzCH+46S+rh5qpbvOSW
xM2cmIm94BKv+OQpuyBmZEUNzAWn6DhtBBeaMnNRSgdCbl+0Ct4dxV8sOz/d
CjxbsIHMz2Lqd/v+TzYcG07ullPwasn8yZp9yyn08kdwYod8qJbels/uKtRT
OxYNjJMIdpXEz+MaBjN/bPTj/u4fU8Y/Dpm7V8OTTk2929RkNdSjaAmiKlVi
JWxwHcwHUmEBoqyQo7V8acUP728SK6ukaA1fUkxjZ80yH7EFuXROxizzIZuX
xeHffJwOSAwsjVBVBL8EV5dZNZVevG4tOvLqXLKQGLeYm3X6m7euc9mFMk6Z
B+8HgiphjRFr8TmeeD09uLFerCifIGRV1v789q3/8fZHP8u4/SDz1r2cW79o
L8/iTrfqBEPM4erZJ2WQ/j49TIYMgoCev592XW3FrndiUkov+E8vOpsy80F9
Mc0sd6BMRW4Di3gW00bVlBBKSuD0BRPPrySBEjkDFerZHo+CZBNNBLDZeYto
048CX2i8Wz45SAzs/bMlKyAD3cEWdgJKWF+v3ESDw6gahuxGEAFqCSsPCCZt
/Mhf2R0m9U9XHWBK9yLqH5zk5aL19QYIMAQNE1LnmlMEqfBpSrdooiW0pG0P
73JOdZXUrFlZOKlZ8KRIPdXgZA+4OINrcPj5Zcdw8JhZC1rquo0rEVeSCA9Q
UYUZbdDwi3F+sYqdI2dmKgV5ckmBQlkiEucxWY+lkiKjpgFX1ymUNUJpOfhS
KFhIldUKpEqmqFAgFZi6Riot4XCzoOBHWMzHYknhwPhPCbMf02n3pNxsC1Ll
09YvBYc+OUc2F8kqZQWD8VggKESkNTZtV9g65tL2YoJqjazOrGuyGJpV6mpw
NaTZgqaWjx8+/sm92+8/vH37/oe/+OjHf5t7973u+kzCk+Kp9nzGQBXG6IPc
B1k+ahaHjMKdhNWmmO2tyZhsLeCM1HGHa5ziCVAcZIRNp/iTdfeeRx5BSAkN
NaWjx1VUG29EPFrHH6zySAheOcnMHVmwCDc9gI89b+YBIyhopBDAAeJpAgdY
eyEUJAn9E7Ib6BFQAtOnSxbI7MteWcrG3wpjsIYC3b3e8v31ZdmbE/JfHkT/
9Grj+6ultxs+wPfFtvfFkukqjV8kVNsufhonbbu5b1b1xwGxjdkuHigwkpsD
wkEPtz8oHF01MBY0lB0nb98lWjXRN8zss7CCzSkcH/0FuIiA5QmfeJ87cVtB
zZTQHomZWRJhrlxRyhflsTmZGFppN7YBQYOhHVM1SKQVAmGJVFqBYfU43mwy
tKlVNTptvVJaKuDkCLm5HMZjNvWRkJvDZDzm83JY5PsC6iMHVu/RNjtVDXOu
/phnEJOV89m5CnGFUd3mMvS69f1mZTsua9TKaw1Y7c0bFoT5QlEpi1s+MpZf
WPjBw/vvP7z38eN7tx784qf5Dz/oaymgjzV4sNkVjzJpER6mzAdp21oIN4iJ
Hg2bN9XOHmmQENo0zH4LbxiedjjID4PKyzj+LGlcNnKSauoCzgSObuE4Ot0i
GKjk9JW7RFMhZNYhmPApZjxSkksyHdcxANCnO/4friwCDULBGtom7Af1wRp6
aVhFvumuIQRszF5ce75kfbMXfLsferbuulq2v1h3nyQNsPjqMAbj+Iv9yOW8
5Wre+sW2/9uj0G8v49fzeFJL2PHwfnMWeLdtS2nGcXK1arLUQK4LS4aS6GRU
NjaPEQ+cgmUt5cDFuwgqzoPSp2HkRULFFRaPTXwo4OTJuYXUkQ8Z4x9LaVm4
olIuLBLwc4XiQr6kkMPLEUmKUKRSKinWapsRpBbYyeVVGlWjUd9u1LcatE2I
rEKlrJYJisXcAlRUhoiKZdxCTFJq0TS7zR0qYZmCmevVtXq0LSpuoUZQ4jJ0
2PEOLVKvktXplc0aaT3CqwYBYsIqIGjVNWmxaqEgXywplymbOfzm+vr7WZk/
e3T/w9zMO5kPPywruEccazEis/NO6fmi/ThlvlhxvdyLXKz5vBqmjj8uIXbC
XYtO2V4Mf77s+MsnW18dBFcsnF23bMchXtQx1kzcBS09JJv2iSaVk01e8SQ+
2x2Sk5et4kWzMKAgWzijCR17wcIHxd2c+1owg8qgW968hr5if75sAw2CEneD
yIZHCrMSjA301UU7/2hO+2bb+3bHd7loBm8DUxKU+/vr5X96vf6nl6vfnc59
uu17ve6CVvDJuvPlogF05xX0blhpb5Y1VwlZAh02kKulgzlp1eixl7uomQyJ
+lb1lKuQ/DqKfL5oeJ3AzryibRN1z8p6FpYp8QYKM4NIvDM9/gva1C0G4Q51
8mNEUioRF5HpD2bZjznSQqYoj87L4gnyhMIiKB6v8K9vbauzWXpc1l69plEu
LFHJq/RInVpaqZNXu/UdPlO3C2/3m3u0ksqgtdeKNKCcIpem1aluUfNL9bK6
kHXAa+pT8soF1Dy9vAlKSC3gzuRwyZkqSYXb1umwtMPYVSK1Ol0Xgvb29RcU
F/8i49HPsjM/un/7H7MzPpgea3EY+AteMPAWSMqn89YT8AMx3CCaGm/Low1U
HqZMhwnj81UnyOTlqu0wpAgjU4s62hLOXDGwt+2iJEaJyKZTGoaR+sTGGfKI
JmIozScmxNSMJYsojNLmtKynC1bAdCPhBTMkuJtT3Ct2YAfgIJUHURKwgwYL
+3+YjMtO4YZPtumXQx3E1Ndrjq8OI9+dJX59mX53GHm+ZL1aMAPEPz1fPomo
9bPtCWw6gY1v2xnPE4qzkGAOHfAK2qKyJ/PqkQM3/WlIeOJhH7vZ11HFZ2n8
k6T6xMk9srMPrMxdE+2HEmgquUgJlZMxTfyYTLjDpt98FRqdDoYkAzLCNPMR
iZ9NEeWNzd4dIX5M52TPzNwbG/n5zPRtDVo7F55ORYlg/hX8UkRYbkQaZcxC
lFdmx1ocqlaPrtOmbLIpG1yqFqe6DfZ4DT0x50jQ0m9BW0PWoZB12Iq1u3Q9
Cc+kTdPBJWczSRkKfjG0UB1WjSlLUaQC5qBYUqVAOhispu6enPz8n2VlvpeZ
8f6D+z+urcrk0wdCRjY4wItl2+vdwJv9yPWW3ySaKPjoP0hI7WDmoY9dLVtf
rNnebDhOY9iWW/h6wTyvoUGBEoHjplWwbhW5eKOAD9ppUsOKKGfd4mnopWkD
/zxhBoJwAAAyUCIU+BkgBd4GdAfgYA0RA24CQeCbMrLArP5wzgR2frLt+/5q
4euj6JsN934I/Xo//NmmF/L+s7RpyyGWjdREEcKek/v1tu15XBmR9BnJ1Yrh
nEXt2P/7h/3/51cb//Xb1euoaBEdPfNwP02rvpzXXflEu4bZcxfn0sM7MFP3
jJRTB4uHV4n0NUKsnCXMZbCybr4/jpvH5OVyZWUMefG0IHdSkEWS5E2wHw3P
3CLQHxJn7k6O/2Jq7EMK8S5rNpNDyxYx8+W8Er2iPmDusygbdaIqnaASY5fY
lC0+dUfKNjjvGkl5xoFdyDnktfRaNO0aSS2wCxoHUu6pkxXRywN13DXOn81l
zTxWKyoNmjo1Wi4W5QmEOXTIKaSHM7N5YmnrFKGste1xefnHWZk/zc56v6Wx
gDLZHrcJXqw7vz5N7M/prjd8v7peNQrHM376I95Ew6JL/PlB6Ptn6d8/n//D
i/T3F7FnKfyzDVdKNRtTEDcsfBDjEojRKVsy8dbtYmikASnJL58B6R2EtKdx
0/NF56t1zw/zDtom6A4AAZ24jgaAYBRCewRMP1zACRDBz/wgWGANQGFiXkOz
Begh9Cpl/P48db1g2fMpsKkmO3sAgt4STn8aUWxZaGsG0suU8sBBnyr9u/Hi
//4qxP0vn6X/73fL36zj1yHBZ0nsbVwJ+Da1pEML7cTO3NHPrGITZ07291u2
Ec49kiSbLs+f5WZOk+9OEG9NEu9OUO5T+AWzkqIxbvYA88G0KI8sL54R5VIF
ubO0RyTCnYmxD0cH3xvtf58w9jEQ1CMNJrQl6hh1YO24sEbFLJXO5BoEtS5F
axR0Z+6JOwbjvnG/a8hk6NIgTSpZvVHR7MA6EtaRF9vIt9eO9RhFK60Bu+uy
tzudbTherUSKlUipQJxPY2TQWHlMTtk0MX9qqvRJT25B3nu52e9Xlj2sKrqt
YQ8cxDEYOiteyasd/7+8O7TLCY//8UeckdqklQcC/N31wj+/Wf3L66X/9cvt
r/e8b1ftaS09paEdBdAdl3TdLjyN6q5S5suEMYxS4hpm2sBbsUku521XC86z
pPksaYTYDkSAS9rEBsfyg8pAjDcB0Cn6IWsA3B9S/6s1+y/P4t+eRK8WjFte
ybKZveEQXCZ03x2GD/zyhJos6C+JKaav4tq0mnLkk13PYZ/Oa8/9fOiWTwMC
L6uJUPa3hOK/+Z8v/VCvY5IzB/3cwd43UA6MtC0NaUdPWVKOLyMTxzbWJ3PY
u0V9H+3DMe7dGWEmmf2YQLk3Pn17gnBv4q9f7knk54+wM7vJdyb4uUx1lUBb
J9XefAw+j5NHpz5m0DKEnEKluEItrYayYm0R+4gDbTNK6k2ieg27wi5tBoIe
ZZNVVm3BGl2Wbru9V4e3o0gjQDQhkOaqbZLG0wXub146j1e4XnN3NDAUCPW4
/W24qVKNlxstDRAJMU21Tt+sVDUCRL6gmUarr625VVTwQVX5o+Lsnw/VP7IK
BrYCCnDyX1+kfv9mI2JgP/rJj6SkloOEFuA+Wza9O/K/WMJfrxieJtSnEWzb
Lb1KGL7aDb5atl8m9K9XXJ9tB4+jumWr8GnadrXo2PKhh1H8dA7wwezTgOjm
zRzA51cSYAEoAd//j+yHF32uFi0gQ5Dqd6exX53PvV537IeUm07hmo237RY/
TeKQwQ3UDmy6wcHtB3Y6YrON0SMbLAtwn7yZw75c0h3aGVsG0qp2fFE5uIVP
fLmAvI2JN9TjK8joKjK+KB3a01EODbSUZGhNNX1oYZw5uacOzomdPca9Pc6+
M8W8R6TdI5HvEQh3p6fuTUzfH5y+QxYUTXLzumduD9Ef0WQlInUtor/5kjgM
q1UoKjGkRq9uxrFGGbeYSXrkM/YtBElBfb8DabdKWoyChgg+uOCYAA2a5dUq
cblGVY+bOlT6NgXaiCkbpZwSISkboxXvx2j/9IX37QkScfV5nO2hWI890KQy
lCK6Yr21TmuqvXkF2dzs9Q9JpFUSSSOf29zadLc4//26ioyGkgdtRT/T0tvX
feLfvVz8zYul767SRynDw3/4kWCy/rOj8MtNx/Gc6ot9z7KFZma2BeXDEChg
KoGR+OOLla8OwmALv9yLfL4XPk+ZThOGb0/Tnx/EdsMayPJ7Yd3VMsjQCCMP
wEU1szEtFXojYIItUPvVRQrsJbgUyBrfns6B2/zd86XPdrygOJDeqpX7NKGD
WjGzI8ppJ7vPLxzx8AYDotFlHV02UM7vKmA0PU5Kx19FFM8DogX58DIyeu5m
vo6IP08qD0wzezhhDRk7NlOPzbRtbOoQn11HCEuKyauA7DqsXFWTFpSTF14x
VZ5F4N2bpH5MnL1LpTykkh4Spx5MTd/vG7tFZOVPMHK6Jj/qnb41zcxiiovl
qjoI70BQq23UaG5OQWPyGim/hEfNjjhHNxKMmGXEImtWMytRWhkQ3ApRw3iH
QVLOZ2Zx+flirEaua1RqmhC0cXroI1Lvh/S+X3iR5rf7ihf74mRwyOtqi833
u+NtN1eWWiuNznoML5cg+aiuwuXtRlW1OrzDZBylUerbmjJryx/XFNzpLP3Q
Kug/Sqj/+GYFCP7h7frLbV/hR/9NS/5PLpZNf3y1/Nm++0/X6aOwFJ2u8EkG
ni+Z/3C9/L98dQAEvzmOwTP/y/P0t6fJ3zxdhGH69WnqLG1ZckhiBk5Iy9wM
qnZCGEw36JbgWKCXwmgD3UH//PObDUgo4DB/eB32Xz7bgZtfHoRBdLteKRwn
ZzH1RVyzZGRamD1qYlMCJQE+n2DYweq9CGEx2RSrNft5TPPbXf+bKAZdMSnu
B4vyNq7Ywae91Pod7dS2ZnJLPXXhYJ0YqTsq4qmRtaacfh1Bzz2iIzsXtpc+
yYmTL8FLOIpcliBTKCxQiEqVgjIpr1zEL5+l57PFlWR24RDx3gjp3tTs41lW
tkBSBm5HICoCDSJINRA0aFogjxvQ5oR3eilMcaJdGm6Nll2tYVV5lD0RvN8m
r1HxC5nUh9CiZ3l5fHWNTNskR+vHBz5kjN6b7fm5YPRWUNOy6B8OOTu97hZn
qMkUqNE6q4yeBru/VW2qkKC5iLbU5e30+ftjMcJcjGk1khjk9q7mwrriux0l
HyhJDZs+CcjtV88Xvn+57MWIpXf+24/+ux95sen//O3h71+mf3+V+GrPldRO
HQbF7w5Df3y5Cs//b58tgmpg8ec3W3/+ZPtfvtj/w9vNV9vBlFUY1jFhmKqY
/TevLFj5YE7AcwI7kBsEQxAgbEF98HvgNwC4f//1xb/96hzwwXxcMDDO59Rv
VqynETSsmBQNljJaM+XDFfqZFlLtXWibv9wLbFo4hpmWz1ftf3k6/+mcbg0l
rCKTXyRVXy/o1rDxlLDnwsEAfDeFTe5piIuioVXZ2CuP9NLKewex1MLZNjBe
RLCrgCIlm6CLM2bY9ymMB1xujkRQJOYVS/hlMnG1yzVmc48imjaGoIzOKaTQ
s8mUDCYrn8HMYXHArxZIJOW4tsVjH/Ra+s1oG+BLuqZV7CoVu8aj7vNq+h3K
Jwij3KKs1yoqeNwcIEigQ7oslaJ1UkkVh5JtlNRi9EL2yC2EnmNQVqmkxXJl
Pkv+gIU9FGiyVbZKq7dVbaiUKgpU6kqnoyscHHM7RlXKbhG3Z2aypb2+qDr/
bnvpx1Nt2QHN7IpP+c3z5WdbgYa89+//5Efv/YcfySnt/+W3T//wcvHFkuG7
I89VXPZu2/bdafSXlylgAU/+f/7m9N9+dfmfvj3/t988+9Wzld+92ny+7o3q
2VAOBVHD7N/4a1qHhgnIIBf8p3eHr9acYCz//Hr9V+dJiOegZajfXi28XHUc
RdX7fvnLRfOLBdOuR+KXjElHKscrPx4q+TmtLQsm4EDR+1pC47stz3e7/n//
cucvz9K/2nbBXLtyCT6NKS+dnDMb801Y+sIv3NES0pDilaNb6ultNWmO27si
H/8ypnkTws6dotdxzaVXMScedZA7IvxBPlI6Qb1D42dzRIVMbj4UmZbFYBeS
KJlCSY3FPuQNTGs0HVRqHnkmi8cvpTNyZfIqjbpFyC+1GXswUQ3CrUBYFQZR
Y9g4mnaS/fiIXtqu4jcq2HUiRplMUoXjzUxmFp2exf3/SjrvqDbTM+17N5NN
NpOcbHYyM56xx73Qi+lgwAYbN2xselfvvfcu1CVASCAEAoTooiN676a6jG08
tmc8fZLMnE2ym6/t98f33STn3Oc9Qocj6Ty/57rv65L0viJHUvBhSvEVSI4y
esJgK3G6j9NSW2qruv2PH8JGk86Xkk+ytDEEYQiefaHKklVluM7lxCglVxnE
WAYhCV+emB7/UULk8aBT78dHBl9NjL6eGFRyO0HOqhzpcgx312NKb50++ovT
H7zz7pEjNxNP70y2fL83dDDV+Pls/Uab5EWg+vPV9p8OZl6tdL3dHPhmZ+xv
r9ffbox+uzO53u/qtoll2Hv1cjyUkVuio+cO1otn27UzrepXi+1fb/btDNS+
mmv785PxlzMt3236P5tt/Xq1+4tFHww7QAZJ89GA/e2sb9jCVZRdL447ib0W
Sc9JLksPLko5X3E1mFuS9jTg+nq166ed/j9udkAM7FKWL9YyZozEpWr6hpO7
YKWOaFA+Xl4N+qq+NMmOy4KqwWTB7Ft2CtdcsjE9db/D3MItc1LyRg2MBYd0
qV5G5sUUoU9h6GF4RgSCGHz4YT0umECLpjLiUdhQDCaczb4sk2bxeelUcgIB
HwX3s/kpbA44mStV8pugPgklWUxMrOJcP5SeIk/NucknpbIJoLIEZHkYnZUo
01ynM2KYzFgwrlzKJRU3FTKjVX5joIUw1EFtriu1Gu6JRKk4fEgl4QJeCMkl
GC8MY8riaNwoDOY89ASHpUzNv8fEXMUWp+XdjEcW3s67nXknKyM5Jjwm+JOM
pCBsxV2jiquVs29dT/rwdz//9TtHjv/bkfMf/JPHyPzLwfSftnoe9xtWm3mv
x2verHifL3lX/dWfLXd/+XD47cYwsHs80dljk4mQ2WpSHq0gFXEjUk2+L8Hc
aNETx9zSP+6P/Lg38mjE+cVSx18/nfxxd/i7jb6DqeY3895vV7ofD9YF7ILZ
Rvkjf+1uj61VhFWWZ3HupdBux/Pyr9JzUvLiz+UnnRMjb+0Ou/7P6+Uvlzu+
XW3f6la3y0u7FWUBHbpbkDdZhX7UIgOCDvw1ZW60/EGUi5KtLIirwd5Ydomf
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
RO3h6Uv/HxmiWBw=
      "], {{0, 100.}, {150., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->{72, 72}],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
      Association[
       "Source" -> "http://www.eol.org/pages/328605", "URL" -> 
        "http://www.wolframcdn.com/waimage/hset050/ac9/\
ac99116210e54c705c59c5a92e61cb14_v001s.jpg"]],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 100.},
    PlotRange->{{0, 150.}, {0, 100.}}]}], "}"}]], "Output",
 CellChangeTimes->{3.81385670287222*^9},
 CellLabel->
  "Out[408]=",ExpressionUUID->"04f88ab1-fc7c-49db-8109-677ebb073838"]
}, Open  ]],

Cell["Lookup \:53ef\:4ee5\:904d\:5386\:5173\:8054\:5217\:8868\:ff1a", "Text",
 CellChangeTimes->{{3.788389565588634*^9, 3.7883895726937933`*^9}, 
   3.790001392031382*^9, {3.7900841152485757`*^9, 
   3.790084139628171*^9}},ExpressionUUID->"0921f085-e9c5-4218-9243-\
c85db71ca6ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"table", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"a", "\[Rule]", "1"}], ",", 
       RowBox[{"b", "\[Rule]", "2"}]}], "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"a", "\[Rule]", "3"}], ",", 
       RowBox[{"b", "\[Rule]", "1"}]}], "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"a", "\[Rule]", "4"}], ",", 
       RowBox[{"b", "\[Rule]", "3"}]}], "|>"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 CellLabel->"In[409]:=",
 CellID->1621510191,ExpressionUUID->"dea8cf71-d412-4903-94f5-0d2dca54a87b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Lookup", "[", 
  RowBox[{"table", ",", "a"}], "]"}]], "Input",
 CellLabel->"In[410]:=",
 CellID->296193337,ExpressionUUID->"9b51b805-516d-40d3-be44-d76c7634eddd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.813856729204175*^9},
 CellLabel->
  "Out[410]=",ExpressionUUID->"6e5a7ac6-7d6c-4d1b-8e56-d87f579c64e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Lookup", "[", 
  RowBox[{"table", ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.788389591117527*^9, 3.7883895946077943`*^9}},
 CellLabel->
  "In[411]:=",ExpressionUUID->"68532f91-da2f-4c61-b9bf-d54c2aaeb726"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "1", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.813856736707396*^9},
 CellLabel->
  "Out[411]=",ExpressionUUID->"5cdccee9-ddf5-4c88-a76e-aa28662057e8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7885382527381277`*^9, 3.7885382606669483`*^9}},
 CellLabel->
  "In[412]:=",ExpressionUUID->"38032ba6-83c6-409a-92df-46d83b5c4f28"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"52572e46-8bc8-4c6d-a1ea-4057fe37a298"],

Cell[CellGroupData[{

Cell["\:6784\:5efa\:548c\:4fee\:6539\:5173\:8054", "Section",
 CellChangeTimes->{{3.776515928584036*^9, 3.776515933229443*^9}, {
  3.788387756931408*^9, 3.7883877606587453`*^9}, {3.788526544960349*^9, 
  3.788526549950051*^9}, {3.790001396088786*^9, 3.790001400433177*^9}, {
  3.7900841508228703`*^9, 
  3.790084160086996*^9}},ExpressionUUID->"0b953d0d-da36-4e86-87b5-\
1dfb2046bff6"],

Cell[CellGroupData[{

Cell["\:89c4\:5219\:5217\:8868", "Subsubsection",
 CellChangeTimes->{{3.7885265922180495`*^9, 3.788526614571251*^9}, 
   3.790001403046968*^9, {3.7900841704690113`*^9, 
   3.7900841755336385`*^9}},ExpressionUUID->"b1855f51-8049-44ab-bf4c-\
318e48d02285"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ruleList", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "1"}], ",", 
     RowBox[{"b", "\[Rule]", "2"}], ",", 
     RowBox[{"c", "\[Rule]", "3"}], ",", 
     RowBox[{"d", "\[Rule]", "4"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<|", "ruleList", "|>"}], "\[IndentingNewLine]", 
 RowBox[{"Association", "[", "ruleList", "]"}]}], "Input",
 CellChangeTimes->{{3.7885265775312796`*^9, 3.788526580651966*^9}},
 CellLabel->
  "In[413]:=",ExpressionUUID->"b70d92a3-8b12-4c8d-a7aa-cf0ecbbb8371"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "2"}], ",", 
   RowBox[{"c", "\[Rule]", "3"}], ",", 
   RowBox[{"d", "\[Rule]", "4"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8138567706343193`*^9},
 CellLabel->
  "Out[414]=",ExpressionUUID->"05224555-da33-480a-968b-d3452b0ccbd3"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "2"}], ",", 
   RowBox[{"c", "\[Rule]", "3"}], ",", 
   RowBox[{"d", "\[Rule]", "4"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.813856770649829*^9},
 CellLabel->
  "Out[415]=",ExpressionUUID->"e3c58747-4bc5-4556-90fc-68a5a2dc7f91"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:952e\:548c\:503c\:5217\:8868", "Subsubsection",
 CellChangeTimes->{{3.7885266043525705`*^9, 3.788526611791473*^9}, 
   3.7900014103506536`*^9, {3.790084181812126*^9, 
   3.7900841894157653`*^9}},ExpressionUUID->"fa8e1d19-da05-4297-a48a-\
9339ee2a2179"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myKeys", "=", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myValues", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7885266358393908`*^9, 3.788526649447048*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"90eec06e-f162-41f3-9585-4d21db43e438"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationThread", "[", 
  RowBox[{"myKeys", ",", "myValues"}], "]"}]], "Input",
 CellChangeTimes->{{3.788526651279157*^9, 3.788526661263421*^9}},
 CellLabel->
  "In[418]:=",ExpressionUUID->"116059ca-60be-4bb5-bf33-ed5fd24b74ca"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "2"}], ",", 
   RowBox[{"c", "\[Rule]", "3"}], ",", 
   RowBox[{"d", "\[Rule]", "4"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.813856807713067*^9},
 CellLabel->
  "Out[418]=",ExpressionUUID->"8828adf2-b2f4-44ee-b538-6febae5603bc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:952e\:548c\:51fd\:6570\:5217\:8868", "Subsubsection",
 CellChangeTimes->{{3.788526678918079*^9, 3.788526683496793*^9}, 
   3.7885267811367598`*^9, 3.790001413037732*^9, {3.790084196315958*^9, 
   3.790084203905842*^9}},ExpressionUUID->"ed42fe97-9038-48ee-bb14-\
f0ab2dc519a6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.788526755070442*^9, 3.788526763221654*^9}},
 CellLabel->
  "In[419]:=",ExpressionUUID->"35609803-2466-4ebb-9bd0-8aeefd474806"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"a", "\[Rule]", 
    RowBox[{"f", "[", "a", "]"}]}], ",", 
   RowBox[{"b", "\[Rule]", 
    RowBox[{"f", "[", "b", "]"}]}], ",", 
   RowBox[{"c", "\[Rule]", 
    RowBox[{"f", "[", "c", "]"}]}], ",", 
   RowBox[{"d", "\[Rule]", 
    RowBox[{"f", "[", "d", "]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.813856824036563*^9},
 CellLabel->
  "Out[419]=",ExpressionUUID->"ed18fe19-da76-41a8-8bdb-a2454c284326"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"myKeys", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7885267194915605`*^9, 3.7885267225025606`*^9}},
 CellLabel->
  "In[420]:=",ExpressionUUID->"aa28154d-b98e-475c-bda8-4d90b666a119"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "^", "2"}], "&"}], ",", "myKeys"}], "]"}]], "Input",
 CellChangeTimes->{{3.788526694504406*^9, 3.788526748717573*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"f1cefe05-ab90-4013-a9cd-d10f16333a83"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"1", "\[Rule]", "1"}], ",", 
   RowBox[{"2", "\[Rule]", "4"}], ",", 
   RowBox[{"3", "\[Rule]", "9"}], ",", 
   RowBox[{"4", "\[Rule]", "16"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8138568556971483`*^9},
 CellLabel->
  "Out[421]=",ExpressionUUID->"bde16d93-0712-4087-b3ad-f70aba7c08c3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:6dfb\:52a0\:65b0\:7684\:952e-\:503c\:5bf9", "Subsubsection",
 CellChangeTimes->{{3.788526796176552*^9, 3.7885268019738235`*^9}, {
   3.788526875831112*^9, 3.7885268888013544`*^9}, 3.790001415789432*^9, {
   3.790084212264141*^9, 
   3.7900842236731167`*^9}},ExpressionUUID->"6eddd499-f092-4179-9468-\
a0ddafc78427"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myKeys", "=", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myValues", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"assoc", "=", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{"myKeys", ",", "myValues"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7885266358393908`*^9, 3.788526649447048*^9}, {
  3.788526836951988*^9, 3.788526845749408*^9}},
 CellLabel->
  "In[422]:=",ExpressionUUID->"d88f861b-cac9-43ed-9755-8b2469575e5d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "2"}], ",", 
   RowBox[{"c", "\[Rule]", "3"}], ",", 
   RowBox[{"d", "\[Rule]", "4"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.81385687006182*^9},
 CellLabel->
  "Out[424]=",ExpressionUUID->"0e434c7b-fe99-4c45-9e61-bc54e87a0dce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newAssoc", "=", 
  RowBox[{"AssociateTo", "[", 
   RowBox[{"assoc", ",", 
    RowBox[{"e", "\[Rule]", "5"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7885268477421217`*^9, 3.7885268655086265`*^9}},
 CellLabel->
  "In[425]:=",ExpressionUUID->"55d8cf0c-7200-449d-99e4-2bbcc175b462"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "2"}], ",", 
   RowBox[{"c", "\[Rule]", "3"}], ",", 
   RowBox[{"d", "\[Rule]", "4"}], ",", 
   RowBox[{"e", "\[Rule]", "5"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8138568825653257`*^9},
 CellLabel->
  "Out[425]=",ExpressionUUID->"5928ad68-da29-4d1d-86a9-92a5a0878b16"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:53bb\:9664\:952e-\:503c\:5bf9", "Subsubsection",
 CellChangeTimes->{{3.7885268959651575`*^9, 3.788526902519631*^9}, 
   3.7900014183997793`*^9, {3.790084230255787*^9, 
   3.7900842383238735`*^9}},ExpressionUUID->"877471b8-ba73-464a-9be2-\
d8cdcff313f9"],

Cell[CellGroupData[{

Cell[BoxData["newAssoc"], "Input",
 CellChangeTimes->{{3.7885268477421217`*^9, 3.7885268655086265`*^9}, 
   3.7885269213932214`*^9},
 CellLabel->
  "In[426]:=",ExpressionUUID->"602b2f1c-5f4c-43be-99f0-f19c18dc993f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "2"}], ",", 
   RowBox[{"c", "\[Rule]", "3"}], ",", 
   RowBox[{"d", "\[Rule]", "4"}], ",", 
   RowBox[{"e", "\[Rule]", "5"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.813856891215982*^9},
 CellLabel->
  "Out[426]=",ExpressionUUID->"9c031c32-d235-4f92-ab2e-56ae80e03fab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KeyDropFrom", "[", 
  RowBox[{"newAssoc", ",", "d"}], "]"}]], "Input",
 CellChangeTimes->{{3.7885269169640627`*^9, 3.7885269320307393`*^9}},
 CellLabel->
  "In[427]:=",ExpressionUUID->"bdc0e934-68f0-4537-a43a-af2f1a2f31fb"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "2"}], ",", 
   RowBox[{"c", "\[Rule]", "3"}], ",", 
   RowBox[{"e", "\[Rule]", "5"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.813856902009705*^9},
 CellLabel->
  "Out[427]=",ExpressionUUID->"cb1c1a8b-5d06-4974-aa1d-70b18b3dfbf1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7885382527381277`*^9, 3.7885382606669483`*^9}},
 CellLabel->
  "In[428]:=",ExpressionUUID->"dddee3f3-9ee4-4fe4-9c44-1d5e23660c2b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"85cc6e0b-7b04-477d-a164-f1b1a3cb95f1"],

Cell[CellGroupData[{

Cell["\:521b\:5efa\:5173\:8054\:7684\:51fd\:6570", "Section",
 CellChangeTimes->{{3.739031465573464*^9, 3.7390314981021147`*^9}, 
   3.739056618930044*^9, {3.743961084026202*^9, 3.7439610918898783`*^9}, {
   3.780083737877598*^9, 3.780083743320903*^9}, {3.7885378792789354`*^9, 
   3.788537882738731*^9}, {3.790001423096506*^9, 3.790001431576226*^9}, {
   3.7900842461144276`*^9, 
   3.790084253803446*^9}},ExpressionUUID->"cf4bb002-d953-499e-8f14-\
b3c9dfb19a40"],

Cell[CellGroupData[{

Cell["Counts", "Subsubsection",
 CellChangeTimes->{{3.739039851012348*^9, 
  3.73903985244125*^9}},ExpressionUUID->"194f8246-2d3c-4f33-ac2d-\
e1de8dcfcb10"],

Cell[TextData[{
 StyleBox[ButtonBox["Counts",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Counts"],
  FontWeight->"Bold"],
 " \:8fd4\:56de\:4e00\:4e2a\:5305\:542b\:4e0d\:540c\:5143\:7d20\:4f5c\:4e3a\
\:952e\:ff0c\:8ba1\:6570\:4f5c\:4e3a\:503c\:7684\:5173\:8054\:5bf9\:8c61. \
\:7c7b\:4f3c\:4e8e ",
 StyleBox[ButtonBox["Tally",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Tally"],
  FontWeight->"Bold"],
 "\:ff0c\:5b83\:8fd4\:56de\:5217\:8868\:5bf9\:8c61\:ff1a"
}], "Text",
 CellChangeTimes->{{3.739039876776968*^9, 3.7390399802961617`*^9}, {
   3.7439610968442173`*^9, 3.7439611306892548`*^9}, {3.79008429881564*^9, 
   3.790084381776713*^9}, 
   3.790084447875241*^9},ExpressionUUID->"a50aca2c-08aa-43eb-b241-\
12d2a387d9af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "10"}], "}"}], ",", " ", "1000"}], "]"}]], "Input",
 CellLabel->
  "In[429]:=",ExpressionUUID->"8e1fbae9-a9af-4f70-9bb3-8062f1ee953e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "10", ",", "6", ",", "3", ",", "6", ",", "2", ",", "3", 
   ",", "7", ",", "3", ",", "1", ",", "8", ",", "6", ",", "5", ",", "4", ",", 
   "4", ",", "5", ",", "10", ",", "9", ",", "4", ",", "4", ",", "8", ",", "9",
    ",", "9", ",", "5", ",", "1", ",", "6", ",", "9", ",", "7", ",", "3", ",",
    "1", ",", "7", ",", "2", ",", "9", ",", "4", ",", "9", ",", "6", ",", "5",
    ",", "8", ",", "2", ",", "10", ",", "6", ",", "4", ",", "4", ",", "1", 
   ",", "8", ",", "8", ",", "4", ",", "4", ",", "6", ",", "6", ",", "9", ",", 
   "10", ",", "9", ",", "6", ",", "7", ",", "8", ",", "3", ",", "7", ",", "5",
    ",", "5", ",", "8", ",", "7", ",", "2", ",", "2", ",", "2", ",", "7", ",",
    "4", ",", "5", ",", "9", ",", "10", ",", "6", ",", "7", ",", "1", ",", 
   "10", ",", "5", ",", "6", ",", "2", ",", "7", ",", "8", ",", "9", ",", "5",
    ",", "7", ",", "3", ",", "5", ",", "7", ",", "7", ",", "8", ",", "7", ",",
    "8", ",", "3", ",", "9", ",", "5", ",", "8", ",", "3", ",", "5", ",", "4",
    ",", "4", ",", "1", ",", "10", ",", "3", ",", "4", ",", "8", ",", "8", 
   ",", "9", ",", "8", ",", "7", ",", "5", ",", "8", ",", "9", ",", "5", ",", 
   "1", ",", "8", ",", "8", ",", "10", ",", "8", ",", "10", ",", "8", ",", 
   "4", ",", "7", ",", "2", ",", "4", ",", "2", ",", "1", ",", "5", ",", "6", 
   ",", "9", ",", "3", ",", "4", ",", "1", ",", "5", ",", "2", ",", "9", ",", 
   "10", ",", "10", ",", "9", ",", "4", ",", "3", ",", "7", ",", "1", ",", 
   "2", ",", "5", ",", "10", ",", "1", ",", "4", ",", "9", ",", "2", ",", "8",
    ",", "3", ",", "7", ",", "1", ",", "4", ",", "8", ",", "10", ",", "2", 
   ",", "8", ",", "1", ",", "8", ",", "2", ",", "7", ",", "9", ",", "8", ",", 
   "9", ",", "3", ",", "2", ",", "2", ",", "6", ",", "3", ",", "5", ",", "10",
    ",", "10", ",", "3", ",", "5", ",", "3", ",", "1", ",", "9", ",", "8", 
   ",", "6", ",", "8", ",", "5", ",", "6", ",", "10", ",", "5", ",", "10", 
   ",", "3", ",", "3", ",", "5", ",", "6", ",", "6", ",", "7", ",", "9", ",", 
   "2", ",", "1", ",", "8", ",", "3", ",", "3", ",", "8", ",", "2", ",", "9", 
   ",", "10", ",", "8", ",", "8", ",", "8", ",", "1", ",", "9", ",", "5", ",",
    "5", ",", "7", ",", "3", ",", "3", ",", "4", ",", "6", ",", "5", ",", "4",
    ",", "5", ",", "4", ",", "8", ",", "2", ",", "10", ",", "7", ",", "1", 
   ",", "1", ",", "2", ",", "2", ",", "1", ",", "2", ",", "10", ",", "6", ",",
    "10", ",", "5", ",", "3", ",", "2", ",", "2", ",", "3", ",", "6", ",", 
   "9", ",", "2", ",", "3", ",", "3", ",", "10", ",", "10", ",", "6", ",", 
   "7", ",", "9", ",", "1", ",", "6", ",", "6", ",", "10", ",", "3", ",", "9",
    ",", "6", ",", "1", ",", "7", ",", "2", ",", "4", ",", "3", ",", "10", 
   ",", "7", ",", "4", ",", "3", ",", "1", ",", "2", ",", "10", ",", "10", 
   ",", "10", ",", "2", ",", "10", ",", "2", ",", "6", ",", "2", ",", "7", 
   ",", "10", ",", "2", ",", "3", ",", "6", ",", "2", ",", "9", ",", "1", ",",
    "9", ",", "7", ",", "4", ",", "7", ",", "9", ",", "3", ",", "1", ",", "9",
    ",", "5", ",", "7", ",", "2", ",", "6", ",", "8", ",", "6", ",", "8", ",",
    "5", ",", "6", ",", "8", ",", "3", ",", "6", ",", "6", ",", "3", ",", 
   "10", ",", "7", ",", "8", ",", "1", ",", "6", ",", "9", ",", "9", ",", 
   "10", ",", "6", ",", "7", ",", "6", ",", "8", ",", "9", ",", "3", ",", "8",
    ",", "2", ",", "3", ",", "4", ",", "3", ",", "2", ",", "4", ",", "2", ",",
    "2", ",", "5", ",", "6", ",", "10", ",", "7", ",", "8", ",", "7", ",", 
   "4", ",", "10", ",", "9", ",", "7", ",", "1", ",", "8", ",", "2", ",", "9",
    ",", "9", ",", "7", ",", "4", ",", "10", ",", "9", ",", "6", ",", "5", 
   ",", "5", ",", "4", ",", "7", ",", "7", ",", "3", ",", "4", ",", "4", ",", 
   "10", ",", "10", ",", "6", ",", "2", ",", "3", ",", "3", ",", "6", ",", 
   "10", ",", "2", ",", "2", ",", "8", ",", "10", ",", "6", ",", "9", ",", 
   "6", ",", "4", ",", "2", ",", "2", ",", "5", ",", "6", ",", "3", ",", "6", 
   ",", "9", ",", "3", ",", "2", ",", "3", ",", "5", ",", "1", ",", "5", ",", 
   "8", ",", "3", ",", "10", ",", "1", ",", "8", ",", "4", ",", "2", ",", "7",
    ",", "2", ",", "5", ",", "2", ",", "1", ",", "3", ",", "9", ",", "10", 
   ",", "3", ",", "8", ",", "3", ",", "5", ",", "10", ",", "8", ",", "10", 
   ",", "2", ",", "4", ",", "6", ",", "10", ",", "10", ",", "8", ",", "9", 
   ",", "9", ",", "2", ",", "10", ",", "1", ",", "10", ",", "7", ",", "6", 
   ",", "7", ",", "8", ",", "3", ",", "8", ",", "1", ",", "1", ",", "3", ",", 
   "1", ",", "6", ",", "8", ",", "5", ",", "7", ",", "5", ",", "10", ",", "6",
    ",", "8", ",", "8", ",", "5", ",", "1", ",", "2", ",", "5", ",", "9", ",",
    "6", ",", "9", ",", "3", ",", "8", ",", "9", ",", "7", ",", "5", ",", "4",
    ",", "1", ",", "2", ",", "10", ",", "2", ",", "5", ",", "3", ",", "9", 
   ",", "2", ",", "5", ",", "7", ",", "7", ",", "10", ",", "6", ",", "8", ",",
    "10", ",", "7", ",", "6", ",", "1", ",", "7", ",", "4", ",", "9", ",", 
   "10", ",", "10", ",", "7", ",", "10", ",", "7", ",", "8", ",", "4", ",", 
   "5", ",", "6", ",", "1", ",", "9", ",", "6", ",", "2", ",", "9", ",", "6", 
   ",", "10", ",", "2", ",", "5", ",", "3", ",", "7", ",", "10", ",", "8", 
   ",", "10", ",", "1", ",", "6", ",", "3", ",", "3", ",", "10", ",", "6", 
   ",", "5", ",", "8", ",", "3", ",", "2", ",", "8", ",", "2", ",", "3", ",", 
   "2", ",", "7", ",", "10", ",", "7", ",", "4", ",", "4", ",", "1", ",", "8",
    ",", "1", ",", "3", ",", "1", ",", "9", ",", "8", ",", "2", ",", "3", ",",
    "1", ",", "10", ",", "8", ",", "3", ",", "9", ",", "9", ",", "8", ",", 
   "2", ",", "3", ",", "2", ",", "5", ",", "6", ",", "6", ",", "7", ",", "4", 
   ",", "2", ",", "3", ",", "1", ",", "7", ",", "6", ",", "7", ",", "6", ",", 
   "8", ",", "1", ",", "7", ",", "1", ",", "2", ",", "9", ",", "7", ",", "3", 
   ",", "8", ",", "7", ",", "1", ",", "4", ",", "8", ",", "3", ",", "8", ",", 
   "10", ",", "1", ",", "8", ",", "10", ",", "3", ",", "6", ",", "9", ",", 
   "5", ",", "3", ",", "3", ",", "1", ",", "3", ",", "8", ",", "2", ",", "4", 
   ",", "7", ",", "8", ",", "9", ",", "7", ",", "4", ",", "3", ",", "10", ",",
    "1", ",", "1", ",", "2", ",", "10", ",", "4", ",", "5", ",", "3", ",", 
   "1", ",", "4", ",", "3", ",", "3", ",", "8", ",", "1", ",", "7", ",", "4", 
   ",", "1", ",", "7", ",", "4", ",", "4", ",", "6", ",", "8", ",", "6", ",", 
   "4", ",", "7", ",", "4", ",", "7", ",", "2", ",", "3", ",", "4", ",", "10",
    ",", "6", ",", "4", ",", "8", ",", "7", ",", "6", ",", "9", ",", "1", ",",
    "1", ",", "3", ",", "8", ",", "8", ",", "1", ",", "2", ",", "9", ",", "4",
    ",", "5", ",", "10", ",", "6", ",", "2", ",", "4", ",", "3", ",", "5", 
   ",", "2", ",", "2", ",", "9", ",", "6", ",", "5", ",", "8", ",", "9", ",", 
   "2", ",", "7", ",", "2", ",", "2", ",", "3", ",", "7", ",", "7", ",", "10",
    ",", "10", ",", "1", ",", "3", ",", "9", ",", "6", ",", "7", ",", "2", 
   ",", "5", ",", "2", ",", "3", ",", "5", ",", "9", ",", "6", ",", "6", ",", 
   "7", ",", "1", ",", "7", ",", "6", ",", "8", ",", "5", ",", "1", ",", "4", 
   ",", "2", ",", "6", ",", "5", ",", "3", ",", "1", ",", "8", ",", "3", ",", 
   "1", ",", "9", ",", "4", ",", "4", ",", "1", ",", "6", ",", "2", ",", "10",
    ",", "6", ",", "7", ",", "8", ",", "2", ",", "3", ",", "1", ",", "10", 
   ",", "2", ",", "10", ",", "1", ",", "3", ",", "9", ",", "3", ",", "9", ",",
    "1", ",", "7", ",", "10", ",", "2", ",", "8", ",", "2", ",", "9", ",", 
   "2", ",", "3", ",", "3", ",", "8", ",", "1", ",", "4", ",", "2", ",", "4", 
   ",", "1", ",", "7", ",", "3", ",", "1", ",", "8", ",", "2", ",", "9", ",", 
   "5", ",", "9", ",", "5", ",", "1", ",", "5", ",", "5", ",", "4", ",", "8", 
   ",", "5", ",", "6", ",", "2", ",", "7", ",", "7", ",", "6", ",", "2", ",", 
   "6", ",", "5", ",", "8", ",", "6", ",", "10", ",", "7", ",", "2", ",", "6",
    ",", "8", ",", "9", ",", "8", ",", "2", ",", "10", ",", "4", ",", "5", 
   ",", "7", ",", "6", ",", "1", ",", "5", ",", "5", ",", "4", ",", "3", ",", 
   "7", ",", "9", ",", "8", ",", "7", ",", "10", ",", "5", ",", "10", ",", 
   "2", ",", "4", ",", "1", ",", "10", ",", "3", ",", "2", ",", "6", ",", "2",
    ",", "1", ",", "2", ",", "1", ",", "5", ",", "1", ",", "9", ",", "9", ",",
    "6", ",", "7", ",", "6", ",", "9", ",", "6", ",", "4", ",", "4", ",", "3",
    ",", "1", ",", "10", ",", "7", ",", "5", ",", "3", ",", "10", ",", "5", 
   ",", "9", ",", "8", ",", "5", ",", "9", ",", "7", ",", "3", ",", "6", ",", 
   "2", ",", "10", ",", "10", ",", "2", ",", "4", ",", "10", ",", "2", ",", 
   "8", ",", "3", ",", "9", ",", "10", ",", "8", ",", "1", ",", "6", ",", "1",
    ",", "4", ",", "8", ",", "6", ",", "6", ",", "8", ",", "7", ",", "5", ",",
    "4", ",", "4", ",", "4", ",", "8", ",", "9", ",", "7", ",", "6", ",", "9",
    ",", "4", ",", "6", ",", "6", ",", "8", ",", "8", ",", "3", ",", "4", ",",
    "7", ",", "8", ",", "7", ",", "1", ",", "5", ",", "2", ",", "8", ",", 
   "10", ",", "6", ",", "1", ",", "3", ",", "9", ",", "10", ",", "10", ",", 
   "9", ",", "10", ",", "9", ",", "1", ",", "9", ",", "3", ",", "1", ",", "5",
    ",", "8", ",", "9", ",", "1", ",", "2", ",", "7", ",", "4", ",", "7", ",",
    "9", ",", "6", ",", "4", ",", "3", ",", "5", ",", "2", ",", "3", ",", "3",
    ",", "5", ",", "1", ",", "2", ",", "8", ",", "4", ",", "10", ",", "3", 
   ",", "1", ",", "2", ",", "4", ",", "10", ",", "8", ",", "8", ",", "6", ",",
    "2", ",", "8", ",", "4", ",", "8", ",", "7", ",", "2", ",", "9", ",", "9",
    ",", "10", ",", "9", ",", "4", ",", "3", ",", "2", ",", "10", ",", "8", 
   ",", "9", ",", "2", ",", "10", ",", "5", ",", "2", ",", "7", ",", "7", ",",
    "10", ",", "8", ",", "2", ",", "9", ",", "6", ",", "3", ",", "6", ",", 
   "7", ",", "3", ",", "2", ",", "7", ",", "9", ",", "1", ",", "10", ",", "1",
    ",", "1", ",", "2", ",", "10", ",", "2", ",", "6", ",", "6", ",", "10", 
   ",", "9", ",", "1", ",", "2", ",", "10", ",", "10", ",", "5", ",", "1", 
   ",", "6", ",", "7", ",", "8", ",", "10", ",", "1", ",", "9", ",", "3", ",",
    "8", ",", "2", ",", "3", ",", "1", ",", "1", ",", "10", ",", "8", ",", 
   "4", ",", "4", ",", "3", ",", "5", ",", "10", ",", "10", ",", "6", ",", 
   "3", ",", "3", ",", "7", ",", "1", ",", "9", ",", "7", ",", "4", ",", "1", 
   ",", "5", ",", "7", ",", "7", ",", "9", ",", "2", ",", "7", ",", "7", ",", 
   "8", ",", "4", ",", "1", ",", "10", ",", "10", ",", "3", ",", "6", ",", 
   "3", ",", "9", ",", "8", ",", "9", ",", "3", ",", "8", ",", "5", ",", "2", 
   ",", "8", ",", "2", ",", "1", ",", "1", ",", "9", ",", "9", ",", "9", ",", 
   "6", ",", "10", ",", "2", ",", "7", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.813856936354395*^9},
 CellLabel->
  "Out[429]=",ExpressionUUID->"e8d28148-8a6e-4fdd-93b3-29aa46199dae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Counts", "[", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "10"}], "}"}], ",", " ", "1000"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.739039982424111*^9, 3.739040023683627*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"91b30b9a-e346-486d-9391-b08267f0d7ec"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"2", "\[Rule]", "104"}], ",", 
   RowBox[{"5", "\[Rule]", "96"}], ",", 
   RowBox[{"1", "\[Rule]", "92"}], ",", 
   RowBox[{"8", "\[Rule]", "103"}], ",", 
   RowBox[{"9", "\[Rule]", "112"}], ",", 
   RowBox[{"7", "\[Rule]", "90"}], ",", 
   RowBox[{"6", "\[Rule]", "105"}], ",", 
   RowBox[{"4", "\[Rule]", "104"}], ",", 
   RowBox[{"3", "\[Rule]", "97"}], ",", 
   RowBox[{"10", "\[Rule]", "97"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.813856943087062*^9},
 CellLabel->
  "Out[431]=",ExpressionUUID->"23f88994-3755-45af-b6b8-9d669cfa6c13"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PositionIndex", "Subsubsection",
 CellChangeTimes->{{3.7390398258109426`*^9, 
  3.739039828276174*^9}},ExpressionUUID->"464f7114-031e-474f-8a09-\
2e702db74a73"],

Cell[TextData[{
 "\:7c7b\:4f3c\:4e8e Counts\:ff0c",
 StyleBox[ButtonBox["PositionIndex",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PositionIndex"],
  FontWeight->"Bold"],
 " \:8fd4\:56de\:4e00\:4e2a\:5305\:542b\:4e0d\:540c\:5143\:7d20\:4f5c\:4e3a\
\:952e\:ff0c\:4f4d\:7f6e\:4f5c\:4e3a\:503c\:7684\:5173\:8054\:5bf9\:8c61\:ff1a"
}], "Text",
 CellChangeTimes->{{3.739040043264448*^9, 3.739040084233284*^9}, 
   3.743954491752269*^9, {3.743961135496727*^9, 3.743961162576047*^9}, {
   3.744025561434204*^9, 3.744025564834277*^9}, {3.7900843923148746`*^9, 
   3.790084443271221*^9}},ExpressionUUID->"f7be6e55-cf50-431c-8547-\
4681a64f0e30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Characters", "[", "\"\<This is a string\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.789407961092648*^9, 3.7894079629277115`*^9}, {
  3.789407997214984*^9, 3.7894080011624117`*^9}},
 CellLabel->
  "In[432]:=",ExpressionUUID->"39a53444-ebae-4444-98c1-886b6043ef4a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"T\"\>", ",", "\<\"h\"\>", ",", "\<\"i\"\>", ",", "\<\"s\"\>", 
   ",", "\<\" \"\>", ",", "\<\"i\"\>", ",", "\<\"s\"\>", ",", "\<\" \"\>", 
   ",", "\<\"a\"\>", ",", "\<\" \"\>", ",", "\<\"s\"\>", ",", "\<\"t\"\>", 
   ",", "\<\"r\"\>", ",", "\<\"i\"\>", ",", "\<\"n\"\>", ",", "\<\"g\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.813856971738185*^9},
 CellLabel->
  "Out[432]=",ExpressionUUID->"f212b9c6-1ce0-4316-996f-5cb1d4f25f33"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PositionIndex", "[", 
  RowBox[{"Characters", "[", "\"\<This is a string\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7894080069867926`*^9, 3.789408017648307*^9}},
 CellLabel->
  "In[433]:=",ExpressionUUID->"890f9657-b01b-496e-a447-842ed98ebad6"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"T\"\>", "\[Rule]", 
    RowBox[{"{", "1", "}"}]}], ",", 
   RowBox[{"\<\"h\"\>", "\[Rule]", 
    RowBox[{"{", "2", "}"}]}], ",", 
   RowBox[{"\<\"i\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "6", ",", "14"}], "}"}]}], ",", 
   RowBox[{"\<\"s\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"4", ",", "7", ",", "11"}], "}"}]}], ",", 
   RowBox[{"\<\" \"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"5", ",", "8", ",", "10"}], "}"}]}], ",", 
   RowBox[{"\<\"a\"\>", "\[Rule]", 
    RowBox[{"{", "9", "}"}]}], ",", 
   RowBox[{"\<\"t\"\>", "\[Rule]", 
    RowBox[{"{", "12", "}"}]}], ",", 
   RowBox[{"\<\"r\"\>", "\[Rule]", 
    RowBox[{"{", "13", "}"}]}], ",", 
   RowBox[{"\<\"n\"\>", "\[Rule]", 
    RowBox[{"{", "15", "}"}]}], ",", 
   RowBox[{"\<\"g\"\>", "\[Rule]", 
    RowBox[{"{", "16", "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8138569794627113`*^9},
 CellLabel->
  "Out[433]=",ExpressionUUID->"000342ba-30dd-437a-876f-7b222088edbd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["WordCounts", "Subsubsection",
 CellChangeTimes->{{3.739039815436656*^9, 
  3.73903982142428*^9}},ExpressionUUID->"ac40c9db-b9df-4a95-94fe-\
e3d2f03ac297"],

Cell[TextData[{
 StyleBox[ButtonBox["WordCounts",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/WordCounts"],
  FontWeight->"Bold"],
 " \:4ea7\:751f\:5b57\:7b26\:4e32\:4e2d\:5355\:8bcd\:7684\:8ba1\:6570\:ff0c\
\:5e76\:4ee5\:5173\:8054\:5f62\:5f0f\:8fd4\:56de\:4fe1\:606f. \:4e24\:53c2\
\:6570\:7248\:672c\:8fd4\:56de ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "8278a7bb-d8b0-4dd1-b019-06a0f1934b0c"],
 "-\:5143\:ff1a"
}], "Text",
 CellChangeTimes->{{3.7390531195402718`*^9, 3.73905317312991*^9}, {
   3.739053204799633*^9, 3.739053223847234*^9}, 3.743954534994882*^9, {
   3.743961167431691*^9, 3.7439611990699673`*^9}, {3.7900845185275145`*^9, 
   3.7900845388374023`*^9}, 3.7900845979754233`*^9, {3.7900846530823574`*^9, 
   3.790084657061409*^9}},ExpressionUUID->"f17b18e8-794a-44fe-a4be-\
7e5c25676584"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCounts", "[", "\[IndentingNewLine]", 
  "\"\<It matters not how strait the gate,\nHow charged with punishments the \
scroll.\nI am the master of my fate:\nI am the captain of my soul. \>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7390530952356577`*^9, 3.739053110075493*^9}, {
  3.781017842234057*^9, 3.781017852913599*^9}},
 CellLabel->
  "In[435]:=",ExpressionUUID->"145392ce-4700-438c-88a7-995f00744b68"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"the\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"my\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"of\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"am\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"I\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"soul\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"captain\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"fate\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"master\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"scroll\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"punishments\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"with\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"charged\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"How\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"gate\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"strait\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"how\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"not\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"matters\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"It\"\>", "\[Rule]", "1"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.813856999011724*^9, 3.8138570004590263`*^9}},
 CellLabel->
  "Out[435]=",ExpressionUUID->"2136d2db-60d4-44e9-a828-f74ef5239d45"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["GroupBy", "Subsubsection",
 CellChangeTimes->{{3.739039805063067*^9, 
  3.7390398082967167`*^9}},ExpressionUUID->"0d731106-9476-42bc-937f-\
bdc2d6e5b54f"],

Cell["GroupBy \:4ea7\:751f\:4e00\:79cd\:5173\:8054\:ff0c\:5176\:4e2d\:6839\
\:636e\:5206\:7ec4\:529f\:80fd\:5bf9\:5143\:7d20\:8fdb\:884c\:5206\:7ec4. \
\:5b83\:7c7b\:4f3c\:4e8e GatherBy\:ff0c\:540e\:8005\:8fd4\:56de\:5217\:8868\
\:ff0c\:4f46\:529f\:80fd\:66f4\:5f3a\:5927.", "Text",
 CellChangeTimes->{{3.739053263423794*^9, 3.739053268285985*^9}, {
   3.7390533423002853`*^9, 3.73905351261552*^9}, {3.739053545792076*^9, 
   3.739053587460105*^9}, {3.7439545371080217`*^9, 3.74395454280431*^9}, {
   3.7439612067677097`*^9, 3.743961248893371*^9}, {3.7900014569546137`*^9, 
   3.790001475359819*^9}, 3.7900846919743156`*^9, {3.790084723979644*^9, 
   3.790084749677792*^9}, 
   3.79008480255188*^9},ExpressionUUID->"f80cd209-da40-424b-b77e-\
00e8bb69ce68"],

Cell["\:8fd9\:662f\:4e00\:4e2a\:793a\:4f8b\:ff0c\:5176\:4e2d\:5177\:6709\:5171\
\:540c\:7684\:7b2c\:4e00\:4e2a\:5143\:7d20\:7684\:5b50\:5217\:8868\:88ab\:5408\
\:5728\:4e00\:8d77\:ff0c\:4ec5\:4fdd\:7559\:7b2c\:4e8c\:4e2a\:5143\:7d20\:ff1a\
", "Text",
 CellChangeTimes->{{3.739053263423794*^9, 3.739053268285985*^9}, {
   3.7390533423002853`*^9, 3.73905351261552*^9}, {3.739053545792076*^9, 
   3.739053587460105*^9}, {3.7439545371080217`*^9, 3.7439545475104227`*^9}, 
   3.7900848357203584`*^9, {3.7900849339586425`*^9, 
   3.7900849457755127`*^9}},ExpressionUUID->"c84f4469-a710-4551-b0ab-\
17d9237215b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GroupBy", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "30"}], "}"}]}], "}"}], ",", 
   RowBox[{"First", "\[Rule]", "Last"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.739053514758273*^9, 3.739053541831761*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"ad9908d6-3dcc-4943-9577-f93ce5bee7b7"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"a", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"10", ",", "30"}], "}"}]}], ",", 
   RowBox[{"b", "\[Rule]", 
    RowBox[{"{", "20", "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.813857013590035*^9, 3.8153211924871473`*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"7d319173-9316-4c98-8210-85b4569bfc11"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["EntityValue", "Subsubsection",
 CellChangeTimes->{{3.7885281735120316`*^9, 3.788528176859074*^9}, 
   3.789407933417672*^9},ExpressionUUID->"927b7a3c-41ed-49a9-8d28-\
0c39a27b0e53"],

Cell[TextData[{
 StyleBox[ButtonBox["EntityValue",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/EntityValue"],
  FontWeight->"Bold"],
 " \:4e5f\:53ef\:4ee5\:4f7f\:7528\:7b2c\:4e09\:4e2a\:53c2\:6570\:8fd4\:56de\
\:5173\:8054\:5bf9\:8c61."
}], "Text",
 CellChangeTimes->{{3.7390882630051737`*^9, 3.739088266182969*^9}, {
  3.739088589360856*^9, 3.7390886804186697`*^9}, {3.743961286635304*^9, 
  3.743961308699312*^9}, {3.7900849714550376`*^9, 
  3.790085001931078*^9}},ExpressionUUID->"dd4988ef-969a-4d31-adb5-\
64f4c8f2c46b"],

Cell[TextData[{
 Cell[BoxData[
 "\"\<EntityAssociation\>\""], "Input",ExpressionUUID->
  "3141c9d7-e7ee-4f43-ab00-7beb8fd53d33"],
 ":"
}], "Text",
 CellChangeTimes->{{3.739088687364379*^9, 3.739088703705021*^9}, {
  3.790001499827754*^9, 
  3.790001513255175*^9}},ExpressionUUID->"6ebe7516-9910-402e-bdac-\
30ee6257edd4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"EntityClass", "[", 
    RowBox[{"\"\<Country\>\"", ",", "\"\<NATO\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", "\t", "\"\<Population\>\"", ",", 
   "\[IndentingNewLine]", "\t", "\"\<EntityAssociation\>\""}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.73908871221282*^9, 3.739088757797695*^9}, 
   3.813765432330782*^9, {3.815321217106567*^9, 3.815321218640114*^9}, {
   3.815321551034786*^9, 3.815321551664295*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"be6fba03-b1ff-410b-b111-31a7ede9be23"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"Albania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"2880913", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Belgium\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"11539326", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bulgaria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"7000117", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Canada\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"37411038", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Croatia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"4130299", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Czech Republic\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"CzechRepublic\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"CzechRepublic\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"10689213", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Denmark\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Denmark\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Denmark\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"5771877", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Estonia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1325649", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"France\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"65129731", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Germany\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"83517046", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Greece\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"10473452", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Hungary\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Hungary\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Hungary\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"9684680", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Iceland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Iceland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Iceland\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"339037", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Italy\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"60550092", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Latvia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1906740", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Lithuania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"2759631", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Luxembourg\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Luxembourg\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Luxembourg\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"615730", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"North Macedonia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Macedonia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Macedonia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"2083458", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Montenegro\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Montenegro\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Montenegro\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"627988", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Netherlands\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"17097123", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Norway\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Norway\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Norway\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"5378859", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Poland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"37887771", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Portugal\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Portugal\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Portugal\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"10226178", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Romania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Romania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Romania\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"19364558", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Slovakia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"5457012", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Slovenia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"2078654", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Spain\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"46736782", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Turkey\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"83429607", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"United Kingdom\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"67530161", "\"people\"", "people", "\"People\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"United States\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"329064917", "\"people\"", "people", "\"People\""},
     "Quantity"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.815321667506269*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"ced16db0-149e-4cab-ac89-cdd4dac376aa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7885382527381277`*^9, 3.7885382606669483`*^9}, {
  3.815321566706462*^9, 3.8153215675183477`*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"3a9fcd7c-33e4-4e2f-93ef-739ac53defec"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ebda8189-4da7-451d-aef7-74a6cf367e90"],

Cell[CellGroupData[{

Cell["Dataset", "Section",
 CellChangeTimes->{{3.7704582317973537`*^9, 
  3.7704582401818037`*^9}},ExpressionUUID->"43287ad0-8912-4ae2-a604-\
2d78044d8381"],

Cell["\:6570\:636e\:96c6\:7684\:4e00\:4e2a\:7b80\:5355\:793a\:4f8b\:662f\:7531\
\:5173\:8054\:7684\:5173\:8054\:7ec4\:6210\:ff1a", "Text",
 CellChangeTimes->{{3.7704582647534285`*^9, 3.7704582731613703`*^9}, {
  3.7900015219906597`*^9, 3.790001522723321*^9}, {3.7900850360706015`*^9, 
  3.790085077766395*^9}},ExpressionUUID->"ff25d2a9-e328-4065-8438-\
056c331cbba4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<a\>\"", "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<x\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<y\>\"", "\[Rule]", "2"}], ",", 
        RowBox[{"\"\<z\>\"", "\[Rule]", "3"}]}], "|>"}]}], ",", 
     RowBox[{"\"\<b\>\"", "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<x\>\"", "\[Rule]", "5"}], ",", 
        RowBox[{"\"\<y\>\"", "\[Rule]", "10"}], ",", 
        RowBox[{"\"\<z\>\"", "\[Rule]", "7"}]}], "|>"}]}]}], "|>"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.770458242120018*^9, 3.7704582442336435`*^9}, 
   3.770458477118862*^9},
 CellLabel->
  "In[146]:=",ExpressionUUID->"8e712a25-282a-42f7-9ca2-5e830014ef90"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "a" -> Association["x" -> 1, "y" -> 2, "z" -> 3], "b" -> 
       Association["x" -> 5, "y" -> 10, "z" -> 7]], "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[6]} -> 1, {All, "x"} -> 
        1, {All, "y"} -> 1, {All, "z"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "x" -> TypeSystem`PackageScope`AtomShape[34], "y" -> 
             TypeSystem`PackageScope`AtomShape[34], "z" -> 
             TypeSystem`PackageScope`AtomShape[34]]], 
           DirectedInfinity[1], 3, {All}]]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"x", "y", "z"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 2], "Meta" -> 
     Association["ID" -> 70802753651948], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[6]} -> 1, {All, "x"} -> 
        1, {All, "y"} -> 1, {All, "z"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "x" -> TypeSystem`PackageScope`AtomShape[34], "y" -> 
             TypeSystem`PackageScope`AtomShape[34], "z" -> 
             TypeSystem`PackageScope`AtomShape[34]]], 
           DirectedInfinity[1], 3, {All}]]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"x", "y", "z"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 2], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     2, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["x", 
                  Style[
                  "x", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "x"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "x"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["y", 
                  Style[
                  "y", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "y"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "y"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["z", 
                  Style[
                  "z", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "z"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "z"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["a", 
                  Style[
                  "a", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["a"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"], 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"], 
                 Key["y"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["a"], 
                 Key["z"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["b", 
                  Style[
                  "b", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["b"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"], 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"], 
                 Key["y"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["b"], 
                 Key["z"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{196., {63.488525390625, 74.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{196., {63.488525390625, 74.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.81532218811007*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"f93b3fdd-977a-4db1-8a59-93e489591a82"]
}, Open  ]],

Cell["\<\
\:8bbf\:95ee\:6570\:636e\:96c6\:7684\:5404\:4e2a\:90e8\:5206\:57fa\:672c\:4e0a\
\:4e0e\:5217\:8868\:548c\:5173\:8054\:4e2d\:7684\:76f8\:540c\:ff1a\
\>", "Text",
 CellChangeTimes->{{3.770458311986017*^9, 3.7704583170988503`*^9}, {
   3.770458364095316*^9, 3.7704584199162264`*^9}, 3.790001528177677*^9, {
   3.790002220822877*^9, 3.790002220939679*^9}, {3.790003511033936*^9, 
   3.790003511823371*^9}, {3.7900851483957405`*^9, 
   3.7900851627493343`*^9}},ExpressionUUID->"09381107-8b0e-4e53-b14b-\
fe229c55d7ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", "\"\<b\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.770458310160814*^9, 3.770458310160814*^9}, {
  3.7704584240376587`*^9, 3.770458434292615*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"ec1d37e8-d11b-4a9b-b7c9-afe84a213143"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> Association["x" -> 5, "y" -> 10, "z" -> 7], 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[27.], 
         TypeSystem`PackageScope`AtomShape[34]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["x", "y", "z"]], 
       TypeSystem`Atom[Integer], 3], "Meta" -> 
     Association["ID" -> 70807048619259], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[27.], 
         TypeSystem`PackageScope`AtomShape[34]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["x", "y", "z"]], 
       TypeSystem`Atom[Integer], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     3, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["x", 
                  Style[
                  "x", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["x"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["x"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["y", 
                  Style[
                  "y", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["y"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["y"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["y"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["z", 
                  Style[
                  "z", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["z"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["z"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{27., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["z"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{106., {63.488525390625, 74.511474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{106., {63.488525390625, 74.511474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8153222033493*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"eca89990-355f-4e0c-a143-129b103e65ef"]
}, Open  ]],

Cell["Wolfram \:8bed\:8a00\:8fd8\:5177\:6709\:6570\:636e\:96c6\:5f62\:5f0f\
\:7684\:5185\:7f6e\:6570\:636e\:ff1a", "Text",
 CellChangeTimes->{{3.7704586361800795`*^9, 3.770458655640373*^9}, {
  3.790001532041259*^9, 3.7900015417011213`*^9}, {3.790085183930949*^9, 
  3.790085191084546*^9}, {3.790085488064741*^9, 
  3.790085507614651*^9}},ExpressionUUID->"7034e087-c1ff-4d79-b23f-\
d9c37e0021ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Dataset\>\"", ",", "\"\<Planets\>\""}], "}"}], 
   "]"}]}]], "Input",
 CellLabel->
  "In[148]:=",ExpressionUUID->"f0356768-2659-4f0e-a95f-d9f0d2a5c7c5"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Mercury" -> 
       Association[
        "Mass" -> Quantity[3.30104`6.*^23, "Kilograms"], "Radius" -> 
         Quantity[2439.7`5., "Kilometers"], "Moons" -> Association[]], 
       "Venus" -> Association[
        "Mass" -> Quantity[4.867320000000000000000001`6.*^24, "Kilograms"], 
         "Radius" -> Quantity[6051.85`5., "Kilometers"], "Moons" -> 
         Association[]], "Earth" -> 
       Association[
        "Mass" -> Quantity[5.9721986`8.*^24, "Kilograms"], "Radius" -> 
         Quantity[6367.4446571000000000001`8.299868708313456, "Kilometers"], 
         "Moons" -> Association[
          "Moon" -> Association[
            "Mass" -> Quantity[
              7.3459006322855173653772`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[1737.5`5., "Kilometers"]]]], "Mars" -> 
       Association[
        "Mass" -> Quantity[6.41693`6.*^23, "Kilograms"], "Radius" -> 
         Quantity[3385.595`4.298042852900571, "Kilometers"], "Moons" -> 
         Association[
          "Phobos" -> 
           Association[
            "Mass" -> Quantity[
              1.0724880884600402`3.9586073148417724*^16, "Kilograms"], 
             "Radius" -> Quantity[11.1`3., "Kilometers"]], "Deimos" -> 
           Association[
            "Mass" -> Quantity[
              1.468340774924336`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[6.2`2., "Kilometers"]]]], "Jupiter" -> 
       Association[
        "Mass" -> Quantity[1.89813`6.*^27, "Kilograms"], "Radius" -> 
         Quantity[69173.`5., "Kilometers"], "Moons" -> 
         Association[
          "Metis" -> Association[
            "Mass" -> Quantity[
              1.19864553055047796`0.9999565727231415*^17, "Kilograms"], 
             "Radius" -> Quantity[21.5`3., "Kilometers"]], "Adrastea" -> 
           Association[
            "Mass" -> Quantity[
              7.491534565940487`0.9999565727231415*^15, "Kilograms"], 
             "Radius" -> Quantity[8.2`2., "Kilometers"]], "Amalthea" -> 
           Association[
            "Mass" -> Quantity[
              2.067663540199574478`2.995678626217367*^18, "Kilograms"], 
             "Radius" -> Quantity[83.45`4., "Kilometers"]], "Thebe" -> 
           Association[
            "Mass" -> Quantity[
              1.49830691318809745`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[49.3`3., "Kilometers"]], "Io" -> 
           Association[
            "Mass" -> Quantity[
              8.9297833448203530011087`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[1821.6`5., "Kilometers"]], "Europa" -> 
           Association[
            "Mass" -> Quantity[
              4.7986859848371340385365`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[1560.8`5., "Kilometers"]], "Ganymede" -> 
           Association[
            "Mass" -> Quantity[
              1.48150100386563183602529`4.995678626217362*^23, "Kilograms"], 
             "Radius" -> Quantity[2631.2`5., "Kilometers"]], "Callisto" -> 
           Association[
            "Mass" -> Quantity[
              1.07567783404752629528633`4.995678626217362*^23, "Kilograms"], 
             "Radius" -> Quantity[2410.3`5., "Kilometers"]], "Themisto" -> 
           Association[
            "Mass" -> Quantity[
              6.89221180066526`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]], "Leda" -> 
           Association[
            "Mass" -> Quantity[
              1.0937640466273112`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[10.`2., "Kilometers"]], "Himalia" -> 
           Association[
            "Mass" -> Quantity[
              6.742381109346438525`1.999565922520683*^18, "Kilograms"], 
             "Radius" -> Quantity[85.`2., "Kilometers"]], "Lysithea" -> 
           Association[
            "Mass" -> Quantity[
              6.2928890353900092`1.999565922520683*^16, "Kilograms"], 
             "Radius" -> Quantity[18.`2., "Kilometers"]], "Elara" -> 
           Association[
            "Mass" -> Quantity[
              8.6901800964909652`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[43.`2., "Kilometers"]], "S/2000 J11" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "S/2003 J12" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "Carpo" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Euporie" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "S/2003 J3" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "S/2003 J18" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Orthosie" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "Euanthe" -> 
           Association[
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.5`2., "Kilometers"]], "Harpalyke" -> 
           Association[
            "Mass" -> Quantity[
              1.19864553055047`0.9999565727231415*^14, "Kilograms"], "Radius" -> 
             Quantity[2.2`2., "Kilometers"]], "Praxidike" -> 
           Association[
            "Mass" -> Quantity[
              4.34509004824548`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.4`2., "Kilometers"]], "Thyone" -> 
           Association[
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "S/2003 J16" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Iocaste" -> 
           Association[
            "Mass" -> Quantity[
              1.94779898714453`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.6`2., "Kilometers"]], "Mneme" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Hermippe" -> 
           Association[
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Thelxinoe" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Helike" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]], "Ananke" -> 
           Association[
            "Mass" -> Quantity[
              2.9966138263761948`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[14.`2., "Kilometers"]], "S/2003 J15" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Eurydome" -> 
           Association[
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.5`2., "Kilometers"]], "Arche" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.5`2., "Kilometers"]], "Herse" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Pasithee" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "S/2003 J10" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Chaldene" -> 
           Association[
            "Mass" -> Quantity[
              7.4915345659396`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.9`2., "Kilometers"]], "Isonoe" -> 
           Association[
            "Mass" -> Quantity[
              7.4915345659396`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.9`2., "Kilometers"]], "Erinome" -> 
           Association[
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.6`2., "Kilometers"]], "Kale" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "Aitne" -> 
           Association[
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.5`2., "Kilometers"]], "Taygete" -> 
           Association[
            "Mass" -> Quantity[
              1.6481376045069`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.5`2., "Kilometers"]], "S/2003 J9" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "Carme" -> 
           Association[
            "Mass" -> Quantity[
              1.31851008360552575`1.9995659225206786*^17, "Kilograms"], 
             "Radius" -> Quantity[23.`2., "Kilometers"]], "Sponde" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "Megaclite" -> 
           Association[
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.7`2., "Kilometers"]], "S/2003 J5" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]], "S/2003 J19" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "S/2003 J23" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Kalyke" -> 
           Association[
            "Mass" -> Quantity[
              1.94779898714453`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.6`2., "Kilometers"]], "Kore" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Pasiphae" -> 
           Association[
            "Mass" -> Quantity[
              2.9966138263761949`1.9995659225206786*^17, "Kilograms"], 
             "Radius" -> Quantity[30.`2., "Kilometers"]], "Eukelade" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]], "S/2003 J4" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Sinope" -> 
           Association[
            "Mass" -> Quantity[
              7.4915345659404873`1.9995659225206786*^16, "Kilograms"], 
             "Radius" -> Quantity[19.`2., "Kilometers"]], "Hegemone" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Aoede" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]], "Kallichore" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Autonoe" -> 
           Association[
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Callirrhoe" -> 
           Association[
            "Mass" -> Quantity[
              8.69018009649097`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[4.3`2., "Kilometers"]], "Cyllene" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "S/2003 J2" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]]]], "Saturn" -> 
       Association[
        "Mass" -> Quantity[5.68319`6.*^26, "Kilograms"], "Radius" -> 
         Quantity[57316.`5., "Kilometers"], "Moons" -> 
         Association[
          "Tarqeq" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]], "Pan" -> 
           Association[
            "Mass" -> Quantity[
              4.944412813520729`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[12.8`3., "Kilometers"]], "Daphnis" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.9`2., "Kilometers"]], "Atlas" -> 
           Association[
            "Mass" -> Quantity[
              2.097629678463337`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[10.`2., "Kilometers"]], "Prometheus" -> 
           Association[
            "Mass" -> Quantity[
              1.86689041383236942`3.9586073148417764*^17, "Kilograms"], 
             "Radius" -> Quantity[46.8`3., "Kilometers"]], "Pandora" -> 
           Association[
            "Mass" -> Quantity[
              1.49081537862215657`2.9956786262173587*^17, "Kilograms"], 
             "Radius" -> Quantity[40.6`3., "Kilometers"]], "Epimetheus" -> 
           Association[
            "Mass" -> Quantity[
              5.25905726529022205`2.9956786262173543*^17, "Kilograms"], 
             "Radius" -> Quantity[58.3`3., "Kilometers"]], "Janus" -> 
           Association[
            "Mass" -> Quantity[
              1.896856552096131371`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[90.4`3., "Kilometers"]], "Aegaeon" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.25`2., "Kilometers"]], "Mimas" -> 
           Association[
            "Mass" -> Quantity[
              3.7907164903658865482`3.9586073148417764*^19, "Kilograms"], 
             "Radius" -> Quantity[198.8`4., "Kilometers"]], "Methone" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.6`2., "Kilometers"]], "Anthe" -> 
           Association[
            "Mass" -> Quantity[5.`1.*^12, "Kilograms"], "Radius" -> 
             Quantity[1.`1., "Kilometers"]], "Pallene" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.6`2., "Kilometers"]], "Enceladus" -> 
           Association[
            "Mass" -> Quantity[
              1.08027928440861826137`3.9586073148417764*^20, "Kilograms"], 
             "Radius" -> Quantity[252.3`4., "Kilometers"]], "Tethys" -> 
           Association[
            "Mass" -> Quantity[
              6.17452278924814959099`4.6989700043360205*^20, "Kilograms"], 
             "Radius" -> Quantity[536.3`4., "Kilometers"]], "Calypso" -> 
           Association[
            "Mass" -> Quantity[
              3.595936591651433`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[9.5`2., "Kilometers"]], "Telesto" -> 
           Association[
            "Mass" -> Quantity[
              7.191873183302868`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[12.`2., "Kilometers"]], "Polydeuces" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2`2., "Kilometers"]], "Dione" -> 
           Association[
            "Mass" -> Quantity[
              1.095457133439213688532`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[562.5`4., "Kilometers"]], "Helene" -> 
           Association[
            "Mass" -> Quantity[
              2.5471217524197656`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[16.`2., "Kilometers"]], "Rhea" -> 
           Association[
            "Mass" -> Quantity[
              2.308441461148901741032`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[764.5`4., "Kilometers"]], "Titan" -> 
           Association[
            "Mass" -> Quantity[
              1.34520841449162446435527`4.958607314841778*^23, "Kilograms"], 
             "Radius" -> Quantity[2575.5`5., "Kilometers"]], "Hyperion" -> 
           Association[
            "Mass" -> Quantity[
              5.543735578795960565`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[133.`4., "Kilometers"]], "Iapetus" -> 
           Association[
            "Mass" -> Quantity[
              1.805459830391657427108`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[734.5`4., "Kilometers"]], "Kiviuq" -> 
           Association[
            "Mass" -> Quantity[
              3.296275209013815`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[8.`1., "Kilometers"]], "Ijiraq" -> 
           Association[
            "Mass" -> Quantity[
              1.198645530550478`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[6.`1., "Kilometers"]], "Phoebe" -> 
           Association[
            "Mass" -> Quantity[
              8.287135536843366995`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[106.6`4., "Kilometers"]], "Paaliaq" -> 
           Association[
            "Mass" -> Quantity[
              8.240688022534537`1.999565922520683*^15, "Kilograms"], "Radius" -> 
             Quantity[11.`3., "Kilometers"]], "Skathi" -> 
           Association[
            "Mass" -> Quantity[
              3.146444517695`1.9995659225206786*^14, "Kilograms"], "Radius" -> 
             Quantity[4.`1., "Kilometers"]], "Albiorix" -> 
           Association[
            "Mass" -> Quantity[
              2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[16.`2., "Kilometers"]], "S/2007 S2" -> 
           Association[
            "Mass" -> Quantity[1.5`2.*^14, "Kilograms"], "Radius" -> 
             Quantity[3.`1., "Kilometers"]], "Bebhionn" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Erriapo" -> 
           Association[
            "Mass" -> Quantity[
              7.64136525725929`1.9995659225206914*^14, "Kilograms"], "Radius" -> 
             Quantity[5.`1., "Kilometers"]], "Siarnaq" -> 
           Association[
            "Mass" -> Quantity[
              3.8955979742890535`1.999565922520683*^16, "Kilograms"], 
             "Radius" -> Quantity[20.`2., "Kilometers"]], "Skoll" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Tarvos" -> 
           Association[
            "Mass" -> Quantity[
              2.696952443738576`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[7.5`2., "Kilometers"]], "Greip" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "S/2004 S13" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Hyrrokkin" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]], "Mundilfari" -> 
           Association[
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]], "S/2006 S1" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Jarnsaxa" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Narvi" -> 
           Association[
            "Mass" -> Quantity[
              3.44610590033262`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]], "Bergelmir" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "S/2004 S17" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Suttungr" -> 
           Association[
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]], "Hati" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "S/2004 S12" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Bestla" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Farbauti" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Thrymr" -> 
           Association[
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]], "S/2007 S3" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.5`2., "Kilometers"]], "Aegir" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "S/2004 S7" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "S/2006 S3" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Kari" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Fenrir" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Surtur" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Ymir" -> 
           Association[
            "Mass" -> Quantity[
              4.944412813520729`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[9.`1., "Kilometers"]], "Loge" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Fornjot" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]]]], "Uranus" -> 
       Association[
        "Mass" -> Quantity[8.68103`6.*^25, "Kilograms"], "Radius" -> 
         Quantity[25266.`5., "Kilometers"], "Moons" -> 
         Association[
          "Cordelia" -> 
           Association[
            "Mass" -> Quantity[
              4.4949207395642923`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[20.1`3., "Kilometers"]], "Ophelia" -> 
           Association[
            "Mass" -> Quantity[
              5.3939048874771508`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[21.4`3., "Kilometers"]], "Bianca" -> 
           Association[
            "Mass" -> Quantity[
              9.2895028617662042`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[25.7`3., "Kilometers"]], "Cressida" -> 
           Association[
            "Mass" -> Quantity[
              3.43112283120074311`2.9956786262173587*^17, "Kilograms"], 
             "Radius" -> Quantity[39.8`3., "Kilometers"]], "Desdemona" -> 
           Association[
            "Mass" -> Quantity[
              1.78298522669383596`2.995678626217367*^17, "Kilograms"], 
             "Radius" -> Quantity[32.`3., "Kilometers"]], "Juliet" -> 
           Association[
            "Mass" -> Quantity[
              5.57370171705972251`2.9956786262173543*^17, "Kilograms"], 
             "Radius" -> Quantity[46.8`3., "Kilometers"]], "Portia" -> 
           Association[
            "Mass" -> Quantity[
              1.681100356597045339`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[67.6`3., "Kilometers"]], "Rosalind" -> 
           Association[
            "Mass" -> Quantity[
              2.54712175241976567`2.9956786262173587*^17, "Kilograms"], 
             "Radius" -> Quantity[36.`2., "Kilometers"]], "Cupid" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[5.`2., "Kilometers"]], "Belinda" -> 
           Association[
            "Mass" -> Quantity[
              3.56597045338767194`2.995678626217367*^17, "Kilograms"], 
             "Radius" -> Quantity[40.3`3., "Kilometers"]], "Perdita" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[10.`2., "Kilometers"]], "Puck" -> 
           Association[
            "Mass" -> Quantity[
              2.893230649366216176`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[81.`2., "Kilometers"]], "Mab" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[5.`2., "Kilometers"]], "Miranda" -> 
           Association[
            "Mass" -> Quantity[
              6.5925504180276287794`1.9995659225206872*^19, "Kilograms"], 
             "Radius" -> Quantity[235.8`4., "Kilometers"]], "Ariel" -> 
           Association[
            "Mass" -> Quantity[
              1.352971142608851997243`2.9956786262173587*^21, "Kilograms"], 
             "Radius" -> Quantity[578.9`4., "Kilometers"]], "Umbriel" -> 
           Association[
            "Mass" -> Quantity[
              1.171676006113092205807`2.9956786262173587*^21, "Kilograms"], 
             "Radius" -> Quantity[584.7`4., "Kilometers"]], "Titania" -> 
           Association[
            "Mass" -> Quantity[
              3.525516166731593299572`3.9586073148417764*^21, "Kilograms"], 
             "Radius" -> Quantity[788.9`4., "Kilometers"]], "Oberon" -> 
           Association[
            "Mass" -> Quantity[
              3.013095202421263971712`3.9586073148417764*^21, "Kilograms"], 
             "Radius" -> Quantity[761.4`4., "Kilometers"]], "Francisco" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[11.`2., "Kilometers"]], "Caliban" -> 
           Association[
            "Mass" -> Quantity[
              7.34170387462167751`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[49.`2., "Kilometers"]], "Stephano" -> 
           Association[
            "Mass" -> Quantity[
              5.99322765275239`0.9999565727231373*^15, "Kilograms"], "Radius" -> 
             Quantity[10.`2., "Kilometers"]], "Trinculo" -> 
           Association[
            "Mass" -> Quantity[
              7.49153456594048`0.9999565727231373*^14, "Kilograms"], "Radius" -> 
             Quantity[5.`1., "Kilometers"]], "Sycorax" -> 
           Association[
            "Mass" -> Quantity[
              5.378921818345269844`2.9956786262173627*^18, "Kilograms"], 
             "Radius" -> Quantity[95.`2., "Kilometers"]], "Margaret" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[10.`2., "Kilometers"]], "Prospero" -> 
           Association[
            "Mass" -> Quantity[
              2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[15.`2., "Kilometers"]], "Setebos" -> 
           Association[
            "Mass" -> Quantity[
              2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[15.`2., "Kilometers"]], "Ferdinand" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[10.`2., "Kilometers"]]]], "Neptune" -> 
       Association[
        "Mass" -> Quantity[1.0241`6.*^26, "Kilograms"], "Radius" -> 
         Quantity[24552.5`5., "Kilometers"], "Moons" -> 
         Association[
          "Naiad" -> Association[
            "Mass" -> Quantity[
              1.94779898714452669`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[33.`2., "Kilometers"]], "Thalassa" -> 
           Association[
            "Mass" -> Quantity[
              3.74576728297024363`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[41.`2., "Kilometers"]], "Despina" -> 
           Association[
            "Mass" -> Quantity[
              2.09762967846333643`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[75.`2., "Kilometers"]], "Galatea" -> 
           Association[
            "Mass" -> Quantity[
              3.745767282970243625`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[88.`2., "Kilometers"]], "Larissa" -> 
           Association[
            "Mass" -> Quantity[
              4.944412813520721585`1.999565922520683*^18, "Kilograms"], 
             "Radius" -> Quantity[97.`2., "Kilometers"]], "Proteus" -> 
           Association[
            "Mass" -> Quantity[
              5.0343112283120074311`2.995678626217367*^19, "Kilograms"], 
             "Radius" -> Quantity[210.`3., "Kilometers"]], "Triton" -> 
           Association[
            "Mass" -> Quantity[
              2.139432441341284348686`4.6989700043360205*^22, "Kilograms"], 
             "Radius" -> Quantity[1353.4`5., "Kilometers"]], "Nereid" -> 
           Association[
            "Mass" -> Quantity[
              3.0865122411674807466`2.9956786262173587*^19, "Kilograms"], 
             "Radius" -> Quantity[170.`3., "Kilometers"]], "Halimede" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[30.`2., "Kilometers"]], "Sao" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[20.`2., "Kilometers"]], "Laomedeia" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[20.`2., "Kilometers"]], "Psamathe" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[20.`2., "Kilometers"]], "Neso" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[30.`2., "Kilometers"]]]]], "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[8]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> 
        Association[{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[7]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.20000000000002], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`KeyValueShape[
                 TypeSystem`PackageScope`AtomShape[67.20000000000002], 
                 TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[
                   Association[
                   "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                    TypeSystem`PackageScope`AtomShape[75]]], 
                  DirectedInfinity[1], 2, {All, "Moons", All}]]], 2, 
               DirectedInfinity[1], {All, "Moons"}]]], 
           DirectedInfinity[1], 3, {All}]]], 8, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"]]}], TypeSystem`AnyLength]}], 8], 
     "Meta" -> Association["ID" -> 70811343586564], "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[8]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> 
        Association[{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[7]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.20000000000002], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`KeyValueShape[
                 TypeSystem`PackageScope`AtomShape[67.20000000000002], 
                 TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[
                   Association[
                   "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                    TypeSystem`PackageScope`AtomShape[75]]], 
                  DirectedInfinity[1], 2, {All, "Moons", All}]]], 2, 
               DirectedInfinity[1], {All, "Moons"}]]], 
           DirectedInfinity[1], 3, {All}]]], 8, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"]]}], TypeSystem`AnyLength]}], 8], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 8, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 8, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Mass"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Radius"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Radius"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moons", 
                  Style[
                  "Moons", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Moons"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft}, {SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Moons", All, "Mass"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Moons", All, "Radius"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Radius"}, "ColumnHeader", True], "Mouse"],
               ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mercury", 
                  Style[
                  "Mercury", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mercury"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.30104`6.*^23", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2439.7`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mercury"], 
                   Key["Moons"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Venus", 
                  Style[
                  "Venus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Venus"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.867320000000000000000001`6.*^24", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6051.85`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Venus"], 
                   Key["Moons"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Earth", 
                  Style[
                  "Earth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Earth"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.9721986`8.*^24", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "6367.4446571000000000001`8.299868708313456", "\"km\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moon", 
                  Style[
                  "Moon", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Earth"], 
                   Key["Moons"], 
                   Key["Moon"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "7.3459006322855173653772`4.995678626217362*^22", 
                   "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1737.5`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mars", 
                  Style[
                  "Mars", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mars"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.41693`6.*^23", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3385.595`4.298042852900571", "\"km\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Phobos", 
                  Style[
                  "Phobos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mars"], 
                   Key["Moons"], 
                   Key["Phobos"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "1.0724880884600402`3.9586073148417724*^16", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"11.1`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Deimos", 
                  Style[
                  "Deimos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Mars"], 
                   Key["Moons"], 
                   Key["Deimos"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "1.468340774924336`1.9995659225206786*^15", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.2`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Jupiter", 
                  Style[
                  "Jupiter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.89813`6.*^27", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"69173.`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Metis", 
                  Style[
                  "Metis", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"], 
                   Key["Moons"], 
                   Key["Metis"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Metis"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "1.19864553055047796`0.9999565727231415*^17", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Metis"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"21.5`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Metis"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Adrastea", 
                  Style[
                  "Adrastea", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"], 
                   Key["Moons"], 
                   Key["Adrastea"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "7.491534565940487`0.9999565727231415*^15", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"8.2`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["63 total \:203a ", ""], 
                  Style[
                   Superscript["63 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"], 
                   Key["Moons"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Saturn", 
                  Style[
                  "Saturn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.68319`6.*^26", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"57316.`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Tarqeq", 
                  Style[
                  "Tarqeq", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"], 
                   Key["Moons"], 
                   Key["Tarqeq"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Tarqeq"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Tarqeq"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.5`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Tarqeq"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Pan", 
                  Style[
                  "Pan", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"], 
                   Key["Moons"], 
                   Key["Pan"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Pan"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "4.944412813520729`1.9995659225206872*^15", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Pan"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"12.8`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Pan"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["61 total \:203a ", ""], 
                  Style[
                   Superscript["61 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"], 
                   Key["Moons"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Uranus", 
                  Style[
                  "Uranus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Uranus"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"8.68103`6.*^25", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"25266.`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cordelia", 
                  Style[
                  "Cordelia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Uranus"], 
                   Key["Moons"], 
                   Key["Cordelia"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Cordelia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "4.4949207395642923`1.9995659225206872*^16", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Cordelia"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"20.1`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Cordelia"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ophelia", 
                  Style[
                  "Ophelia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Uranus"], 
                   Key["Moons"], 
                   Key["Ophelia"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Ophelia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "5.3939048874771508`1.9995659225206872*^16", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Ophelia"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"21.4`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Ophelia"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["27 total \:203a ", ""], 
                  Style[
                   Superscript["27 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Uranus"], 
                   Key["Moons"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Neptune", 
                  Style[
                  "Neptune", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Neptune"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.0241`6.*^26", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"24552.5`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Naiad", 
                  Style[
                  "Naiad", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Neptune"], 
                   Key["Moons"], 
                   Key["Naiad"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Naiad"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "1.94779898714452669`1.9995659225206872*^17", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Naiad"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"33.`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Naiad"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Thalassa", 
                  Style[
                  "Thalassa", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Neptune"], 
                   Key["Moons"], 
                   Key["Thalassa"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Thalassa"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "3.74576728297024363`1.9995659225206872*^17", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Thalassa"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"41.`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Thalassa"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["13 total \:203a ", ""], 
                  Style[
                   Superscript["13 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Neptune"], 
                   Key["Moons"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{689., {311.988525390625, 323.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{689., {311.988525390625, 323.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8153222126214943`*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"f3ef3b89-bd67-4fad-ad48-f4253c3ce7d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"planets", "[", "\"\<Mercury\>\"", "]"}], "[", "\"\<Radius\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7704586752164493`*^9, 3.7704587382046885`*^9}, {
  3.770458827657284*^9, 3.7704588291293974`*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"fbac7e13-fad1-45a8-9944-32b51fee531c"],

Cell[BoxData[
 TemplateBox[{"2439.7`5.", "\"km\"", "kilometers", "\"Kilometers\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.815322222128384*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"4a222249-926d-4d7c-a054-924ac8435056"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"planets", ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", "\"\<Radius\>\"", "]"}], ">", 
     RowBox[{"Quantity", "[", 
      RowBox[{"50000", ",", "\"\<Kilometers\>\""}], "]"}]}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.770458662784315*^9, 3.7704586687748375`*^9}, {
  3.770458701128185*^9, 3.770458707491313*^9}, {3.7704587453939233`*^9, 
  3.7704587465327253`*^9}, {3.7704587914843607`*^9, 3.770458815409728*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"8b9500b9-7f52-42d2-80f9-79f788ab7ce1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Jupiter" -> 
       Association[
        "Mass" -> Quantity[1.89813`6.*^27, "Kilograms"], "Radius" -> 
         Quantity[69173.`5., "Kilometers"], "Moons" -> 
         Association[
          "Metis" -> Association[
            "Mass" -> Quantity[
              1.19864553055047796`0.9999565727231415*^17, "Kilograms"], 
             "Radius" -> Quantity[21.5`3., "Kilometers"]], "Adrastea" -> 
           Association[
            "Mass" -> Quantity[
              7.491534565940487`0.9999565727231415*^15, "Kilograms"], 
             "Radius" -> Quantity[8.2`2., "Kilometers"]], "Amalthea" -> 
           Association[
            "Mass" -> Quantity[
              2.067663540199574478`2.995678626217367*^18, "Kilograms"], 
             "Radius" -> Quantity[83.45`4., "Kilometers"]], "Thebe" -> 
           Association[
            "Mass" -> Quantity[
              1.49830691318809745`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[49.3`3., "Kilometers"]], "Io" -> 
           Association[
            "Mass" -> Quantity[
              8.9297833448203530011087`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[1821.6`5., "Kilometers"]], "Europa" -> 
           Association[
            "Mass" -> Quantity[
              4.7986859848371340385365`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[1560.8`5., "Kilometers"]], "Ganymede" -> 
           Association[
            "Mass" -> Quantity[
              1.48150100386563183602529`4.995678626217362*^23, "Kilograms"], 
             "Radius" -> Quantity[2631.2`5., "Kilometers"]], "Callisto" -> 
           Association[
            "Mass" -> Quantity[
              1.07567783404752629528633`4.995678626217362*^23, "Kilograms"], 
             "Radius" -> Quantity[2410.3`5., "Kilometers"]], "Themisto" -> 
           Association[
            "Mass" -> Quantity[
              6.89221180066526`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]], "Leda" -> 
           Association[
            "Mass" -> Quantity[
              1.0937640466273112`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[10.`2., "Kilometers"]], "Himalia" -> 
           Association[
            "Mass" -> Quantity[
              6.742381109346438525`1.999565922520683*^18, "Kilograms"], 
             "Radius" -> Quantity[85.`2., "Kilometers"]], "Lysithea" -> 
           Association[
            "Mass" -> Quantity[
              6.2928890353900092`1.999565922520683*^16, "Kilograms"], 
             "Radius" -> Quantity[18.`2., "Kilometers"]], "Elara" -> 
           Association[
            "Mass" -> Quantity[
              8.6901800964909652`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[43.`2., "Kilometers"]], "S/2000 J11" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "S/2003 J12" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "Carpo" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Euporie" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "S/2003 J3" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "S/2003 J18" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Orthosie" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "Euanthe" -> 
           Association[
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.5`2., "Kilometers"]], "Harpalyke" -> 
           Association[
            "Mass" -> Quantity[
              1.19864553055047`0.9999565727231415*^14, "Kilograms"], "Radius" -> 
             Quantity[2.2`2., "Kilometers"]], "Praxidike" -> 
           Association[
            "Mass" -> Quantity[
              4.34509004824548`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.4`2., "Kilometers"]], "Thyone" -> 
           Association[
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "S/2003 J16" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Iocaste" -> 
           Association[
            "Mass" -> 
             Quantity[1.94779898714453`1.9995659225206872*^14, "Kilograms"], 
             "Radius" -> Quantity[2.6`2., "Kilometers"]], "Mneme" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Hermippe" -> 
           Association[
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Thelxinoe" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Helike" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]], "Ananke" -> 
           Association[
            "Mass" -> Quantity[
              2.9966138263761948`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[14.`2., "Kilometers"]], "S/2003 J15" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Eurydome" -> 
           Association[
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.5`2., "Kilometers"]], "Arche" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.5`2., "Kilometers"]], "Herse" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Pasithee" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "S/2003 J10" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Chaldene" -> 
           Association[
            "Mass" -> Quantity[
              7.4915345659396`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.9`2., "Kilometers"]], "Isonoe" -> 
           Association[
            "Mass" -> Quantity[
              7.4915345659396`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.9`2., "Kilometers"]], "Erinome" -> 
           Association[
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.6`2., "Kilometers"]], "Kale" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "Aitne" -> 
           Association[
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.5`2., "Kilometers"]], "Taygete" -> 
           Association[
            "Mass" -> Quantity[
              1.6481376045069`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.5`2., "Kilometers"]], "S/2003 J9" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "Carme" -> 
           Association[
            "Mass" -> Quantity[
              1.31851008360552575`1.9995659225206786*^17, "Kilograms"], 
             "Radius" -> Quantity[23.`2., "Kilometers"]], "Sponde" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]], "Megaclite" -> 
           Association[
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.7`2., "Kilometers"]], "S/2003 J5" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]], "S/2003 J19" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "S/2003 J23" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Kalyke" -> 
           Association[
            "Mass" -> Quantity[
              1.94779898714453`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.6`2., "Kilometers"]], "Kore" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Pasiphae" -> 
           Association[
            "Mass" -> Quantity[
              2.9966138263761949`1.9995659225206786*^17, "Kilograms"], 
             "Radius" -> Quantity[30.`2., "Kilometers"]], "Eukelade" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]], "S/2003 J4" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Sinope" -> 
           Association[
            "Mass" -> Quantity[
              7.4915345659404873`1.9995659225206786*^16, "Kilograms"], 
             "Radius" -> Quantity[19.`2., "Kilometers"]], "Hegemone" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Aoede" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]], "Kallichore" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Autonoe" -> 
           Association[
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Callirrhoe" -> 
           Association[
            "Mass" -> Quantity[
              8.69018009649097`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[4.3`2., "Kilometers"]], "Cyllene" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "S/2003 J2" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]]]], "Saturn" -> 
       Association[
        "Mass" -> Quantity[5.68319`6.*^26, "Kilograms"], "Radius" -> 
         Quantity[57316.`5., "Kilometers"], "Moons" -> 
         Association[
          "Tarqeq" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]], "Pan" -> 
           Association[
            "Mass" -> Quantity[
              4.944412813520729`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[12.8`3., "Kilometers"]], "Daphnis" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.9`2., "Kilometers"]], "Atlas" -> 
           Association[
            "Mass" -> Quantity[
              2.097629678463337`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[10.`2., "Kilometers"]], "Prometheus" -> 
           Association[
            "Mass" -> Quantity[
              1.86689041383236942`3.9586073148417764*^17, "Kilograms"], 
             "Radius" -> Quantity[46.8`3., "Kilometers"]], "Pandora" -> 
           Association[
            "Mass" -> Quantity[
              1.49081537862215657`2.9956786262173587*^17, "Kilograms"], 
             "Radius" -> Quantity[40.6`3., "Kilometers"]], "Epimetheus" -> 
           Association[
            "Mass" -> Quantity[
              5.25905726529022205`2.9956786262173543*^17, "Kilograms"], 
             "Radius" -> Quantity[58.3`3., "Kilometers"]], "Janus" -> 
           Association[
            "Mass" -> Quantity[
              1.896856552096131371`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[90.4`3., "Kilometers"]], "Aegaeon" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.25`2., "Kilometers"]], "Mimas" -> 
           Association[
            "Mass" -> Quantity[
              3.7907164903658865482`3.9586073148417764*^19, "Kilograms"], 
             "Radius" -> Quantity[198.8`4., "Kilometers"]], "Methone" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.6`2., "Kilometers"]], "Anthe" -> 
           Association[
            "Mass" -> Quantity[5.`1.*^12, "Kilograms"], "Radius" -> 
             Quantity[1.`1., "Kilometers"]], "Pallene" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.6`2., "Kilometers"]], "Enceladus" -> 
           Association[
            "Mass" -> Quantity[
              1.08027928440861826137`3.9586073148417764*^20, "Kilograms"], 
             "Radius" -> Quantity[252.3`4., "Kilometers"]], "Tethys" -> 
           Association[
            "Mass" -> Quantity[
              6.17452278924814959099`4.6989700043360205*^20, "Kilograms"], 
             "Radius" -> Quantity[536.3`4., "Kilometers"]], "Calypso" -> 
           Association[
            "Mass" -> Quantity[
              3.595936591651433`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[9.5`2., "Kilometers"]], "Telesto" -> 
           Association[
            "Mass" -> Quantity[
              7.191873183302868`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[12.`2., "Kilometers"]], "Polydeuces" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2`2., "Kilometers"]], "Dione" -> 
           Association[
            "Mass" -> Quantity[
              1.095457133439213688532`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[562.5`4., "Kilometers"]], "Helene" -> 
           Association[
            "Mass" -> Quantity[
              2.5471217524197656`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[16.`2., "Kilometers"]], "Rhea" -> 
           Association[
            "Mass" -> Quantity[
              2.308441461148901741032`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[764.5`4., "Kilometers"]], "Titan" -> 
           Association[
            "Mass" -> Quantity[
              1.34520841449162446435527`4.958607314841778*^23, "Kilograms"], 
             "Radius" -> Quantity[2575.5`5., "Kilometers"]], "Hyperion" -> 
           Association[
            "Mass" -> Quantity[
              5.543735578795960565`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[133.`4., "Kilometers"]], "Iapetus" -> 
           Association[
            "Mass" -> Quantity[
              1.805459830391657427108`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[734.5`4., "Kilometers"]], "Kiviuq" -> 
           Association[
            "Mass" -> Quantity[
              3.296275209013815`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[8.`1., "Kilometers"]], "Ijiraq" -> 
           Association[
            "Mass" -> Quantity[
              1.198645530550478`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[6.`1., "Kilometers"]], "Phoebe" -> 
           Association[
            "Mass" -> Quantity[
              8.287135536843366995`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[106.6`4., "Kilometers"]], "Paaliaq" -> 
           Association[
            "Mass" -> Quantity[
              8.240688022534537`1.999565922520683*^15, "Kilograms"], "Radius" -> 
             Quantity[11.`3., "Kilometers"]], "Skathi" -> 
           Association[
            "Mass" -> Quantity[
              3.146444517695`1.9995659225206786*^14, "Kilograms"], "Radius" -> 
             Quantity[4.`1., "Kilometers"]], "Albiorix" -> 
           Association[
            "Mass" -> Quantity[
              2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[16.`2., "Kilometers"]], "S/2007 S2" -> 
           Association[
            "Mass" -> Quantity[1.5`2.*^14, "Kilograms"], "Radius" -> 
             Quantity[3.`1., "Kilometers"]], "Bebhionn" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Erriapo" -> 
           Association[
            "Mass" -> Quantity[
              7.64136525725929`1.9995659225206914*^14, "Kilograms"], "Radius" -> 
             Quantity[5.`1., "Kilometers"]], "Siarnaq" -> 
           Association[
            "Mass" -> 
             Quantity[3.8955979742890535`1.999565922520683*^16, "Kilograms"], 
             "Radius" -> Quantity[20.`2., "Kilometers"]], "Skoll" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Tarvos" -> 
           Association[
            "Mass" -> Quantity[
              2.696952443738576`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[7.5`2., "Kilometers"]], "Greip" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "S/2004 S13" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Hyrrokkin" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]], "Mundilfari" -> 
           Association[
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]], "S/2006 S1" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Jarnsaxa" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Narvi" -> 
           Association[
            "Mass" -> Quantity[
              3.44610590033262`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]], "Bergelmir" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "S/2004 S17" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Suttungr" -> 
           Association[
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]], "Hati" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "S/2004 S12" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Bestla" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Farbauti" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Thrymr" -> 
           Association[
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]], "S/2007 S3" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.5`2., "Kilometers"]], "Aegir" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "S/2004 S7" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "S/2006 S3" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Kari" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Fenrir" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]], "Surtur" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Ymir" -> 
           Association[
            "Mass" -> Quantity[
              4.944412813520729`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[9.`1., "Kilometers"]], "Loge" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]], "Fornjot" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]]]]], "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[10]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> 
        Association[{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[9]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.20000000000002], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`KeyValueShape[
                 TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                 TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[
                   Association[
                   "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                    TypeSystem`PackageScope`AtomShape[75]]], 
                  DirectedInfinity[1], 2, {All, "Moons", All}]]], 10, 
               DirectedInfinity[1], {All, "Moons"}]]], 
           DirectedInfinity[1], 3, {All}]]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"]]}], TypeSystem`AnyLength]}], 2], 
     "Meta" -> Association["ID" -> 70819933521177], "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[10]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> 
        Association[{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[9]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.20000000000002], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`KeyValueShape[
                 TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                 TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[
                   Association[
                   "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                    TypeSystem`PackageScope`AtomShape[75]]], 
                  DirectedInfinity[1], 2, {All, "Moons", All}]]], 10, 
               DirectedInfinity[1], {All, "Moons"}]]], 
           DirectedInfinity[1], 3, {All}]]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"]]}], TypeSystem`AnyLength]}], 2], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 2, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Mass"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Radius"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Radius"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moons", 
                  Style[
                  "Moons", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Moons"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft}, {SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Moons", All, "Mass"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Moons", All, "Radius"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Radius"}, "ColumnHeader", True], "Mouse"],
               ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Jupiter", 
                  Style[
                  "Jupiter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.89813`6.*^27", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"69173.`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Metis", 
                  Style[
                  "Metis", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"], 
                   Key["Moons"], 
                   Key["Metis"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Metis"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "1.19864553055047796`0.9999565727231415*^17", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Metis"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"21.5`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Metis"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Adrastea", 
                  Style[
                  "Adrastea", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"], 
                   Key["Moons"], 
                   Key["Adrastea"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "7.491534565940487`0.9999565727231415*^15", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"8.2`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Amalthea", 
                  Style[
                  "Amalthea", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"], 
                   Key["Moons"], 
                   Key["Amalthea"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Amalthea"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "2.067663540199574478`2.995678626217367*^18", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Amalthea"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"83.45`4", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Amalthea"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Thebe", 
                  Style[
                  "Thebe", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"], 
                   Key["Moons"], 
                   Key["Thebe"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Thebe"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "1.49830691318809745`1.9995659225206872*^18", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Thebe"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"49.3`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Thebe"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Io", 
                  Style[
                  "Io", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"], 
                   Key["Moons"], 
                   Key["Io"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Io"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "8.9297833448203530011087`4.995678626217362*^22", 
                   "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Io"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1821.6`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Io"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Europa", 
                  Style[
                  "Europa", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"], 
                   Key["Moons"], 
                   Key["Europa"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Europa"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "4.7986859848371340385365`4.995678626217362*^22", 
                   "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Europa"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1560.8`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Europa"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ganymede", 
                  Style[
                  "Ganymede", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"], 
                   Key["Moons"], 
                   Key["Ganymede"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Ganymede"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "1.48150100386563183602529`4.995678626217362*^23", 
                   "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Ganymede"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2631.2`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Ganymede"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Callisto", 
                  Style[
                  "Callisto", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"], 
                   Key["Moons"], 
                   Key["Callisto"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Callisto"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "1.07567783404752629528633`4.995678626217362*^23", 
                   "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Callisto"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2410.3`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Callisto"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Themisto", 
                  Style[
                  "Themisto", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"], 
                   Key["Moons"], 
                   Key["Themisto"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Themisto"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "6.89221180066526`1.9995659225206872*^14", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Themisto"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Themisto"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Leda", 
                  Style[
                  "Leda", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"], 
                   Key["Moons"], 
                   Key["Leda"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Leda"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "1.0937640466273112`1.9995659225206872*^16", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Leda"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"10.`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Leda"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["63 total \:203a ", ""], 
                  Style[
                   Superscript["63 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Jupiter"], 
                   Key["Moons"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Saturn", 
                  Style[
                  "Saturn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.68319`6.*^26", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"57316.`5", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Tarqeq", 
                  Style[
                  "Tarqeq", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"], 
                   Key["Moons"], 
                   Key["Tarqeq"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Tarqeq"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Tarqeq"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.5`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Tarqeq"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Pan", 
                  Style[
                  "Pan", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"], 
                   Key["Moons"], 
                   Key["Pan"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Pan"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "4.944412813520729`1.9995659225206872*^15", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Pan"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"12.8`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Pan"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Daphnis", 
                  Style[
                  "Daphnis", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"], 
                   Key["Moons"], 
                   Key["Daphnis"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Daphnis"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Daphnis"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.9`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Daphnis"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Atlas", 
                  Style[
                  "Atlas", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"], 
                   Key["Moons"], 
                   Key["Atlas"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Atlas"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "2.097629678463337`1.9995659225206786*^15", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Atlas"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"10.`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Atlas"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Prometheus", 
                  Style[
                  "Prometheus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"], 
                   Key["Moons"], 
                   Key["Prometheus"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Prometheus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "1.86689041383236942`3.9586073148417764*^17", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Prometheus"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"46.8`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Prometheus"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Pandora", 
                  Style[
                  "Pandora", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"], 
                   Key["Moons"], 
                   Key["Pandora"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Pandora"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "1.49081537862215657`2.9956786262173587*^17", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Pandora"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"40.6`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Pandora"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Epimetheus", 
                  Style[
                  "Epimetheus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"], 
                   Key["Moons"], 
                   Key["Epimetheus"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Epimetheus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "5.25905726529022205`2.9956786262173543*^17", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Epimetheus"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"58.3`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Epimetheus"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Janus", 
                  Style[
                  "Janus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"], 
                   Key["Moons"], 
                   Key["Janus"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Janus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "1.896856552096131371`3.9586073148417764*^18", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Janus"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"90.4`3", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Janus"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Aegaeon", 
                  Style[
                  "Aegaeon", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"], 
                   Key["Moons"], 
                   Key["Aegaeon"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegaeon"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegaeon"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.25`2", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegaeon"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mimas", 
                  Style[
                  "Mimas", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"], 
                   Key["Moons"], 
                   Key["Mimas"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Mimas"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "3.7907164903658865482`3.9586073148417764*^19", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Mimas"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"198.8`4", "\"km\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Mimas"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["61 total \:203a ", ""], 
                  Style[
                   Superscript["61 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Saturn"], 
                   Key["Moons"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{672., {401.988525390625, 413.011474609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{672., {401.988525390625, 413.011474609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.815322232958427*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"f8c0c586-d46f-401d-abe6-c93834d3f31b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7885382527381277`*^9, 3.7885382606669483`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"67a28b4d-14a5-4f6b-9ec5-616cf7e4da12"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"8ce0bfef-5305-4bbb-9aba-b02bdc90e948"],

Cell[CellGroupData[{

Cell["\:603b\:7ed3", "Section",
 CellChangeTimes->{
  3.720192656070273*^9, {3.7810240100728927`*^9, 3.7810240126290507`*^9}, {
   3.7893862654290915`*^9, 3.7893862664503593`*^9}, {3.7900855164112377`*^9, 
   3.7900855192755375`*^9}},ExpressionUUID->"e9f252ae-5311-49fa-bf59-\
152bc4939ea0"],

Cell[CellGroupData[{

Cell["\<\
Wolfram \:8bed\:8a00\:5177\:6709\:8bb8\:591a\:539f\:5b50\:ff0c\:5176\:4e2d\
\:4e00\:4e9b\:662f\:ff1aInteger\:3001Real\:3001String\:3001Rational \:548c \
Symbol. \:539f\:5b50\:53ef\:4ee5\:7ec4\:5408\:5f62\:6210\:590d\:5408\:8868\
\:8fbe\:5f0f.\
\>", "Item",
 CellChangeTimes->{{3.7888934778640285`*^9, 3.788893499422395*^9}, 
   3.7893862976400824`*^9, {3.789386769176277*^9, 3.789386773658287*^9}, 
   3.78996676101775*^9, {3.789992977289456*^9, 3.789992978562295*^9}, {
   3.7900015483519497`*^9, 3.7900015488330107`*^9}, {3.790085539271841*^9, 
   3.7900856243949933`*^9}},ExpressionUUID->"8c1d4303-030f-4860-a362-\
429ae4b71181"],

Cell[TextData[{
 "Wolfram \:8bed\:8a00\:4e2d\:7684\:4e00\:5207\:90fd\:662f\:8868\:8fbe\:5f0f. \
\:8868\:8fbe\:5f0f\:5177\:6709\:5e38\:7528\:7684\:683c\:5f0f ",
 Cell[BoxData[
  RowBox[{"f", "[", 
   RowBox[{"e1", ",", " ", "e2", ",", " ", "e3", ",", "..."}], "]"}]], 
  "Input",ExpressionUUID->"b36135ce-d224-4634-b885-6073b6545d92"],
 "\:ff0c\:5176\:4e2d ",
 Cell[BoxData[
 "e1"], "Input",ExpressionUUID->"f980782b-0837-4f81-9613-8f003a6b756e"],
 "\:3001",
 Cell[BoxData[
 "e2"], "Input",ExpressionUUID->"76f2c6f1-82ff-4fb1-a172-0a8ac18801a5"],
 " \:7b49\:53ef\:4ee5\:662f\:539f\:5b50\:5bf9\:8c61\:6216\:8868\:8fbe\:5f0f\
\:81ea\:8eab."
}], "Item",
 CellChangeTimes->{{3.7888934778640285`*^9, 3.788893499422395*^9}, 
   3.7893862976400824`*^9, 3.7893867796812105`*^9, {3.789966798031312*^9, 
   3.7899668229919133`*^9}, {3.790001561652313*^9, 3.790001592641068*^9}, {
   3.7900856409221945`*^9, 
   3.7900857108386183`*^9}},ExpressionUUID->"9cf5a9d1-aafb-45d4-9015-\
c9c39a2c6505"],

Cell["\:7528\:4e8e\:68c0\:67e5\:8868\:8fbe\:5f0f\:89e3\:5256\:7ed3\:6784\:7684\
\:51fd\:6570\:5305\:62ec Head\:3001Length\:3001Part\:3001 Level\:3001 Depth \
\:548c LeafCount.", "Item",
 CellChangeTimes->{{3.7888934778640285`*^9, 3.788893499422395*^9}, 
   3.7893862976400824`*^9, 3.7893867955746374`*^9, {3.789993004180212*^9, 
   3.789993017523563*^9}, 3.790001600362555*^9, {3.7900857330660095`*^9, 
   3.7900857883683577`*^9}},ExpressionUUID->"238018a5-9ecd-49e2-a58f-\
5cd5ddcecc66"],

Cell["Set \:7528\:4e8e\:76f4\:63a5\:8d4b\:503c. SetDelayed \:7528\:4e8e\:5ef6\
\:8fdf\:8d4b\:503c.", "Item",
 CellChangeTimes->{{3.7888934778640285`*^9, 3.788893499422395*^9}, 
   3.7893862976400824`*^9, 3.7893868058342285`*^9, {3.790085795771881*^9, 
   3.7900858217287197`*^9}},ExpressionUUID->"be73bbbe-cdc7-4648-bbe9-\
738e976f9100"],

Cell[TextData[{
 StyleBox[ButtonBox["Table",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Table"],
  FontWeight->"Bold"],
 "\:3001Map\:3001Nest \:548c Fold \:63d0\:4f9b\:975e\:4f20\:7edf\:7684\:8fed\
\:4ee3\:65b9\:5f0f."
}], "Item",
 CellChangeTimes->{{3.7888934778640285`*^9, 3.788893499422395*^9}, 
   3.7893862976400824`*^9, 3.7893868118261456`*^9, {3.79000161096841*^9, 
   3.7900016135151663`*^9}, 3.790003538264965*^9, {3.790085829948228*^9, 
   3.79008587179171*^9}},ExpressionUUID->"1435d81f-1458-4a77-857e-\
6cc09f5b5ef9"],

Cell["Wolfram \:8bed\:8a00\:4e2d\:7684\:5217\:8868\:53ef\:4ee5\:5305\:542b\
\:4efb\:4f55\:8868\:8fbe\:5f0f\:7c7b\:578b.", "Item",
 CellChangeTimes->{{3.7888934778640285`*^9, 3.788893499422395*^9}, 
   3.7893862976400824`*^9, 3.789386816916521*^9, {3.7900016231996737`*^9, 
   3.7900016295821342`*^9}, {3.7900858778993373`*^9, 
   3.79008590147465*^9}},ExpressionUUID->"d835faaf-ff53-4f37-bd5f-\
0fac265f8475"],

Cell["Association \:4ee5 \:952e\[RightArrow]\:503c\:5bf9\:7684\:5f62\:5f0f\
\:8868\:793a\:6570\:636e.", "Item",
 CellChangeTimes->{{3.7888934778640285`*^9, 3.788893499422395*^9}, 
   3.7893862976400824`*^9, 3.7893868213646216`*^9, {3.790001634450617*^9, 
   3.790001650124729*^9}, {3.790085914620056*^9, 
   3.790085948021612*^9}},ExpressionUUID->"9e27967e-a7bc-44ce-87bd-\
ae80add7d814"],

Cell["\:64cd\:4f5c\:5217\:8868\:548c\:5173\:8054\:6709\:5404\:79cd\:51fd\:6570\
.", "Item",
 CellChangeTimes->{{3.7888934778640285`*^9, 3.788893499422395*^9}, 
   3.7893862976400824`*^9, {3.7893868283628883`*^9, 3.789386835098899*^9}, {
   3.790001652374585*^9, 3.7900016609207363`*^9}, {3.7900859611104383`*^9, 
   3.7900859785569735`*^9}},ExpressionUUID->"e35bbb43-dd6f-410b-993a-\
6724e99acef6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"SlideShow",
WindowSize->{Full, Full},
WindowMargins->{{0, Automatic}, {0, Automatic}},
WindowTitle->"\:6a21\:5757 \
1\:ff1a\:57fa\:672c\:6982\:5ff5\:4e0e\:51fd\:6570",
TaggingRules->{
 "WolframUNotebook" -> True, "SlideshowSettings" -> {"Toolbar" -> True}},
Magnification:>1.25 Inherited,
ButtonBoxOptions->{BaseStyle->None},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) \
(2020\:5e747\:670815\:65e5)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WolframULogo", StyleDefinitions -> StyleData["Title"]], 
          CellMargins -> {{120, 0}, {0, 130}}, CellGroupingRules -> 
          "GraphicsGrouping", PageBreakWithin -> False, GeneratedCell -> True,
           CellAutoOverwrite -> True, ShowCellLabel -> False, 
          CellFrameMargins -> {{0, 0}, {0, 0}}, DefaultFormatType -> 
          DefaultOutputFormatType, LanguageCategory -> "NaturalLanguage", 
          FormatType -> StandardForm, ShowStringCharacters -> False, 
          FrontFaceColor -> GrayLevel[0], FrontFaceOpacity -> 1, 
          GraphicsColor -> GrayLevel[0], PointSize -> Absolute[3], Thickness -> 
          Medium, Opacity -> 1, DrawEdges -> False, StyleMenuListing -> None, 
          FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Plain", 
          FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`BackFaceColor -> 
          GrayLevel[0], $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData[
          "WolframULogo", "SlideShow", StyleDefinitions -> 
           StyleData["WolframULogo"]], 
          CellFrameLabels -> {{None, None}, {None, None}}], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Working", StyleDefinitions -> 
           StyleData["WolframULogo", "SlideShow"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellMargins -> {{120, 0}, {0, 40}}, 
             FontFamily -> "Source Sans Pro", FontSize -> 81, FontWeight -> 
             "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[
              0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
            Cell[
             StyleData["Title", "SlideShow"], 
             CellMargins -> {{120, 0}, {0, 40}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 81, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[
              0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
            Cell[
             StyleData[
             "Title", "Slideshow Working", StyleDefinitions -> 
              StyleData["Title", "SlideShow"]]], 
            Cell[
             StyleData[
             "Title", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Title", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], CellMargins -> {{120, 0}, {0, 12}}, 
             FontFamily -> "Source Sans Pro", FontSize -> 40, FontWeight -> 
             "Regular", FontSlant -> "Plain", 
             FontVariations -> {"CapsType" -> "AllCaps"}, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Subtitle", "SlideShow"], 
             CellMargins -> {{120, 0}, {0, 12}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 40, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             FontVariations -> {"CapsType" -> "AllCaps"}, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subtitle", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subtitle", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TitleGraphic"], CellMargins -> {{120, 0}, {0, 25}}, 
             CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> 
             False, GeneratedCell -> True, CellAutoOverwrite -> True, 
             ShowCellLabel -> False, DefaultFormatType -> 
             DefaultOutputFormatType, LanguageCategory -> "NaturalLanguage", 
             FormatType -> StandardForm, ShowStringCharacters -> False, 
             FrontFaceColor -> GrayLevel[0], FrontFaceOpacity -> 1, 
             GraphicsColor -> GrayLevel[0], PointSize -> Absolute[3], 
             Thickness -> Medium, Opacity -> 1, DrawEdges -> False, 
             StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 10, 
             FontWeight -> "Plain", FontColor -> GrayLevel[0], FontOpacity -> 
             1, $CellContext`BackFaceColor -> 
             GrayLevel[0], $CellContext`StripStyleOnPaste -> 
             False, $CellContext`BackFaceOpacity -> 1], 
            Cell[
             StyleData["TitleGraphic", "SlideShow"], 
             CellMargins -> {{120, 0}, {0, 25}}, CellGroupingRules -> 
             "GraphicsGrouping", PageBreakWithin -> False, GeneratedCell -> 
             True, CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, LanguageCategory -> 
             "NaturalLanguage", FormatType -> StandardForm, 
             ShowStringCharacters -> False, FrontFaceColor -> GrayLevel[0], 
             FrontFaceOpacity -> 1, GraphicsColor -> GrayLevel[0], PointSize -> 
             Absolute[3], Thickness -> Medium, Opacity -> 1, DrawEdges -> 
             False, StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 
             10, FontWeight -> "Plain", FontColor -> GrayLevel[0], 
             FontOpacity -> 1, $CellContext`BackFaceColor -> 
             GrayLevel[0], $CellContext`StripStyleOnPaste -> 
             False, $CellContext`BackFaceOpacity -> 1], 
            Cell[
             StyleData[
             "TitleGraphic", "Slideshow Working", StyleDefinitions -> 
              StyleData["TitelGraphic", "SlideShow"]]], 
            Cell[
             StyleData[
             "TitleGraphic", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["WolframULogo", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "TitleGraphic", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["WolframULogo", "Slideshow Working"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Open]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, 
             ShowGroupOpener -> "Inline", CellMargins -> {{120, 0}, {0, 50}}, 
             FontFamily -> "Source Sans Pro", FontSize -> 70, FontWeight -> 
             "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Section", "SlideShow"], CellFrame -> {{0, 0}, {0, 0}},
              ShowGroupOpener -> "Inline", CellMargins -> {{120, 0}, {0, 50}},
              LineSpacing -> {1, 2}, FontFamily -> "Source Sans Pro", 
             FontSize -> 70, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData[
             "Section", "Slideshow Working", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], ShowGroupOpener -> "Inline", 
             CellMargins -> {{120, 0}, {0, 40}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 40, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
            Cell[
             StyleData["Subsection", "SlideShow"], ShowGroupOpener -> 
             "Inline", CellMargins -> {{120, 0}, {0, 40}}, 
             LineSpacing -> {1, 2}, FontFamily -> "Source Sans Pro", FontSize -> 
             40, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], ShowGroupOpener -> "Inline", 
             CellMargins -> {{120, 0}, {0, 40}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 30, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Subsubsection", "SlideShow"], ShowGroupOpener -> 
             "Inline", CellMargins -> {{120, 0}, {0, 40}}, 
             LineSpacing -> {1, 2}, FontFamily -> "Source Sans Pro", FontSize -> 
             30, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsubsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]]}, Open]]}, 
        Open]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for Body Content", "Section", 
       CellChangeTimes -> {{3.727532504641029*^9, 3.727532505736285*^9}}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], CellMargins -> {{120, 0}, {0, 15}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> 
          "Text", MenuSortingValue -> 1400, MenuCommandKey :> "7", FontFamily -> 
          "Source Sans Pro", FontSize -> 15, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["Text", "SlideShow"], CellMargins -> {{120, 0}, {0, 15}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> 
          "Text", MenuSortingValue -> 1400, MenuCommandKey :> "7", FontFamily -> 
          "Source Sans Pro", FontSize -> 22, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData[
          "Text", "Slideshow Working", StyleDefinitions -> 
           StyleData["Text", "SlideShow"]]], 
         Cell[
          StyleData[
          "Text", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Text", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CodeText"], CellMargins -> {{120, 0}, {0, 15}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, FontFamily -> 
          "Source Sans Pro", FontSize -> 15, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["CodeText", "SlideShow"], 
          CellMargins -> {{120, 0}, {0, 15}}, LineSpacing -> {1, 3}, 
          TabSpacings -> {2.5}, FontFamily -> "Source Sans Pro", FontSize -> 
          22, FontWeight -> "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData[
          "CodeText", "Slideshow Working", StyleDefinitions -> 
           StyleData["CodeText", "SlideShow"]]], 
         Cell[
          StyleData[
          "CodeText", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["CodeText", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "CodeText", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["CodeText", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Note"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> True, LineSpacing -> {1, 3}, CounterIncrements -> 
          "Note", MenuSortingValue -> 8, FontFamily -> "Source Sans Pro", 
          FontSize -> 12, FontSlant -> "Italic", Background -> 
          GrayLevel[0.85]], 
         Cell[
          StyleData["Note", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> False, 
          HyphenationOptions -> {"HyphenationCharacter" -> "-"}, 
          ParagraphSpacing -> {0, 6}, ParagraphIndent -> -10, 
          StyleMenuListing -> None, FontSize -> 18], 
         Cell[
          StyleData[
          "Note", "Slideshow Working", StyleDefinitions -> 
           StyleData["Note"]]], 
         Cell[
          StyleData[
          "Note", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Note", "SlideShow"]]], 
         Cell[
          StyleData[
          "Note", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Note", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.42745098039215684`, 0.]], 
          CellMargins -> {{140, 0}, {0, 15}}], 
         Cell[
          StyleData["Item", "SlideShow"], CellMargins -> {{140, 0}, {0, 15}}, 
          CellFrameLabelMargins -> 10, FontSize -> 22], 
         Cell[
          StyleData[
          "Item", "Slideshow Working", StyleDefinitions -> 
           StyleData["Item", "SlideShow"]]], 
         Cell[
          StyleData[
          "Item", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Item", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemParagraph"], CellMargins -> {{140, 0}, {0, 15}}, 
          StyleKeyMapping -> {"Tab" -> "SubitemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          DefaultNewCellStyle -> "Item", MenuSortingValue -> 1600, FontFamily -> 
          Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 14, 
          FontColor -> Dynamic[
            FrontEnd`CurrentValue[{StyleHints, "ColorSet", "Text1"}], 
            None], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ItemParagraph", "SlideShow"], ShowGroupOpener -> False, 
          CellMargins -> {{140, 0}, {0, 15}}, FontSize -> 22], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["ItemParagraph", "Printout"], 
          CellMargins -> {{140, Inherited}, {Inherited, 0.5 Inherited}}]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subitem"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
          CellMargins -> {{160, 0}, {0, 15}}], 
         Cell[
          StyleData["Subitem", "SlideShow"], 
          CellMargins -> {{160, 0}, {0, 15}}, CellFrameLabelMargins -> 10, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Working", StyleDefinitions -> 
           StyleData["Subitem", "SlideShow"]]], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Subitem", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemParagraph"], CellMargins -> {{160, 0}, {0, 15}}, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemParagraph", "Backspace" -> 
            "ItemParagraph", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Subitem", 
          MenuSortingValue -> 1610, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 13.5,
           FontColor -> Dynamic[
            
            CurrentValue[{
             StyleHints, "ColorSet", 
              "Text1"}]], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["SubitemParagraph", "SlideShow"], 
          CellMargins -> {{160, 0}, {0, 15}}, FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemParagraph", "Printout"], 
          CellMargins -> {{160, Inherited}, {Inherited, 0.1 Inherited}}]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{145, 0}, {0, 15}}, 
          StyleKeyMapping -> {"Tab" -> "SubitemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "ItemNumbered", 
          CounterAssignments -> {{"SubitemNumbered", 0}, {
            "SubsubitemNumbered", 0}}, MenuSortingValue -> 1630, FontFamily -> "\
Source Sans Pro", FontSize -> 15, $CellContext`ReturnCreatesNewCell -> True], 
         
         Cell[
          StyleData["ItemNumbered", "SlideShow"], 
          CellMargins -> {{145, 0}, {0, 15}}, CellFrameLabelMargins -> 6, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], ".", 
              CounterBox["SubitemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{180, 0}, {0, 15}}, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemNumbered", "Backspace" -> 
            "ItemNumbered", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", 
          CounterIncrements -> "SubitemNumbered", 
          CounterAssignments -> {{"SubsubitemNumbered", 0}}, MenuSortingValue -> 
          1640, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 
          13.5, $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["SubitemNumbered", "SlideShow"], 
          CellMargins -> {{180, 0}, {0, 15}}, CellFrameLabelMargins -> 6, 
          CellChangeTimes -> {{3.772393378081081*^9, 3.772393382879437*^9}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemNumbered", "Printout"], 
          CellMargins -> {{180, Inherited}, {Inherited, Inherited}}]}, Open]], 
      Cell[
       StyleData["Graphics"], CellMargins -> {{120, Inherited}, {15, 15}}, 
       CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> False, 
       GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
       False, DefaultFormatType -> DefaultOutputFormatType, ContextMenu -> 
       FEPrivate`FrontEndResource["ContextMenus", "Graphics"], 
       AutoStyleOptions -> {"HighlightMisspelledWords" -> False}, 
       LanguageCategory -> "NaturalLanguage", FormatType -> StandardForm, 
       ShowStringCharacters -> False, NumberMarks -> False, CounterIncrements -> 
       "Graphics", ImageMargins -> {{43, Inherited}, {Inherited, 0}}, 
       Arrowheads -> 0.04, Dashing -> None, CapForm -> "Square", 
       JoinForm -> {"Miter", 3.25}, LineColor -> GrayLevel[0], LineOpacity -> 
       1, EdgeColor -> GrayLevel[0], EdgeOpacity -> 1, EdgeThickness -> 
       Medium, EdgeDashing -> None, EdgeCapForm -> "Square", 
       EdgeJoinForm -> {"Miter", 3.25}, FrontFaceColor -> GrayLevel[0], 
       FrontFaceOpacity -> 1, GraphicsColor -> GrayLevel[0], PointSize -> 
       Absolute[3], Thickness -> Medium, Opacity -> 1, DrawEdges -> False, 
       StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 10, 
       FontWeight -> "Plain", FontColor -> GrayLevel[0], FontOpacity -> 
       1, $CellContext`BackFaceColor -> 
       GrayLevel[0], $CellContext`StripStyleOnPaste -> 
       False, $CellContext`BackFaceOpacity -> 1], 
      Cell[
       StyleData["Hyperlink"], FontColor -> 
       RGBColor[0.269993, 0.308507, 0.6]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["KeyEvent"], CellFrame -> {{1, 1}, {1, 1}}, 
          CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> 
          GrayLevel[0.8], FontFamily -> "Source Sans Pro", FontColor -> 
          GrayLevel[0.360784], Background -> GrayLevel[0.964706]], 
         Cell[
          StyleData["KeyEvent", "SlideShow"]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Working", StyleDefinitions -> 
           StyleData["KeyEvent", "SlideShow"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]]}, Open]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellMargins -> {{120, 10}, {5, 20}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          FontSize -> 13], 
         Cell[
          StyleData["Input", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 20}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Input", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "Input", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Input", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExperimentalInput", StyleDefinitions -> StyleData["Input"]], 
          CellFrame -> True, CellMargins -> {{120, 10}, {5, 20}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          CellFrameColor -> 
          RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               InterpretationBox[
                Cell[
                 BoxData[
                  RotationBox[
                  "Experimental", BoxRotation -> 1.5707963267948966`]], 
                 "Text", LineColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FrontFaceColor -> 
                 RGBColor[
                  1., 0.592156862745098, 
                   0.10196078431372549`], $CellContext`BackFaceColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 GraphicsColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FontSize -> 10, FontColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
                TextCell[
                 Rotate["Experimental", 90 Degree], "Text", 10, 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`]]]]], 
             None}, {None, None}}, FontSize -> 13], 
         Cell[
          StyleData["ExperimentalInput", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 20}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{120, 10}, {5, 10}}, 
          FontSize -> 13], 
         Cell[
          StyleData["InputOnly", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 10}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Working", StyleDefinitions -> 
           StyleData["InputOnly", "SlideShow"]]], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "InputOnly", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"], CellMargins -> {{120, 10}, {5, 10}}], 
         Cell[
          StyleData["Code", "SlideShow"], CellMargins -> {{120, 10}, {5, 10}},
           LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Code", "Slideshow Working", StyleDefinitions -> 
           StyleData["Code", "SlideShow"]]], 
         Cell[
          StyleData[
          "Code", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Code", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{120, 10}, {5, 10}}, FontSize -> 
          13], 
         Cell[
          StyleData["Output", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 10}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Output", "Slideshow Working", StyleDefinitions -> 
           StyleData["Output", "SlideShow"]]], 
         Cell[
          StyleData[
          "Output", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Output", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]]}, Open]], 
      Cell[
       StyleData["Separator"], CellFrame -> {{False, False}, {1.5, False}}, 
       CellMargins -> {{120, 0}, {0, 0}}, CellFrameColor -> GrayLevel[0.8], 
       MenuSortingValue -> 10000]}, Open]]}, Visible -> False, 
  FrontEndVersion -> 
  "12.1 for Mac OS X x86 (64-bit) (2020\:5e747\:670815\:65e5)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"837c7501-e632-4172-bbc1-c71551d7b08c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[656, 23, 136, 2, 5, "SlideShowNavigationBar",ExpressionUUID->"ae861ed8-5fa1-4088-84fd-2651cc7b368a",
   CellTags->"SlideShowHeader"],
  Cell[373893, 6164, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"aa921f28-2b3d-42b3-8af8-9817ced222ea",
   CellTags->"SlideShowHeader"],
  Cell[383103, 6380, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"50f12808-627a-4632-b6f2-477afd1ae009",
   CellTags->"SlideShowHeader"],
  Cell[383845, 6404, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"eb5308a7-8036-4f76-8eed-61cf47d6c4f2",
   CellTags->"SlideShowHeader"],
  Cell[402768, 6871, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"f7916716-3628-47aa-9ac9-667ea67493e1",
   CellTags->"SlideShowHeader"],
  Cell[413134, 7183, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"33bb0245-6a18-4db3-b514-865dcb3b3610",
   CellTags->"SlideShowHeader"],
  Cell[528099, 9591, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"8ad9ba7d-b5c9-4e75-a22c-0faf1105a31e",
   CellTags->"SlideShowHeader"],
  Cell[536821, 9851, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"2aac5a56-ba5c-49cc-a77e-718c21d2d47c",
   CellTags->"SlideShowHeader"],
  Cell[564091, 10629, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"1baad451-2b54-4fbd-acd5-02a678b87d0d",
   CellTags->"SlideShowHeader"],
  Cell[582333, 11161, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"ccfdacd5-fc4c-440a-be14-8c7c64770803",
   CellTags->"SlideShowHeader"],
  Cell[603127, 11770, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"be17a351-28a5-43f3-bc1b-c16634a6aa50",
   CellTags->"SlideShowHeader"],
  Cell[625021, 12410, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"8ac72d45-e668-403d-b24b-a4f59ed09b04",
   CellTags->"SlideShowHeader"],
  Cell[640288, 12856, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"855b8b1b-7b2c-4c48-9abe-67511c1ddc9f",
   CellTags->"SlideShowHeader"],
  Cell[641124, 12882, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"9bce4c70-54b3-4b8b-914e-68969a89392e",
   CellTags->"SlideShowHeader"],
  Cell[672251, 13737, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"6d5ab0f1-edee-43cb-a3b9-1ae558c521e1",
   CellTags->"SlideShowHeader"],
  Cell[688966, 14232, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"5f0e4d2a-cfa2-4e1b-aa08-1971ff8a6f78",
   CellTags->"SlideShowHeader"],
  Cell[689779, 14257, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"be2eb8f8-3ad4-480d-89b0-e459abe844f1",
   CellTags->"SlideShowHeader"],
  Cell[709146, 14890, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"8412563e-41cf-4ade-86fe-66d568ed668b",
   CellTags->"SlideShowHeader"],
  Cell[717689, 15169, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"ba4b2765-5cc6-41fb-9cc4-61a051601f50",
   CellTags->"SlideShowHeader"],
  Cell[718444, 15193, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"80ce7689-f042-4dab-aaed-432bdf774165",
   CellTags->"SlideShowHeader"],
  Cell[729425, 15495, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"248890c5-9be1-4217-87f8-94e5801b025c",
   CellTags->"SlideShowHeader"],
  Cell[744113, 15850, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"e12ae8a2-55dc-43d4-ad70-82d0a2dfa9bf",
   CellTags->"SlideShowHeader"],
  Cell[755354, 16207, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"71b9bc26-144a-4051-9c72-f2ff0b60b204",
   CellTags->"SlideShowHeader"],
  Cell[931568, 19216, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"fbbb04b9-eb53-4461-8f37-c90351ac142b",
   CellTags->"SlideShowHeader"],
  Cell[1276322, 25053, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"52572e46-8bc8-4c6d-a1ea-4057fe37a298",
   CellTags->"SlideShowHeader"],
  Cell[1286128, 25356, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"85cc6e0b-7b04-477d-a164-f1b1a3cb95f1",
   CellTags->"SlideShowHeader"],
  Cell[1320331, 26111, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"ebda8189-4da7-451d-aef7-74a6cf367e90",
   CellTags->"SlideShowHeader"],
  Cell[1672778, 33152, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"8ce0bfef-5305-4bbb-9aba-b02bdc90e948",
   CellTags->"SlideShowHeader"]},
 "Keys"->{
  Cell[873043, 18212, 231, 5, 64, "Input",ExpressionUUID->"8b12300c-28d2-423d-826e-6106164bdf50",
   CellTags->"Keys"],
  Cell[873277, 18219, 299, 9, 52, "Output",ExpressionUUID->"bfb43bb6-aebe-436f-a536-11c8ba35f47f",
   CellTags->"Keys"],
  Cell[989253, 20190, 231, 5, 64, "Input",ExpressionUUID->"6a4ef16a-e25c-429e-a3c8-95f30d50504e",
   CellTags->"Keys"],
  Cell[989487, 20197, 299, 9, 52, "Output",ExpressionUUID->"279888fc-9a6f-4a63-86d3-bdb2602f0e9f",
   CellTags->"Keys"]},
 "Values"->{
  Cell[873613, 18233, 235, 5, 64, "Input",ExpressionUUID->"e9fcc75c-551c-4015-a203-afedb9a8471c",
   CellTags->"Values"],
  Cell[873851, 18240, 56050, 927, 146, "Output",ExpressionUUID->"1e43c229-7854-40ee-875c-55fa72274e1e",
   CellTags->"Values"],
  Cell[989823, 20211, 235, 5, 64, "Input",ExpressionUUID->"eb0c32a2-c643-465a-a3d4-f2e4a6401f3a",
   CellTags->"Values"],
  Cell[990061, 20218, 56050, 927, 146, "Output",ExpressionUUID->"9ac57039-b749-4867-ac3b-7f28aa57d9ef",
   CellTags->"Values"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 1710800, 33982},
 {"Keys", 1714919, 34039},
 {"Values", 1715415, 34048}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[656, 23, 136, 2, 5, "SlideShowNavigationBar",ExpressionUUID->"ae861ed8-5fa1-4088-84fd-2651cc7b368a",
 CellTags->"SlideShowHeader"],
Cell[795, 27, 15061, 253, 179, "Title",ExpressionUUID->"059f49ae-49fc-4f44-80e6-ab700841b96e"],
Cell[15859, 282, 460, 7, 309, "Title",ExpressionUUID->"1243965a-40ce-482a-9c91-36878f955d76"],
Cell[16322, 291, 435, 6, 79, "Subtitle",ExpressionUUID->"abd2714b-c40b-491d-9b98-1f3d249655e3"],
Cell[16760, 299, 357096, 5860, 477, "Text",ExpressionUUID->"0f0fe2ef-ffb4-4b75-8946-39de599f6afe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[373893, 6164, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"aa921f28-2b3d-42b3-8af8-9817ced222ea",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[374040, 6170, 438, 7, 174, "Section",ExpressionUUID->"c8b36510-120c-4e68-aac4-9a4c7d528c9a"],
Cell[CellGroupData[{
Cell[374503, 6181, 421, 6, 114, "Subsection",ExpressionUUID->"1d223e45-6ec2-43fb-a61c-cea7a54eb4b5"],
Cell[CellGroupData[{
Cell[374949, 6191, 490, 7, 56, "Item",ExpressionUUID->"502f4891-0a79-4f27-861b-9f8c11e3878f"],
Cell[375442, 6200, 481, 7, 56, "Item",ExpressionUUID->"67ebb6ce-8e87-457a-b8e6-ecf3ef0bcf7a"],
Cell[375926, 6209, 973, 25, 56, "Item",ExpressionUUID->"23223b3b-e770-47fa-8381-2b45115be187"],
Cell[376902, 6236, 498, 7, 56, "Item",ExpressionUUID->"ac1fbbda-a67f-40a0-8912-9ebf3a157a52"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[377449, 6249, 514, 8, 114, "Subsection",ExpressionUUID->"eb21ca4c-6314-4208-981b-a7af39ca1266"],
Cell[CellGroupData[{
Cell[377988, 6261, 616, 9, 56, "Item",ExpressionUUID->"9694c383-6616-4257-ae2c-5097177c83a2"],
Cell[378607, 6272, 536, 8, 56, "Item",ExpressionUUID->"828edf58-04b2-40ba-991d-c73404d87da3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[379192, 6286, 331, 5, 114, "Subsection",ExpressionUUID->"85a71566-c653-4400-aeaf-2031eee1e047"],
Cell[CellGroupData[{
Cell[379548, 6295, 501, 8, 56, "Item",ExpressionUUID->"360d665e-a899-4ef4-9d08-22d5fd37f825"],
Cell[380052, 6305, 307, 5, 56, "Item",ExpressionUUID->"412d82b7-0e18-43fd-8fd4-1533235fd9e2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[380408, 6316, 281, 4, 114, "Subsection",ExpressionUUID->"b03d28ff-8a6d-434f-b650-a7059054374b"],
Cell[CellGroupData[{
Cell[380714, 6324, 437, 6, 56, "Item",ExpressionUUID->"ec4799bf-4a50-43b9-83c7-2771c5782d3b"],
Cell[381154, 6332, 605, 13, 56, "Item",ExpressionUUID->"8fbbeda6-4caa-4f10-87e6-7062a1635adf"],
Cell[381762, 6347, 392, 6, 56, "Item",ExpressionUUID->"41955664-2d8b-44ca-bc67-acef94a99442"],
Cell[382157, 6355, 414, 6, 56, "Item",ExpressionUUID->"98be4efa-78d9-4552-bf7e-93e44ace64e4"],
Cell[382574, 6363, 456, 9, 56, "Item",ExpressionUUID->"c47cd379-c62a-46d7-9271-c96cbe166342"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[383103, 6380, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"50f12808-627a-4632-b6f2-477afd1ae009",
 CellTags->"SlideShowHeader"],
Cell[383228, 6384, 232, 5, 185, "Input",ExpressionUUID->"c3c75d1f-b9f9-42c7-a54d-66f6ebdd8e48"],
Cell[383463, 6391, 345, 8, 309, "Title",ExpressionUUID->"ab2440dd-06ca-4e2b-81d5-178f6b352ea9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[383845, 6404, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"eb5308a7-8036-4f76-8eed-61cf47d6c4f2",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[383992, 6410, 552, 9, 174, "Section",ExpressionUUID->"1afc5a83-db0e-45e8-b457-2c174d831340"],
Cell[384547, 6421, 385, 6, 55, "Text",ExpressionUUID->"0a151648-8df0-4806-a5aa-e561241002ec"],
Cell[CellGroupData[{
Cell[384957, 6431, 282, 6, 56, "Subitem",ExpressionUUID->"bf117b47-cff6-45e8-a061-df9dc5ffecf7"],
Cell[385242, 6439, 280, 6, 56, "Subitem",ExpressionUUID->"af41302d-e314-426b-859d-a0203c30c63b"],
Cell[385525, 6447, 280, 6, 56, "Subitem",ExpressionUUID->"5021cf23-5288-4c93-9a5a-f7cc209c15ac"],
Cell[385808, 6455, 335, 7, 56, "Subitem",ExpressionUUID->"d32ed35f-d711-4075-a57e-5012d6e25588"],
Cell[386146, 6464, 331, 7, 56, "Subitem",ExpressionUUID->"c4289f68-854a-4e9f-84b0-ba9459686ed0"]
}, Open  ]],
Cell[386492, 6474, 530, 12, 55, "Text",ExpressionUUID->"bee58f2d-6c96-4d76-a16d-fbaf95325556"],
Cell[CellGroupData[{
Cell[387047, 6490, 590, 9, 145, "Input",ExpressionUUID->"4b6fe478-d040-493e-9b35-3b71d2de49e1"],
Cell[387640, 6501, 343, 5, 52, "Output",ExpressionUUID->"a5bab213-2ba6-4445-b042-a633c6993d23"],
Cell[387986, 6508, 345, 5, 52, "Output",ExpressionUUID->"c71acf05-b400-4abf-ac8e-150e95fca231"],
Cell[388334, 6515, 348, 5, 52, "Output",ExpressionUUID->"93aabac2-0a10-456b-94c5-be27f75e7998"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388719, 6525, 572, 9, 145, "Input",ExpressionUUID->"5b566abf-ffaa-4f11-9b39-e7a4ec7c64b7"],
Cell[389294, 6536, 342, 5, 52, "Output",ExpressionUUID->"75502f65-0c41-415c-bba7-86b766da5f5d"],
Cell[389639, 6543, 341, 5, 52, "Output",ExpressionUUID->"62477b3a-ad95-4fa9-9b90-49837d2cabdb"],
Cell[389983, 6550, 340, 5, 52, "Output",ExpressionUUID->"83ae36be-ac10-4c50-a592-2f8f97f06768"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390360, 6560, 581, 10, 145, "Input",ExpressionUUID->"64e245fc-b69b-4398-91e1-42a69862ff25"],
Cell[390944, 6572, 352, 4, 52, "Output",ExpressionUUID->"a1f872e2-53c5-4ab0-b37d-f7f02b0dedb6"],
Cell[391299, 6578, 322, 4, 52, "Output",ExpressionUUID->"c148de18-4fb4-41a6-a474-24c0ffc05368"],
Cell[391624, 6584, 326, 4, 52, "Output",ExpressionUUID->"68e83657-4f26-410d-b5c0-56e0d730cd95"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391987, 6593, 672, 12, 145, "Input",ExpressionUUID->"78b81afe-b673-4f88-b256-e8b771cec0aa"],
Cell[392662, 6607, 379, 6, 71, "Output",ExpressionUUID->"29e05623-a317-4fa2-ad7d-d38e1405dd35"],
Cell[393044, 6615, 362, 5, 52, "Output",ExpressionUUID->"eac4190f-dae0-4a0d-a896-0d970e7e5aa0"],
Cell[393409, 6622, 368, 5, 52, "Output",ExpressionUUID->"815e18b9-e255-4d5f-8b48-810ecf55d519"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393814, 6632, 263, 4, 114, "Subsection",ExpressionUUID->"adc21216-3548-442d-acab-1f1de844f7a7"],
Cell[394080, 6638, 409, 6, 55, "Text",ExpressionUUID->"59c44d5e-f597-4e3b-8133-fec75d6e78f0"],
Cell[CellGroupData[{
Cell[394514, 6648, 400, 6, 145, "Input",ExpressionUUID->"d35dc054-d9ee-41ab-bf3b-5ba92e417b31"],
Cell[394917, 6656, 315, 4, 52, "Output",ExpressionUUID->"1032602d-a60c-44ed-b061-1c73fdef1b24"],
Cell[395235, 6662, 316, 4, 52, "Output",ExpressionUUID->"4ce66f61-69a3-4d93-9d5a-8abb7d2e267a"],
Cell[395554, 6668, 318, 4, 52, "Output",ExpressionUUID->"a7634687-4df1-4dc2-9262-cc495891325c"]
}, Open  ]],
Cell[395887, 6675, 290, 4, 55, "Text",ExpressionUUID->"5421899d-7955-42eb-9d2c-51aac4886cb3"],
Cell[CellGroupData[{
Cell[396202, 6683, 273, 6, 64, "Input",ExpressionUUID->"8e2848c4-fc23-48d7-9b70-68051ab6bd07"],
Cell[396478, 6691, 313, 6, 52, "Output",ExpressionUUID->"2c853eb2-804b-446d-8c6e-976a3773f8af"]
}, Open  ]],
Cell[396806, 6700, 223, 4, 55, "Text",ExpressionUUID->"fd6ab191-65f5-4d1e-8a5e-db8947e7b6ba"],
Cell[397032, 6706, 217, 4, 64, "Input",ExpressionUUID->"cf84afc2-4a29-4a77-97f6-6f9dc1559abc"],
Cell[CellGroupData[{
Cell[397274, 6714, 178, 2, 64, "Input",ExpressionUUID->"7435205a-ec26-4b8b-9141-e63f351672ba"],
Cell[397455, 6718, 150, 2, 52, "Output",ExpressionUUID->"97f9636d-efb5-4990-a5d8-73d2adff28f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397642, 6725, 199, 3, 64, "Input",ExpressionUUID->"f00bd62c-8898-4a57-a7f5-e8a42aea91b0"],
Cell[397844, 6730, 150, 2, 52, "Output",ExpressionUUID->"9086b37d-d046-487e-bb3e-79ed3a418650"]
}, Open  ]],
Cell[398009, 6735, 211, 4, 55, "Text",ExpressionUUID->"bafbedec-1085-4a08-b254-0570d1cb4673"],
Cell[398223, 6741, 295, 7, 64, "Input",ExpressionUUID->"8d2daf9a-d0c2-4fdd-8ebe-a0ca92c0d49b"],
Cell[CellGroupData[{
Cell[398543, 6752, 194, 3, 64, "Input",ExpressionUUID->"5cc90311-dc14-4aa6-9d49-c19315453855"],
Cell[398740, 6757, 150, 2, 52, "Output",ExpressionUUID->"13968192-8406-49ed-bfb9-c6266c978a2b"]
}, Open  ]],
Cell[398905, 6762, 170, 4, 64, "Input",ExpressionUUID->"246c9d79-46a5-4725-ae69-3fb9577563a5"],
Cell[399078, 6768, 599, 14, 55, "Text",ExpressionUUID->"9d23375a-d118-4f8a-832d-4ae4a99aed86"],
Cell[399680, 6784, 513, 7, 55, "Text",ExpressionUUID->"4f98744e-0566-4432-9fed-84e7bf600b92"],
Cell[CellGroupData[{
Cell[400218, 6795, 429, 7, 56, "Item",ExpressionUUID->"4492ebf9-4b41-4a22-a033-8b8c7181c5b1"],
Cell[400650, 6804, 560, 8, 56, "Item",ExpressionUUID->"6d23d63a-f5a4-4c6c-9792-a8ae97880ef4"],
Cell[401213, 6814, 1324, 45, 56, "Item",ExpressionUUID->"5cfc19b7-843c-4f10-81f7-0abac71a8a27"]
}, Open  ]],
Cell[402552, 6862, 155, 2, 64, "Input",ExpressionUUID->"1099cded-e634-42c3-81f4-01ad4ce6b232"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[402768, 6871, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"f7916716-3628-47aa-9ac9-667ea67493e1",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[402915, 6877, 473, 8, 174, "Section",ExpressionUUID->"88033296-57ed-4603-8e5a-3086cff34530"],
Cell[403391, 6887, 461, 7, 55, "Text",ExpressionUUID->"a75079f9-48e3-4873-b74a-5c181f0662f7"],
Cell[CellGroupData[{
Cell[403877, 6898, 349, 5, 98, "Subsubsection",ExpressionUUID->"fe0aa75f-0ebc-486d-982c-5fad33aa43fb"],
Cell[404229, 6905, 223, 6, 64, "Input",ExpressionUUID->"cfe43cec-511c-45ab-a4c0-f9b7a55e6593"],
Cell[CellGroupData[{
Cell[404477, 6915, 274, 6, 64, "Input",ExpressionUUID->"b678769e-2ae7-4495-a5a7-9696cd326686"],
Cell[404754, 6923, 177, 2, 52, "Output",ExpressionUUID->"eead8eea-8ad4-44c1-b30d-2c0eabfedfba"]
}, Open  ]],
Cell[404946, 6928, 235, 4, 55, "Text",ExpressionUUID->"5e06c388-5d9b-4dd6-94e8-659faf3f960e"],
Cell[CellGroupData[{
Cell[405206, 6936, 279, 6, 64, "Input",ExpressionUUID->"4f713a62-6349-4904-bbd1-26d48af157d3"],
Cell[405488, 6944, 513, 16, 77, "Output",ExpressionUUID->"11b0adfe-25fd-4588-acf6-7987e384fc74"]
}, Open  ]],
Cell[406016, 6963, 1025, 28, 175, "Text",ExpressionUUID->"395cccf4-3db6-4aac-b860-aad656aadb87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407078, 6996, 213, 4, 98, "Subsubsection",ExpressionUUID->"722e40a6-7173-4603-a6e5-91aa45b5c6b5"],
Cell[CellGroupData[{
Cell[407316, 7004, 567, 12, 145, "Input",ExpressionUUID->"3a3aa135-17f1-4d60-bed5-896e1636901c"],
Cell[407886, 7018, 204, 3, 52, "Output",ExpressionUUID->"7955b982-862e-4bce-b45b-8b6f76df483e"]
}, Open  ]],
Cell[408105, 7024, 224, 4, 55, "Text",ExpressionUUID->"b1e468ec-4127-4647-b045-9a118110c7bb"],
Cell[CellGroupData[{
Cell[408354, 7032, 341, 7, 64, "Input",ExpressionUUID->"120fd0a3-73e6-4620-ae1d-c1ed6310c36b"],
Cell[408698, 7041, 586, 16, 77, "Output",ExpressionUUID->"8f062748-b22e-43cd-9f12-c9a56da66a26"]
}, Open  ]],
Cell[409299, 7060, 1196, 37, 175, "Text",ExpressionUUID->"2c91510f-4a6d-4d85-b10c-242807ca98ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410532, 7102, 368, 5, 98, "Subsubsection",ExpressionUUID->"be818725-9fd2-4b20-bfdd-47ae6338fdb5"],
Cell[CellGroupData[{
Cell[410925, 7111, 379, 8, 105, "Input",ExpressionUUID->"97d9a2cb-2c3d-4a2c-b1f8-5b73b4ca0991"],
Cell[411307, 7121, 254, 4, 52, "Output",ExpressionUUID->"4c230686-051d-4d2a-89f1-a9fa86f74270"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411598, 7130, 279, 5, 64, "Input",ExpressionUUID->"33940757-d520-4393-b105-f8552e3aabcc"],
Cell[411880, 7137, 442, 13, 77, "Output",ExpressionUUID->"efeecf1c-4631-4a9f-81f0-804ff21d61e0"]
}, Open  ]],
Cell[412337, 7153, 578, 19, 214, "Text",ExpressionUUID->"11c82c20-58e7-4407-8ede-ca2b29f186db"],
Cell[412918, 7174, 155, 2, 64, "Input",ExpressionUUID->"65230bf1-61a8-4456-83d9-1dcdedfd7591"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[413134, 7183, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"33bb0245-6a18-4db3-b514-865dcb3b3610",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[413281, 7189, 365, 6, 174, "Section",ExpressionUUID->"467aae82-069f-4709-a54e-c5b2aef20ddd"],
Cell[413649, 7197, 1532, 30, 493, "Text",ExpressionUUID->"779c1232-8291-41ea-aec7-9d3d9c2729c5"],
Cell[415184, 7229, 13516, 226, 67, "Text",ExpressionUUID->"54bb0727-aeae-405a-9fb8-60c0d4c9c86c"],
Cell[428703, 7457, 583, 16, 56, "Text",ExpressionUUID->"fcda0702-5573-4464-82da-0d45f3810773"],
Cell[CellGroupData[{
Cell[429311, 7477, 251, 5, 114, "Subsection",ExpressionUUID->"50f5f8e1-9060-4c6a-af1f-c204b4dc4ced"],
Cell[CellGroupData[{
Cell[429587, 7486, 353, 7, 64, "Input",ExpressionUUID->"51f6016e-3621-4c80-9d63-227af947342c"],
Cell[429943, 7495, 493, 14, 77, "Output",ExpressionUUID->"7cb4f371-bdf6-4962-9462-95a24655fc1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[430473, 7514, 354, 8, 64, "Input",ExpressionUUID->"dac2c0fd-9e8a-464e-8188-5cc2d5f859c2"],
Cell[430830, 7524, 535, 16, 52, "Output",ExpressionUUID->"10616506-33f0-4e42-818a-38af518c53e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431402, 7545, 306, 6, 64, "Input",ExpressionUUID->"54375d7d-4906-4b24-a9a2-9f02186ebd7d"],
Cell[431711, 7553, 449, 14, 77, "Output",ExpressionUUID->"5c31656e-b7ba-4ba6-88d3-fa7dec85611e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432197, 7572, 480, 13, 64, "Input",ExpressionUUID->"f4d018e9-babd-49ba-baf5-733f08292a1b"],
Cell[432680, 7587, 862, 25, 52, "Output",ExpressionUUID->"18bf7b71-5552-4e89-8772-ce30dc9230d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[433579, 7617, 287, 7, 64, "Input",ExpressionUUID->"01e3cea3-4093-4d8c-95b2-f65e1fb9342c"],
Cell[433869, 7626, 429, 13, 52, "Output",ExpressionUUID->"21f4aa1e-d813-4756-b025-f64c57380bdd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434335, 7644, 504, 13, 145, "Input",ExpressionUUID->"6c8264b3-8e6b-454f-84eb-82d3261034f3"],
Cell[434842, 7659, 759, 23, 52, "Output",ExpressionUUID->"c8a3303e-c75a-4be0-bb8d-20bb805fbbfa"]
}, Open  ]],
Cell[435616, 7685, 10765, 196, 158, "Input",ExpressionUUID->"853143fc-8628-45cc-94b6-c94ac145f3a5",
 CellGroupingRules->{"GroupTogetherGrouping", 15001.}],
Cell[446384, 7883, 81422, 1695, 14918, "Output",ExpressionUUID->"b5ce88d7-8595-4160-aeb9-a424fc1c90a0"],
Cell[527809, 9580, 229, 4, 64, "Input",ExpressionUUID->"b97f0b36-b6d9-4dcc-8d84-1fac97b8ccbd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[528099, 9591, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"8ad9ba7d-b5c9-4e75-a22c-0faf1105a31e",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[528246, 9597, 454, 7, 174, "Section",ExpressionUUID->"718659a5-bb81-4bff-b294-3a397f487fcb"],
Cell[528703, 9606, 245, 4, 55, "Text",ExpressionUUID->"9519f9ff-ec24-4e32-9560-fc9959b77fad"],
Cell[528951, 9612, 513, 13, 105, "Input",ExpressionUUID->"f544635f-9fb2-4cb8-980b-edfb8592cc37"],
Cell[CellGroupData[{
Cell[529489, 9629, 382, 7, 105, "Input",ExpressionUUID->"7bd1d411-33cc-4be8-afa7-052d53bfd121"],
Cell[529874, 9638, 363, 12, 77, "Output",ExpressionUUID->"237cf4cd-6694-4223-b211-5acc36d8394c"],
Cell[530240, 9652, 363, 12, 77, "Output",ExpressionUUID->"214c65f7-1db9-4779-b427-25141c6a7023"]
}, Open  ]],
Cell[CellGroupData[{
Cell[530640, 9669, 316, 5, 98, "Subsubsection",ExpressionUUID->"147cfa2d-1daa-4005-a7d3-4061f9da710d"],
Cell[530959, 9676, 462, 11, 135, "Text",ExpressionUUID->"efb9b430-275d-4c59-95df-3351be4bc33c"],
Cell[CellGroupData[{
Cell[531446, 9691, 328, 6, 105, "Input",ExpressionUUID->"a5671eea-5b4a-47dd-bb51-9e2f1dd2071b"],
Cell[531777, 9699, 156, 3, 52, "Output",ExpressionUUID->"b28f7896-3291-4e12-9682-0d0f46d7fa3f"],
Cell[531936, 9704, 156, 3, 52, "Output",ExpressionUUID->"7dd5d3c2-3541-4d6a-a4f7-06465a86dba0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[532141, 9713, 238, 4, 98, "Subsubsection",ExpressionUUID->"f4933d28-27ba-4621-b6e2-c334f843d73b"],
Cell[532382, 9719, 297, 5, 55, "Text",ExpressionUUID->"59fee27f-4a88-4e84-9988-3b11d611cdd3"],
Cell[CellGroupData[{
Cell[532704, 9728, 329, 6, 105, "Input",ExpressionUUID->"87107e05-0643-4297-ba44-aec571fc241e"],
Cell[533036, 9736, 153, 3, 52, "Output",ExpressionUUID->"0d843e64-5dc2-4929-89b3-efd695855339"],
Cell[533192, 9741, 155, 3, 52, "Output",ExpressionUUID->"8b141521-d3dc-47e5-a9e8-ea385cf8a662"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[533396, 9750, 306, 5, 98, "Subsubsection",ExpressionUUID->"0391ef5d-4436-451b-9c84-68f3357af1ac"],
Cell[533705, 9757, 366, 6, 55, "Text",ExpressionUUID->"5d5eaf07-5adf-4427-add8-396900c7f0b6"],
Cell[CellGroupData[{
Cell[534096, 9767, 371, 8, 105, "Input",ExpressionUUID->"69d245b5-9f5e-4c84-bb7e-3192902f3788"],
Cell[534470, 9777, 153, 3, 52, "Output",ExpressionUUID->"67740122-153f-4ebe-b88b-e16fcb14bda2"],
Cell[534626, 9782, 153, 3, 52, "Output",ExpressionUUID->"e527096c-1c4d-4931-823a-7f03334b56d8"]
}, Open  ]],
Cell[534794, 9788, 227, 4, 55, "Text",ExpressionUUID->"20e474ac-4347-4097-a8fd-53356df55e9c"],
Cell[CellGroupData[{
Cell[535046, 9796, 370, 8, 105, "Input",ExpressionUUID->"6ddcd47e-3f93-410a-80a7-be18b3147ebf"],
Cell[535419, 9806, 155, 3, 52, "Output",ExpressionUUID->"73a669c0-a0e7-41a3-ad96-ed704fa48a14"],
Cell[535577, 9811, 155, 3, 52, "Output",ExpressionUUID->"76087398-41e9-4586-8878-55d2a6e9f6da"]
}, Open  ]],
Cell[535747, 9817, 292, 4, 55, "Text",ExpressionUUID->"991a4272-34ee-4e9f-9d36-e604a862bc18"],
Cell[CellGroupData[{
Cell[536064, 9825, 366, 8, 105, "Input",ExpressionUUID->"51dee8ea-7a3d-4b7f-a242-e88c29a1c280"],
Cell[536433, 9835, 156, 3, 52, "Output",ExpressionUUID->"0a1575e7-b525-4d6d-bf47-f9c031f097b7"],
Cell[536592, 9840, 156, 3, 52, "Output",ExpressionUUID->"74501c28-53e6-43fa-9257-424e0ac847bb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[536821, 9851, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"2aac5a56-ba5c-49cc-a77e-718c21d2d47c",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[536968, 9857, 640, 10, 174, "Section",ExpressionUUID->"189a48a4-8345-4d11-bc5d-4c947165d429"],
Cell[CellGroupData[{
Cell[537633, 9871, 222, 4, 98, "Subsubsection",ExpressionUUID->"72a41e49-252e-45a6-a074-26621aecae5d"],
Cell[CellGroupData[{
Cell[537880, 9879, 475, 13, 64, "Input",ExpressionUUID->"5395ca4e-cee5-4abc-adf5-d07e99ee9034"],
Cell[538358, 9894, 5375, 140, 52, "Output",ExpressionUUID->"c4279c38-87a6-4842-bbb6-cbf8bf3a4f04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[543770, 10039, 275, 5, 105, "Input",ExpressionUUID->"9f515212-a7f1-4695-a39a-0aa0e870215c"],
Cell[544048, 10046, 156, 3, 52, "Output",ExpressionUUID->"68fcca72-fd1f-454d-a913-0f26269842c7"],
Cell[544207, 10051, 153, 3, 52, "Output",ExpressionUUID->"2f9f5908-23fb-4c77-829e-75f76b0a334a"]
}, Open  ]],
Cell[544375, 10057, 760, 11, 55, "Text",ExpressionUUID->"f4f2f3ca-d6f3-45fe-93f3-70469e25d87b"],
Cell[CellGroupData[{
Cell[545160, 10072, 260, 6, 64, "Input",ExpressionUUID->"eed7525e-69fb-4504-a5ca-094418beaa1f"],
Cell[545423, 10080, 198, 5, 52, "Output",ExpressionUUID->"2155ec54-88a6-4f43-ae63-4f916f4bc0a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[545658, 10090, 282, 7, 64, "Input",ExpressionUUID->"ad465d9d-3b21-49eb-9afe-12f234cb5863"],
Cell[545943, 10099, 155, 3, 52, "Output",ExpressionUUID->"1816d7a1-3d16-4f76-b157-540ad58e1f60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[546135, 10107, 258, 6, 64, "Input",ExpressionUUID->"f5a4cd82-5cda-45e5-82ea-6db6d612fcae"],
Cell[546396, 10115, 4960, 134, 52, "Output",ExpressionUUID->"8ff99e3e-9255-457c-83dd-08a5bbce3844"]
}, Open  ]],
Cell[CellGroupData[{
Cell[551393, 10254, 282, 7, 64, "Input",ExpressionUUID->"c7088c38-56c3-4bbb-9efd-57a741d4a61e"],
Cell[551678, 10263, 1643, 45, 52, "Output",ExpressionUUID->"a4e8855f-b47b-45d4-a66b-4cb60b285074"]
}, Open  ]],
Cell[CellGroupData[{
Cell[553358, 10313, 303, 8, 64, "Input",ExpressionUUID->"e368e810-c119-43ce-a8e7-11379533426d"],
Cell[553664, 10323, 3366, 91, 52, "Output",ExpressionUUID->"071f03c1-31a5-432e-abf7-5ef612902863"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[557079, 10420, 220, 4, 98, "Subsubsection",ExpressionUUID->"472486ae-cd36-41cd-aca9-1c73d127ccf2"],
Cell[557302, 10426, 509, 7, 55, "Text",ExpressionUUID->"af311494-2a67-4d71-8778-7e8d69b5b2e4"],
Cell[CellGroupData[{
Cell[557836, 10437, 436, 9, 64, "Input",ExpressionUUID->"84770754-927a-4524-b15d-14bb5cedc7d9"],
Cell[558275, 10448, 242, 6, 74, "Output",ExpressionUUID->"1a542330-a225-4c7b-86a2-c2802c64ed8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[558554, 10459, 292, 5, 64, "Input",ExpressionUUID->"55ee3a00-24f7-4b1e-88a5-1cc9a039d6c7"],
Cell[558849, 10466, 506, 17, 77, "Output",ExpressionUUID->"b3202190-f25d-457e-b394-cdbcb0ef2368"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559392, 10488, 285, 6, 64, "Input",ExpressionUUID->"992db41d-bba3-443c-8626-e5e0a6464c92"],
Cell[559680, 10496, 156, 3, 52, "Output",ExpressionUUID->"0d36aba2-f3d6-4a4d-90ab-2ab73e3ac6bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559873, 10504, 284, 6, 64, "Input",ExpressionUUID->"4ec4b92c-6cd6-4796-a8a7-99a35fc66320"],
Cell[560160, 10512, 153, 3, 52, "Output",ExpressionUUID->"0157bbce-0e82-4134-9cfa-4e1c57607682"]
}, Open  ]],
Cell[CellGroupData[{
Cell[560350, 10520, 454, 8, 64, "Input",ExpressionUUID->"08330031-a956-46c9-b20d-2a5fbfe0c1f6"],
Cell[560807, 10530, 198, 5, 74, "Output",ExpressionUUID->"55a5d5db-1f1d-4e0f-a1de-7effde6f7d50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[561042, 10540, 480, 9, 64, "Input",ExpressionUUID->"8236356f-3f55-437b-a59e-6f0db4e12f4c"],
Cell[561525, 10551, 173, 4, 72, "Output",ExpressionUUID->"5eea27eb-af83-4250-8290-84dd9c675631"]
}, Open  ]],
Cell[CellGroupData[{
Cell[561735, 10560, 477, 9, 64, "Input",ExpressionUUID->"f6d43b9c-8533-48eb-bfa9-941c209561a6"],
Cell[562215, 10571, 153, 3, 52, "Output",ExpressionUUID->"5b85aaf8-df14-48ef-955f-be4d07406ea7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562405, 10579, 482, 9, 64, "Input",ExpressionUUID->"37c8dba9-b884-4473-97ca-fa58c0c8b04e"],
Cell[562890, 10590, 153, 3, 52, "Output",ExpressionUUID->"c7009c81-6476-4bb5-a121-7f3160d3065b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563080, 10598, 530, 11, 64, "Input",ExpressionUUID->"51d4a06f-b927-428e-82ef-aae8ee69b973"],
Cell[563613, 10611, 173, 4, 74, "Output",ExpressionUUID->"c333efe1-762b-41ee-9696-be9c616b1f9c"]
}, Open  ]],
Cell[563801, 10618, 229, 4, 64, "Input",ExpressionUUID->"f1f144c4-3b25-49f6-b66b-3f886a7c99f7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[564091, 10629, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"1baad451-2b54-4fbd-acd5-02a678b87d0d",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[564238, 10635, 728, 10, 174, "Section",ExpressionUUID->"b3de91a9-1e66-4b6d-9b05-3b95e724cad3"],
Cell[564969, 10647, 790, 14, 55, "Text",ExpressionUUID->"4602eb04-61e5-4c72-94c5-e6c2c766d213"],
Cell[CellGroupData[{
Cell[565784, 10665, 553, 15, 64, "Input",ExpressionUUID->"6da5e086-e755-4022-b0b5-bcac4836bfc3"],
Cell[566340, 10682, 434, 13, 52, "Output",ExpressionUUID->"827769f0-2aed-40f0-a300-05f53997da00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[566811, 10700, 209, 4, 64, "Input",ExpressionUUID->"a729df3f-f7e0-4125-8d1b-64637d5c2cf3"],
Cell[567023, 10706, 605, 20, 77, "Output",ExpressionUUID->"8e975af8-561f-4be1-abcd-e47a0019f617"]
}, Open  ]],
Cell[CellGroupData[{
Cell[567665, 10731, 215, 4, 64, "Input",ExpressionUUID->"da3da044-71d7-4ecd-9bb2-011e26528581"],
Cell[567883, 10737, 10211, 276, 428, "Output",ExpressionUUID->"bfc93bac-7670-4958-addc-84b6c9c87f99"]
}, Open  ]],
Cell[578109, 11016, 238, 4, 55, "Text",ExpressionUUID->"c34c0ce1-8ea9-418d-a3b2-e459f8a463c7"],
Cell[CellGroupData[{
Cell[578372, 11024, 259, 6, 64, "Input",ExpressionUUID->"e5dd8fff-de70-47fc-a071-ef5da775ac06"],
Cell[578634, 11032, 218, 5, 52, "Output",ExpressionUUID->"3be1ce70-41d6-4aed-9ebd-7cddea887a09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[578889, 11042, 258, 6, 64, "Input",ExpressionUUID->"22ea62b5-f154-4c3b-b579-12163bcbe0dd"],
Cell[579150, 11050, 326, 9, 52, "Output",ExpressionUUID->"522c16ea-8bfa-4c3b-8932-e0aa8cb09a99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[579513, 11064, 261, 6, 64, "Input",ExpressionUUID->"ef6f1baf-aa06-46ad-b6d0-38d7a5332321"],
Cell[579777, 11072, 414, 13, 52, "Output",ExpressionUUID->"5d5450f7-17c2-4e26-bddd-b9da499aa051"]
}, Open  ]],
Cell[CellGroupData[{
Cell[580228, 11090, 255, 6, 64, "Input",ExpressionUUID->"b73350ca-865d-421e-8d0d-0fb33ef75d3d"],
Cell[580486, 11098, 444, 14, 52, "Output",ExpressionUUID->"27062aaf-5269-4c98-803c-ad63e4121d9a"]
}, Open  ]],
Cell[580945, 11115, 246, 4, 55, "Text",ExpressionUUID->"14dd40fd-3f42-4f09-b1c7-dcd4d91960e2"],
Cell[CellGroupData[{
Cell[581216, 11123, 261, 6, 64, "Input",ExpressionUUID->"697e0fb3-c95a-4847-a1c2-cf0bb367c89e"],
Cell[581480, 11131, 560, 17, 52, "Output",ExpressionUUID->"7f67cbcb-e100-427d-b8df-c39ae15f1b8b"]
}, Open  ]],
Cell[582055, 11151, 229, 4, 64, "Input",ExpressionUUID->"7ad079b2-f8ba-417e-98a6-d9ee1ae0b087"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[582333, 11161, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"ccfdacd5-fc4c-440a-be14-8c7c64770803",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[582480, 11167, 776, 11, 174, "Section",ExpressionUUID->"e231254f-74a6-4c71-8560-5d0bbbf08ff2"],
Cell[CellGroupData[{
Cell[583281, 11182, 218, 4, 114, "Subsection",ExpressionUUID->"69d62990-496e-43cd-aea3-af0fa40e80be"],
Cell[583502, 11188, 712, 14, 55, "Text",ExpressionUUID->"b59b5586-e9f6-4585-bb0e-6f77d34181ec"],
Cell[CellGroupData[{
Cell[584239, 11206, 315, 8, 64, "Input",ExpressionUUID->"88f04322-fb99-49a4-9df5-c952ccf27c00"],
Cell[584557, 11216, 280, 9, 56, "Output",ExpressionUUID->"57101553-0b14-4061-9977-5e48b9127dfe"]
}, Open  ]],
Cell[584852, 11228, 627, 14, 55, "Text",ExpressionUUID->"bf349f2b-9a12-4f1c-8f0a-135274549f3c"],
Cell[CellGroupData[{
Cell[585504, 11246, 600, 17, 105, "Input",ExpressionUUID->"9bee1847-4c81-4e77-a3b5-f8533e53e4d1"],
Cell[586107, 11265, 10211, 276, 428, "Output",ExpressionUUID->"02095805-0fcf-4764-9ea0-c84e061a0cda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[596355, 11546, 357, 8, 64, "Input",ExpressionUUID->"730664ba-5885-4be4-afe5-846a76639e6a"],
Cell[596715, 11556, 478, 15, 52, "Output",ExpressionUUID->"8fc94e7a-0945-4be9-8cd1-d11043f9e2a5"]
}, Open  ]],
Cell[597208, 11574, 253, 4, 55, "Text",ExpressionUUID->"6f78c478-0f2a-4329-b9e0-fb83f52459f8"],
Cell[CellGroupData[{
Cell[597486, 11582, 444, 11, 64, "Input",ExpressionUUID->"2097a0ab-1086-4633-8de5-27c434fcacc4"],
Cell[597933, 11595, 571, 18, 52, "Output",ExpressionUUID->"2ae74108-e643-47b4-a90c-2da8b410144c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[598541, 11618, 444, 12, 64, "Input",ExpressionUUID->"0548e375-ac6f-4d23-aaa5-0e9d429a5def"],
Cell[598988, 11632, 544, 17, 52, "Output",ExpressionUUID->"cf80e7dd-2de3-45ef-8690-c4dbafb96273"]
}, Open  ]],
Cell[CellGroupData[{
Cell[599569, 11654, 520, 12, 64, "Input",ExpressionUUID->"ed7e4ed1-994e-41a6-8284-20acfd91fe24"],
Cell[600092, 11668, 478, 15, 52, "Output",ExpressionUUID->"da7d1726-8025-4f44-97fc-e79a90efe40d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[600607, 11688, 574, 13, 64, "Input",ExpressionUUID->"58bdbb09-13e1-45f1-923b-b1fe8a836056"],
Cell[601184, 11703, 451, 14, 52, "Output",ExpressionUUID->"0cf7acdd-f61a-4220-b927-b3edbf79eec0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[601672, 11722, 500, 11, 64, "Input",ExpressionUUID->"e4a2eee2-87de-49da-9ee3-5cb71e93e837"],
Cell[602175, 11735, 647, 21, 52, "Output",ExpressionUUID->"03002eb6-bf2a-491a-83ad-fa42b47ffb10"]
}, Open  ]],
Cell[602837, 11759, 229, 4, 64, "Input",ExpressionUUID->"dc7d3aeb-dc2d-4e88-9ae4-9202a726c681"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[603127, 11770, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"be17a351-28a5-43f3-bc1b-c16634a6aa50",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[603274, 11776, 848, 12, 174, "Section",ExpressionUUID->"9b567c61-dc2f-495e-aede-f07c865e32b8"],
Cell[604125, 11790, 415, 9, 55, "Text",ExpressionUUID->"bd01066c-c532-40b9-80a8-d2980e03364a"],
Cell[CellGroupData[{
Cell[604565, 11803, 1356, 33, 158, "Input",ExpressionUUID->"ab2e9a3e-4763-435f-bae6-d7d1d11b7acf"],
Cell[605924, 11838, 1772, 57, 113, "Output",ExpressionUUID->"87ba530e-22f1-4e14-ab21-9d8c212463d5"]
}, {2}]],
Cell[CellGroupData[{
Cell[607730, 11900, 157, 3, 114, "Subsection",ExpressionUUID->"a75d2f95-d3c8-442c-b01f-532e8f1c2f50"],
Cell[607890, 11905, 447, 11, 55, "Text",ExpressionUUID->"0af68013-8f39-4eb9-a1a9-571b5c97ca74"],
Cell[CellGroupData[{
Cell[608362, 11920, 487, 12, 64, "Input",ExpressionUUID->"349a9168-af09-4ae4-b717-c1d26b6248c3"],
Cell[608852, 11934, 208, 5, 52, "Output",ExpressionUUID->"ce3213cc-702f-49de-8c84-09080339382e"]
}, Open  ]],
Cell[609075, 11942, 252, 4, 55, "Text",ExpressionUUID->"51622233-a002-4284-9ae6-f45ae8210cb4"],
Cell[CellGroupData[{
Cell[609352, 11950, 488, 11, 64, "Input",ExpressionUUID->"4abb6ce3-135e-479e-b2f9-663cb54c667c"],
Cell[609843, 11963, 199, 5, 52, "Output",ExpressionUUID->"1019afef-2701-441d-8eb1-5ca5b5df4ad1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[610079, 11973, 427, 10, 64, "Input",ExpressionUUID->"212ebf52-211d-4d40-b58b-05829298b7a0"],
Cell[610509, 11985, 9160, 250, 434, "Output",ExpressionUUID->"5584cd82-c588-40a2-90cc-7fd6e177359e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[619718, 12241, 157, 3, 114, "Subsection",ExpressionUUID->"25ea2493-4f50-41f9-9d83-8bfacb347f94"],
Cell[619878, 12246, 397, 10, 55, "Text",ExpressionUUID->"297164cc-3b2e-4759-ab11-2e4343dff678"],
Cell[CellGroupData[{
Cell[620300, 12260, 621, 18, 64, "Input",ExpressionUUID->"7d985882-465f-455c-9299-842ae27092ea"],
Cell[620924, 12280, 427, 13, 52, "Output",ExpressionUUID->"9d5c4057-5379-49ff-9413-6f21f70fd1b2"]
}, Open  ]],
Cell[621366, 12296, 523, 11, 55, "Text",ExpressionUUID->"52d23c1a-3c6e-4e4e-952f-c4c4ac7111be"],
Cell[621892, 12309, 252, 4, 55, "Text",ExpressionUUID->"c9c34d77-d09f-4028-b786-61d2e08816b7"],
Cell[CellGroupData[{
Cell[622169, 12317, 676, 19, 64, "Input",ExpressionUUID->"dc9cc48c-08d4-445a-9499-566620399b64"],
Cell[622848, 12338, 424, 13, 52, "Output",ExpressionUUID->"1322a0e5-a0d1-45d1-ab07-2aeef78d0631"]
}, Open  ]],
Cell[623287, 12354, 250, 4, 55, "Text",ExpressionUUID->"b0efa654-eac8-47d5-872b-e24e5b05b251"],
Cell[CellGroupData[{
Cell[623562, 12362, 730, 20, 64, "Input",ExpressionUUID->"c2f9559a-0b74-49f6-af9c-c1baf96d818e"],
Cell[624295, 12384, 425, 13, 52, "Output",ExpressionUUID->"17a2e33a-4989-4f42-ae96-ab125f8d6a9d"]
}, Open  ]],
Cell[624735, 12400, 225, 3, 64, "Input",ExpressionUUID->"88c40433-05e2-4700-b211-f1455480bf85"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[625021, 12410, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"8ac72d45-e668-403d-b24b-a4f59ed09b04",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[625168, 12416, 760, 11, 174, "Section",ExpressionUUID->"a9563194-a5fd-4792-9e1d-3e6b73e82e38"],
Cell[CellGroupData[{
Cell[625953, 12431, 287, 5, 98, "Subsubsection",ExpressionUUID->"d91d84de-28ce-474f-a0e4-04b4d2818164"],
Cell[626243, 12438, 522, 14, 64, "Input",ExpressionUUID->"bcba7e7e-940f-4144-9e63-127f5bfa407e"],
Cell[626768, 12454, 208, 4, 64, "Input",ExpressionUUID->"7ed84d1d-9c7e-4601-82f2-bebd7bf5a288"],
Cell[626979, 12460, 368, 10, 55, "Text",ExpressionUUID->"dc1c885f-8f0f-4916-a95c-dc1bc4516347"],
Cell[627350, 12472, 214, 4, 64, "Input",ExpressionUUID->"1b89036a-c83e-4af2-a14b-d95c80c52453"],
Cell[627567, 12478, 520, 11, 55, "Text",ExpressionUUID->"f6e796e9-c9e9-4a8d-aa80-9642aade3dc7"],
Cell[628090, 12491, 218, 4, 64, "Input",ExpressionUUID->"0227088c-f6ca-417f-93cc-5e519d40bf6f"],
Cell[628311, 12497, 296, 5, 67, "Text",ExpressionUUID->"5206c5f9-d147-4f0d-8f89-1ba084fa7915"],
Cell[628610, 12504, 314, 8, 64, "Input",ExpressionUUID->"e1f94282-6ed3-4d56-a912-6e149b2251d3"],
Cell[CellGroupData[{
Cell[628949, 12516, 210, 4, 64, "Input",ExpressionUUID->"ba547a09-c726-40bb-a73f-cceaefc80912"],
Cell[629162, 12522, 4319, 121, 584, "Output",ExpressionUUID->"15cbf50d-67e2-4353-8730-bbcb2c06676d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[633518, 12648, 263, 5, 64, "Input",ExpressionUUID->"c0500ed0-e173-4f25-9487-a1c9db87741a"],
Cell[633784, 12655, 155, 3, 52, "Output",ExpressionUUID->"351fbc2f-1b03-47c0-a1d9-5149fbe9b978"]
}, Open  ]],
Cell[CellGroupData[{
Cell[633976, 12663, 268, 5, 64, "Input",ExpressionUUID->"08b171e7-8518-4a99-a4c8-c462523b4d17"],
Cell[634247, 12670, 153, 3, 52, "Output",ExpressionUUID->"3e04679a-e3f6-46f9-9ee8-669ec8011232"]
}, Open  ]],
Cell[634415, 12676, 274, 5, 67, "Text",ExpressionUUID->"f734eb11-8017-48ce-8df6-8c334141dd5d"],
Cell[CellGroupData[{
Cell[634714, 12685, 278, 7, 64, "Input",ExpressionUUID->"a83e55e7-24da-4097-9591-e383d16104e0"],
Cell[634995, 12694, 4046, 116, 494, "Output",ExpressionUUID->"2a5dc381-1702-489e-83cf-2bb300edf92b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[639078, 12815, 274, 6, 64, "Input",ExpressionUUID->"4966bc5b-3505-4f6c-8242-6e149b1aa60b"],
Cell[639355, 12823, 153, 3, 52, "Output",ExpressionUUID->"eb036dd6-2f45-475d-a7a2-903e462de29d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[639545, 12831, 282, 6, 64, "Input",ExpressionUUID->"0546eb73-43c9-4791-a3ee-52d57ea7a176"],
Cell[639830, 12839, 153, 3, 52, "Output",ExpressionUUID->"62492d2d-ce78-4e5c-a838-081fd362c2bd"]
}, Open  ]],
Cell[639998, 12845, 229, 4, 64, "Input",ExpressionUUID->"8f157759-26fe-46f4-9010-7403b10e10b4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[640288, 12856, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"855b8b1b-7b2c-4c48-9abe-67511c1ddc9f",
 CellTags->"SlideShowHeader"],
Cell[640413, 12860, 232, 5, 185, "Input",ExpressionUUID->"6d627e3a-7769-4ce0-8d91-1bde165f812e"],
Cell[640648, 12867, 439, 10, 309, "Title",ExpressionUUID->"a402aaa6-98f8-4625-a010-1d2140aff23d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[641124, 12882, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"9bce4c70-54b3-4b8b-914e-68969a89392e",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[641271, 12888, 415, 6, 174, "Section",ExpressionUUID->"19f98895-a617-42af-8e81-c1ac932fe73c"],
Cell[CellGroupData[{
Cell[641711, 12898, 206, 4, 98, "Subsubsection",ExpressionUUID->"2dae6eaf-af50-4d4a-8638-68b08e18afd7"],
Cell[641920, 12904, 487, 12, 55, "Text",ExpressionUUID->"c5f9837f-c3ce-49c5-b806-30fa0f5ef47f"],
Cell[CellGroupData[{
Cell[642432, 12920, 200, 4, 64, "Input",ExpressionUUID->"214feae8-fd81-453a-90ee-4464ce768cc9"],
Cell[642635, 12926, 153, 3, 52, "Output",ExpressionUUID->"6c66822c-3edf-48e9-8062-e603b3d03108"]
}, Open  ]],
Cell[CellGroupData[{
Cell[642825, 12934, 177, 3, 64, "Input",ExpressionUUID->"d31622ca-ee92-48de-91a3-4d4680e9598b"],
Cell[643005, 12939, 153, 3, 52, "Output",ExpressionUUID->"d42453e4-0591-4580-a4f5-87571f5e33c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[643195, 12947, 201, 4, 64, "Input",ExpressionUUID->"ca0bdca8-7301-414a-8ccb-8682b1234263"],
Cell[643399, 12953, 156, 3, 52, "Output",ExpressionUUID->"32d5e24a-3d35-433d-8694-3bf171e3e7ca"]
}, Open  ]],
Cell[643570, 12959, 363, 10, 64, "Input",ExpressionUUID->"ff4a2d76-4284-4eb3-abc7-d1a45fdc3cf0"],
Cell[CellGroupData[{
Cell[643958, 12973, 173, 4, 64, "Input",ExpressionUUID->"25fa11e2-fe1c-41ee-a9bd-bcbc22775dac"],
Cell[644134, 12979, 153, 3, 52, "Output",ExpressionUUID->"b85b92b7-5562-41f3-a5e7-894c35b58199"]
}, Open  ]],
Cell[CellGroupData[{
Cell[644324, 12987, 175, 4, 64, "Input",ExpressionUUID->"bbbf6b28-5322-470b-9c29-97a55090532a"],
Cell[644502, 12993, 218, 5, 52, "Output",ExpressionUUID->"0e8bf41a-b8ea-4e80-944d-cb7ee1c063f1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[644769, 13004, 163, 3, 98, "Subsubsection",ExpressionUUID->"34b05369-9224-4766-8386-165ded8c66b7"],
Cell[644935, 13009, 420, 10, 55, "Text",ExpressionUUID->"8c0cb252-57cd-4814-96e1-54a47c446bf1"],
Cell[645358, 13021, 305, 6, 105, "Input",ExpressionUUID->"189a29d3-5e75-4b0b-b1ec-aebff6c18f94"],
Cell[CellGroupData[{
Cell[645688, 13031, 152, 3, 64, "Input",ExpressionUUID->"833a9cda-57b7-483d-9a94-baa4ec4abd2f"],
Cell[645843, 13036, 152, 3, 52, "Output",ExpressionUUID->"ff88bb3d-0a2b-4680-aad8-98c378af8331"]
}, Open  ]],
Cell[CellGroupData[{
Cell[646032, 13044, 152, 3, 64, "Input",ExpressionUUID->"ce855136-5931-40fe-afbc-6879753b2942"],
Cell[646187, 13049, 153, 3, 52, "Output",ExpressionUUID->"f21810f6-4b66-49e1-86bc-e505d4a4a3d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[646377, 13057, 154, 3, 64, "Input",ExpressionUUID->"9f2feb21-674e-42a9-ad61-c2df6f24e899"],
Cell[646534, 13062, 153, 3, 52, "Output",ExpressionUUID->"09feff20-930c-4b94-8f97-91f1852e4e3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[646724, 13070, 152, 3, 64, "Input",ExpressionUUID->"77f2d223-5a46-40b1-bc79-994177747821"],
Cell[646879, 13075, 153, 3, 52, "Output",ExpressionUUID->"9456bbe8-88b8-4fed-abe3-e3350bdc2e77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[647069, 13083, 152, 3, 64, "Input",ExpressionUUID->"e198be05-6e1b-48e5-b388-87f52d8e57cb"],
Cell[647224, 13088, 155, 3, 52, "Output",ExpressionUUID->"bc6c5265-7281-4865-8f3d-3bacaf663687"]
}, Open  ]],
Cell[CellGroupData[{
Cell[647416, 13096, 152, 3, 64, "Input",ExpressionUUID->"cb4c24ea-bce8-4963-b5c7-f06f8e3497c0"],
Cell[647571, 13101, 153, 3, 52, "Output",ExpressionUUID->"8edd358d-2b3d-4260-9ea2-bedbe2c03f54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[647761, 13109, 243, 5, 64, "Input",ExpressionUUID->"872a3cdd-6787-43b6-b9e6-d35e5c095aef"],
Cell[648007, 13116, 218, 5, 52, "Output",ExpressionUUID->"4a2699af-82eb-4b93-ac32-0368ad39ae51"]
}, Open  ]],
Cell[648240, 13124, 352, 10, 55, "Text",ExpressionUUID->"cce20700-9c29-4445-abb0-10c2f97fa2bf"],
Cell[CellGroupData[{
Cell[648617, 13138, 127, 3, 64, "Input",ExpressionUUID->"e7b799b5-26c8-4dde-9fba-4a9214fe4655"],
Cell[648747, 13143, 8982, 227, 210, "Output",ExpressionUUID->"f0294aeb-c7c5-477d-a3bc-1e31164bd669"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[657778, 13376, 227, 4, 98, "Subsubsection",ExpressionUUID->"93590c55-7e80-45de-8a4c-0b5a6a91c756"],
Cell[658008, 13382, 434, 6, 55, "Text",ExpressionUUID->"7401284d-b501-45dd-8c88-23d3f5f3eb83"],
Cell[CellGroupData[{
Cell[658467, 13392, 198, 4, 64, "Input",ExpressionUUID->"5ddbdbbb-353d-4ae6-8ee2-2efb890379c1"],
Cell[658668, 13398, 12513, 300, 144, "Output",ExpressionUUID->"7333f395-e3b8-437b-9aa2-dda1de030bf5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[671218, 13703, 203, 4, 64, "Input",ExpressionUUID->"4d72ed7f-c7f9-4fa2-964e-6113735120aa"],
Cell[671424, 13709, 366, 9, 62, "Message",ExpressionUUID->"077aa7c9-0e08-450f-a403-c4c7a6d2bd89"],
Cell[671793, 13720, 153, 3, 52, "Output",ExpressionUUID->"5bb9a5d7-46b8-415d-a4ed-86dfc622889d"]
}, Open  ]],
Cell[671961, 13726, 229, 4, 64, "Input",ExpressionUUID->"06ed3c88-c276-4761-8087-20ccab5444c7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[672251, 13737, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"6d5ab0f1-edee-43cb-a3b9-1ae558c521e1",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[672398, 13743, 391, 6, 174, "Section",ExpressionUUID->"9b918f0f-9dd8-4e27-bbea-dd504c35d527"],
Cell[CellGroupData[{
Cell[672814, 13753, 134, 3, 98, "Subsubsection",ExpressionUUID->"7f3df6e1-4e68-401c-9ebd-8cf618af4d69"],
Cell[CellGroupData[{
Cell[672973, 13760, 229, 5, 64, "Input",ExpressionUUID->"099f1147-f8a9-4a68-a044-d9f7b858c755"],
Cell[673205, 13767, 153, 3, 52, "Output",ExpressionUUID->"ee59950f-5061-496e-b985-3595de2d1432"]
}, Open  ]],
Cell[673373, 13773, 128, 3, 64, "Input",ExpressionUUID->"c21b6248-32ca-4280-896c-ed1f069874df"],
Cell[CellGroupData[{
Cell[673526, 13780, 152, 3, 64, "Input",ExpressionUUID->"fc9b6b83-b8b7-4cbb-8223-39211062b76a"],
Cell[673681, 13785, 153, 3, 52, "Output",ExpressionUUID->"0fb7c6cc-f8ed-4362-a4f0-b4a75d4d5745"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[673883, 13794, 132, 3, 98, "Subsubsection",ExpressionUUID->"6ca31223-6013-4143-a1af-e27bed75732d"],
Cell[674018, 13799, 141, 3, 64, "Input",ExpressionUUID->"5ba1e235-c455-4561-be99-f1022d0d66d5"],
Cell[CellGroupData[{
Cell[674184, 13806, 195, 4, 64, "Input",ExpressionUUID->"af3807b7-0da0-49d8-9f9f-78cb20ef99ca"],
Cell[674382, 13812, 8106, 206, 203, "Output",ExpressionUUID->"088228be-8065-445c-97c8-ac7c51228f48"]
}, Open  ]],
Cell[682503, 14021, 520, 15, 55, "Text",ExpressionUUID->"1971cd9e-7a08-4059-a945-3b04e1556c3e"],
Cell[683026, 14038, 345, 10, 105, "Input",ExpressionUUID->"08023e6c-2821-4886-8359-8e4ec3d79057",
 CellID->8932126],
Cell[683374, 14050, 406, 10, 64, "Input",ExpressionUUID->"68bd7ec8-6f18-440d-83fa-14b000329e63",
 CellID->830747278],
Cell[CellGroupData[{
Cell[683805, 14064, 165, 3, 64, "Input",ExpressionUUID->"c4a0c845-f543-4d1f-af0f-5e33c13de29c",
 CellID->40044875],
Cell[683973, 14069, 763, 21, 52, "Output",ExpressionUUID->"c3e84d49-4a0b-4897-bd10-fc1693641b78"]
}, Open  ]],
Cell[684751, 14093, 373, 9, 64, "Input",ExpressionUUID->"b7269535-99ec-49d6-a4fb-0b528c9f1b85",
 CellID->559918265],
Cell[CellGroupData[{
Cell[685149, 14106, 165, 3, 64, "Input",ExpressionUUID->"f1a470dc-b4cb-44e8-acd5-9647168d8d2f",
 CellID->20424797],
Cell[685317, 14111, 231, 6, 52, "Output",ExpressionUUID->"cd957911-5409-4cd1-b99d-86837022f4f5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[685597, 14123, 133, 3, 98, "Subsubsection",ExpressionUUID->"d512144e-993d-4fef-ab5f-2351e34cc948"],
Cell[685733, 14128, 142, 3, 64, "Input",ExpressionUUID->"05aa2f7c-3a23-4430-8617-c2f3e46c7422"],
Cell[CellGroupData[{
Cell[685900, 14135, 195, 4, 64, "Input",ExpressionUUID->"78705c0d-b107-4a1a-b109-7497c45fc746"],
Cell[686098, 14141, 237, 5, 52, "Output",ExpressionUUID->"d01ba5a3-1d74-4d1c-9b7c-70788edb9c8f"]
}, Open  ]],
Cell[686350, 14149, 208, 4, 64, "Input",ExpressionUUID->"2a062b09-de57-4f64-9d8a-f675c545f814"],
Cell[686561, 14155, 487, 12, 64, "Input",ExpressionUUID->"ee3a2610-36d1-4d74-8d5c-92062a02b962"],
Cell[687051, 14169, 434, 12, 64, "Input",ExpressionUUID->"e7d2893b-f0d4-4635-ac7c-7f1a35794b7f"],
Cell[687488, 14183, 214, 4, 64, "Input",ExpressionUUID->"18aa766e-7b85-4a18-88d1-988e07b8fd4b"],
Cell[687705, 14189, 376, 11, 64, "Input",ExpressionUUID->"19925c56-7c71-450d-bd8f-572f1bb0e399"],
Cell[688084, 14202, 208, 4, 64, "Input",ExpressionUUID->"e98a34c8-bb3c-42ad-a854-f190cf2bb933"],
Cell[688295, 14208, 378, 11, 64, "Input",ExpressionUUID->"0c6ec751-1bb6-42af-8c71-f23f6993dff9"],
Cell[688676, 14221, 229, 4, 64, "Input",ExpressionUUID->"53852a8f-8f11-4abc-b2aa-85d748536b65"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[688966, 14232, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"5f0e4d2a-cfa2-4e1b-aa08-1971ff8a6f78",
 CellTags->"SlideShowHeader"],
Cell[689091, 14236, 232, 5, 185, "Input",ExpressionUUID->"cea6d92d-4c78-4c5d-8d95-922764eff497"],
Cell[689326, 14243, 416, 9, 309, "Title",ExpressionUUID->"e944ee89-4883-430b-bb51-bca6c8b41515"]
}, Open  ]],
Cell[CellGroupData[{
Cell[689779, 14257, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"be2eb8f8-3ad4-480d-89b0-e459abe844f1",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[689926, 14263, 210, 4, 174, "Section",ExpressionUUID->"6b0a6bbd-9893-4c42-a581-48e232c753bc"],
Cell[CellGroupData[{
Cell[690161, 14271, 227, 4, 98, "Subsubsection",ExpressionUUID->"19a6b983-d99e-44dd-a367-10f27879d57b"],
Cell[690391, 14277, 357, 10, 55, "Text",ExpressionUUID->"27614e01-a58c-44f6-9e02-d5aab30a576f"],
Cell[CellGroupData[{
Cell[690773, 14291, 363, 9, 64, "Input",ExpressionUUID->"cf7cd7bd-41c7-456b-863e-ddc9a5b419a0"],
Cell[CellGroupData[{
Cell[691161, 14304, 177, 4, 59, "Print",ExpressionUUID->"fc11d1ff-5a81-4303-a23d-c0de68932ae7"],
Cell[691341, 14310, 180, 4, 59, "Print",ExpressionUUID->"9f13b294-31f9-4d06-982d-dfa3aee9c36f"],
Cell[691524, 14316, 177, 4, 59, "Print",ExpressionUUID->"2fa96f74-526f-46db-bf96-cd4f0aecd699"],
Cell[691704, 14322, 180, 4, 59, "Print",ExpressionUUID->"5d2ca496-836d-4b52-ab59-2a6e73d88300"],
Cell[691887, 14328, 180, 4, 59, "Print",ExpressionUUID->"94a39b06-4998-4d44-9cf1-0f02befc5b29"],
Cell[692070, 14334, 180, 4, 59, "Print",ExpressionUUID->"f5b4036b-b68a-4ce1-81fb-22d188fb7990"],
Cell[692253, 14340, 180, 4, 59, "Print",ExpressionUUID->"dbe13c04-6933-43b5-8d00-7bc3f93746b5"],
Cell[692436, 14346, 178, 4, 59, "Print",ExpressionUUID->"ee26309e-d79d-437e-b296-6f44b414c95d"],
Cell[692617, 14352, 178, 4, 59, "Print",ExpressionUUID->"be6e7a81-895a-4cac-a03b-9ba7e119aea0"],
Cell[692798, 14358, 179, 4, 59, "Print",ExpressionUUID->"bc80e408-bc7b-4ce9-a4f4-615e35ecfd3c"]
}, Open  ]]
}, Open  ]],
Cell[693004, 14366, 388, 11, 55, "Text",ExpressionUUID->"19462878-6c88-4d33-8bb3-4f18117b4cb2"],
Cell[CellGroupData[{
Cell[693417, 14381, 465, 12, 145, "Input",ExpressionUUID->"29980054-c1a5-408a-b9f1-5a5315b5f4d8"],
Cell[CellGroupData[{
Cell[693907, 14397, 180, 4, 59, "Print",ExpressionUUID->"d60cb56e-0fb3-43a8-ba44-17bea47f3faa"],
Cell[694090, 14403, 178, 4, 59, "Print",ExpressionUUID->"bb525d0c-6bb2-47f1-b597-442d5216928a"],
Cell[694271, 14409, 178, 4, 59, "Print",ExpressionUUID->"a87eb884-3df4-4936-8583-ee24ebc8f4c1"],
Cell[694452, 14415, 178, 4, 59, "Print",ExpressionUUID->"a7383ac7-04fe-4f02-b5b3-c2f15977f640"],
Cell[694633, 14421, 180, 4, 59, "Print",ExpressionUUID->"749f59c5-352c-49b6-a878-0d1e6cbefb03"],
Cell[694816, 14427, 178, 4, 59, "Print",ExpressionUUID->"d59f5ee8-e54d-499e-8b9f-e228265ad315"],
Cell[694997, 14433, 178, 4, 59, "Print",ExpressionUUID->"45af7c29-85b2-4575-9f36-9fb593a20d91"],
Cell[695178, 14439, 178, 4, 59, "Print",ExpressionUUID->"5cfe8141-9480-4b2a-899d-6a2074693cb7"],
Cell[695359, 14445, 180, 4, 59, "Print",ExpressionUUID->"7e8ec6d5-9475-4907-9fb7-a061a7015cf1"],
Cell[695542, 14451, 181, 4, 59, "Print",ExpressionUUID->"f0904c5a-8b3d-4370-8ea3-668b50dd7cee"]
}, Open  ]]
}, Open  ]],
Cell[695750, 14459, 351, 10, 55, "Text",ExpressionUUID->"1df6bc0d-76ab-42c5-9822-5a6a6b36b94a"],
Cell[CellGroupData[{
Cell[696126, 14473, 322, 8, 64, "Input",ExpressionUUID->"688b11ca-cbca-4f4b-960c-811846d7e8fe"],
Cell[CellGroupData[{
Cell[696473, 14485, 178, 4, 59, "Print",ExpressionUUID->"1e4bdb2a-f7e2-4683-812d-7d8de855c9f3"],
Cell[696654, 14491, 180, 4, 59, "Print",ExpressionUUID->"b9c15eaf-fe64-4489-a7a4-7316b269386f"],
Cell[696837, 14497, 178, 4, 59, "Print",ExpressionUUID->"471040dd-e247-4a4b-8e3d-e8c291399a4e"],
Cell[697018, 14503, 180, 4, 59, "Print",ExpressionUUID->"fbfcb1a5-c794-4155-8a0c-e84e0e4fb745"],
Cell[697201, 14509, 178, 4, 59, "Print",ExpressionUUID->"a7d2c917-73d8-4dbe-a5c4-05671d9d6f0e"],
Cell[697382, 14515, 180, 4, 59, "Print",ExpressionUUID->"c930663f-d610-4a86-80e6-0a979b822cdf"],
Cell[697565, 14521, 178, 4, 59, "Print",ExpressionUUID->"63a65bd5-f705-4f42-8f3b-1f2c04152a99"],
Cell[697746, 14527, 178, 4, 59, "Print",ExpressionUUID->"687fb533-9902-4d7e-96d8-2d7cd93cdf6c"],
Cell[697927, 14533, 180, 4, 59, "Print",ExpressionUUID->"4f5cf821-9157-4c1f-a75d-c4a6f99be7cd"],
Cell[698110, 14539, 181, 4, 59, "Print",ExpressionUUID->"3632058a-e0da-4e77-8a2c-6b5f1bd370ea"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[698352, 14550, 196, 3, 98, "Subsubsection",ExpressionUUID->"8465c2fd-2018-403e-8689-f8296fb216f4"],
Cell[698551, 14555, 441, 10, 56, "Text",ExpressionUUID->"7d483f1d-719e-4cd2-9e52-0970305e1d3a"],
Cell[CellGroupData[{
Cell[699017, 14569, 367, 9, 64, "Input",ExpressionUUID->"e220efc2-0bd0-40ba-981c-03823f9fde8d"],
Cell[699387, 14580, 295, 7, 52, "Output",ExpressionUUID->"bd5f87b5-fdae-4d1e-a3d1-2b0ee6a432d9"]
}, Open  ]],
Cell[699697, 14590, 427, 6, 55, "Text",ExpressionUUID->"9c17813b-2c29-4ee6-ab75-a2c8dcf48b04"],
Cell[CellGroupData[{
Cell[700149, 14600, 311, 8, 64, "Input",ExpressionUUID->"879a9a02-938f-41e3-ac8b-d67737254dc8"],
Cell[700463, 14610, 373, 10, 52, "Output",ExpressionUUID->"b1f565ad-3e45-47f9-86ee-ded4c25a22e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[700873, 14625, 397, 8, 64, "Input",ExpressionUUID->"7aee6c0d-ce4e-4fbc-b7cd-458f5ca39944"],
Cell[701273, 14635, 373, 10, 52, "Output",ExpressionUUID->"81296041-930a-4d16-a78d-5aa886bfc9eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[701683, 14650, 807, 17, 64, "Input",ExpressionUUID->"ed02d733-f8f5-4c10-a503-7ac3c694449d"],
Cell[702493, 14669, 384, 10, 52, "Output",ExpressionUUID->"37815c9c-4f2c-49b8-a613-ece63688791a"]
}, Open  ]],
Cell[702892, 14682, 559, 12, 55, "Text",ExpressionUUID->"89a97c47-e867-4f81-9f02-e86b31bf233a"],
Cell[CellGroupData[{
Cell[703476, 14698, 435, 12, 64, "Input",ExpressionUUID->"6dc8d1f7-b50d-426a-9a11-717e4bf2e8e2"],
Cell[703914, 14712, 370, 11, 52, "Output",ExpressionUUID->"97bd96c5-a5cc-45eb-8ab4-9a3b6599f854"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[704333, 14729, 194, 3, 98, "Subsubsection",ExpressionUUID->"95781553-639e-4fab-83dd-332634b7faf8"],
Cell[704530, 14734, 473, 11, 55, "Text",ExpressionUUID->"43b8b924-5ae8-4ca6-834e-6f10d0f4d6a1"],
Cell[CellGroupData[{
Cell[705028, 14749, 239, 5, 64, "Input",ExpressionUUID->"89f2df6a-68aa-4d3e-8cd8-d7c6a83003c7"],
Cell[705270, 14756, 300, 8, 52, "Output",ExpressionUUID->"cee15b33-82eb-4824-9041-82c0dbc07bb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[705607, 14769, 177, 4, 64, "Input",ExpressionUUID->"54664dc1-96d8-42fd-aaff-d53911b082dc"],
Cell[705787, 14775, 696, 21, 52, "Output",ExpressionUUID->"a67b0b4b-a005-4937-b7af-0f1056d21059"]
}, Open  ]],
Cell[706498, 14799, 497, 11, 55, "Text",ExpressionUUID->"1adb04d7-7631-482a-a742-032c9920ce8d"],
Cell[CellGroupData[{
Cell[707020, 14814, 248, 7, 64, "Input",ExpressionUUID->"e9ef71f9-aeba-4326-a5f0-d8dadca9f78b"],
Cell[707271, 14823, 385, 12, 52, "Output",ExpressionUUID->"346e6d5c-5f9f-4ac8-b549-210f4dbcbd8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[707693, 14840, 317, 8, 64, "Input",ExpressionUUID->"ed0c3c16-c094-444a-8318-2f2cd59f2efe"],
Cell[708013, 14850, 832, 27, 52, "Output",ExpressionUUID->"74c66add-1416-4d81-a200-a904c9a0d7ad"]
}, Open  ]],
Cell[708860, 14880, 225, 3, 64, "Input",ExpressionUUID->"fa7e691a-f3a9-437f-90d6-36d6dd3ff9b5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[709146, 14890, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"8412563e-41cf-4ade-86fe-66d568ed668b",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[709293, 14896, 271, 4, 174, "Section",ExpressionUUID->"4bd2ab68-c511-4d5e-ba54-a0ac2add78d5"],
Cell[CellGroupData[{
Cell[709589, 14904, 214, 4, 98, "Subsubsection",ExpressionUUID->"3719fe58-c31e-498f-93a8-a025925c2d88"],
Cell[709806, 14910, 281, 5, 55, "Text",ExpressionUUID->"e5917a45-ba4f-4d7d-99d1-5c325ffbbd25"],
Cell[CellGroupData[{
Cell[710112, 14919, 309, 7, 64, "Input",ExpressionUUID->"c894d4aa-f674-417c-88d5-a09468b61312"],
Cell[710424, 14928, 373, 9, 52, "Output",ExpressionUUID->"2789830e-54db-4f4a-a2f4-063206d9be28"]
}, Open  ]],
Cell[710812, 14940, 499, 12, 55, "Text",ExpressionUUID->"795c35ed-a81c-4483-bf80-9e76b66b8098"],
Cell[CellGroupData[{
Cell[711336, 14956, 334, 8, 64, "Input",ExpressionUUID->"57dffd0a-8c11-413b-aee2-edb50b64fa1f"],
Cell[711673, 14966, 300, 7, 52, "Output",ExpressionUUID->"172afdbf-4e91-4c91-8416-0dfd6b49db9f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[712022, 14979, 212, 4, 98, "Subsubsection",ExpressionUUID->"9cc9396b-afdf-4356-9752-46dd18050022"],
Cell[712237, 14985, 237, 4, 55, "Text",ExpressionUUID->"850bb425-31f9-448e-b8a5-bfe298349e80"],
Cell[CellGroupData[{
Cell[712499, 14993, 326, 8, 64, "Input",ExpressionUUID->"6023f42a-f33d-421c-98e4-bc4be907616a"],
Cell[712828, 15003, 399, 12, 52, "Output",ExpressionUUID->"be096714-ac67-46e6-8509-c14588389184"]
}, Open  ]],
Cell[713242, 15018, 420, 6, 55, "Text",ExpressionUUID->"11387bc5-f0be-442e-8551-ead96afd0247"],
Cell[CellGroupData[{
Cell[713687, 15028, 253, 7, 64, "Input",ExpressionUUID->"96d330f2-3bb8-47b5-ac3d-fa18964e42a6"],
Cell[713943, 15037, 306, 9, 52, "Output",ExpressionUUID->"c22762a3-98e4-40d9-9c49-d5955dbafd96"]
}, Open  ]],
Cell[CellGroupData[{
Cell[714286, 15051, 703, 21, 64, "Input",ExpressionUUID->"b7aa0653-b78d-4a58-be2b-a541a36fc107"],
Cell[714992, 15074, 676, 23, 52, "Output",ExpressionUUID->"d119d7dc-d87f-4eea-88be-1eb203348e28"]
}, Open  ]],
Cell[715683, 15100, 681, 18, 55, "Text",ExpressionUUID->"ad1aa1fb-7908-4b34-9c0e-fb372c696dbf"],
Cell[CellGroupData[{
Cell[716389, 15122, 455, 14, 64, "Input",ExpressionUUID->"8e6c7d79-10a1-415a-bc5d-6b666c58b11f"],
Cell[716847, 15138, 537, 17, 52, "Output",ExpressionUUID->"4e0a8d28-0517-41ea-ab05-131e64e9f206"]
}, Open  ]],
Cell[717399, 15158, 229, 4, 64, "Input",ExpressionUUID->"6f8e68eb-897c-424e-a259-7c19ce925060"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[717689, 15169, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"ba4b2765-5cc6-41fb-9cc4-61a051601f50",
 CellTags->"SlideShowHeader"],
Cell[717814, 15173, 232, 5, 185, "Input",ExpressionUUID->"254a114c-299e-4deb-adb4-4a6108cbfa1c"],
Cell[718049, 15180, 358, 8, 309, "Title",ExpressionUUID->"483f2302-a17a-438b-8fe6-dc5e8573873f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[718444, 15193, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"80ce7689-f042-4dab-aaed-432bdf774165",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[718591, 15199, 253, 4, 174, "Section",ExpressionUUID->"c030526a-d5d5-4cbf-a14b-39c02267f79f"],
Cell[718847, 15205, 571, 13, 55, "Text",ExpressionUUID->"e2b190e2-b0bd-43e8-8753-fd3bdb566e92"],
Cell[CellGroupData[{
Cell[719443, 15222, 253, 5, 114, "Subsection",ExpressionUUID->"c251380d-0045-4551-bfee-c471719e476a"],
Cell[719699, 15229, 365, 8, 64, "Input",ExpressionUUID->"c0172915-4e0b-44e0-8529-7111b0c11717"],
Cell[720067, 15239, 377, 9, 64, "Input",ExpressionUUID->"7a54f7e1-19a9-468f-8fbd-7fa62e591979"],
Cell[720447, 15250, 512, 11, 64, "Input",ExpressionUUID->"9484aaa2-ff5b-40fb-92fd-2e6f22c1c8b9"],
Cell[720962, 15263, 507, 14, 64, "Input",ExpressionUUID->"ae66c7ef-9200-4be6-a26a-e2d9efb1e242"],
Cell[CellGroupData[{
Cell[721494, 15281, 367, 10, 64, "Input",ExpressionUUID->"4b6ce607-9336-4e57-93f8-7dd7a6d42ffa"],
Cell[721864, 15293, 621, 19, 104, "Output",ExpressionUUID->"469ba25c-9dc1-47c8-b743-d86dc4c972a1"]
}, Open  ]],
Cell[722500, 15315, 486, 7, 55, "Text",ExpressionUUID->"24f37b87-65a8-42b1-aa25-dfb6e43795dc"],
Cell[722989, 15324, 339, 5, 56, "Item",ExpressionUUID->"e7f6b306-5c72-426f-9eba-d8d089371c83"],
Cell[CellGroupData[{
Cell[723353, 15333, 485, 11, 64, "Input",ExpressionUUID->"5fd73a33-d596-412b-ad44-d471171c3e38"],
Cell[723841, 15346, 3470, 77, 293, "Output",ExpressionUUID->"0a0018b6-1180-4f2c-9bcc-abfe939de162"]
}, Open  ]],
Cell[727326, 15426, 357, 6, 56, "Item",ExpressionUUID->"793aa263-a446-409b-aedc-74aff2b0c03b"],
Cell[CellGroupData[{
Cell[727708, 15436, 468, 12, 64, "Input",ExpressionUUID->"0aeaf4a3-f509-42ff-a2d0-57ef67ea6440"],
Cell[CellGroupData[{
Cell[728201, 15452, 179, 4, 59, "Print",ExpressionUUID->"0c127c0f-3f78-4572-9050-e072c2d48a36"],
Cell[728383, 15458, 179, 4, 59, "Print",ExpressionUUID->"eff569e2-6cdd-43f5-9370-62461c2dab04"],
Cell[728565, 15464, 179, 4, 59, "Print",ExpressionUUID->"7ae03312-a578-4dae-88b1-2b89d11ed593"],
Cell[728747, 15470, 179, 4, 59, "Print",ExpressionUUID->"5fcbfa88-e08c-42c5-a2d1-2e8112359345"],
Cell[728929, 15476, 179, 4, 59, "Print",ExpressionUUID->"040a315d-16f8-46c0-a99e-117fd346fa13"]
}, Open  ]]
}, Open  ]],
Cell[729135, 15484, 229, 4, 64, "Input",ExpressionUUID->"3e6f0c21-53d8-419e-b786-0488f39519a9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[729425, 15495, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"248890c5-9be1-4217-87f8-94e5801b025c",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[729572, 15501, 321, 5, 174, "Section",ExpressionUUID->"1628c2e1-6c7e-476b-83c0-72a54f7b7f2b"],
Cell[CellGroupData[{
Cell[729918, 15510, 254, 5, 98, "Subsubsection",ExpressionUUID->"19a5b6be-c7c3-4c73-8d1e-bf1d033dba77"],
Cell[730175, 15517, 618, 10, 55, "Text",ExpressionUUID->"e17923e6-8510-4485-8727-97c35f70e833"],
Cell[CellGroupData[{
Cell[730818, 15531, 207, 4, 64, "Input",ExpressionUUID->"ef65f1ca-f00e-4fb2-beb2-91deeec1573d"],
Cell[731028, 15537, 286, 7, 52, "Output",ExpressionUUID->"3fa08382-90a8-4554-8e2f-1d50fb6d7095"]
}, Open  ]],
Cell[CellGroupData[{
Cell[731351, 15549, 292, 7, 64, "Input",ExpressionUUID->"dedf9d84-9740-44d4-a65f-4292e195df17"],
Cell[731646, 15558, 286, 7, 52, "Output",ExpressionUUID->"cac5dcb2-6fe7-4f70-b308-a3f92ec78659"]
}, Open  ]],
Cell[CellGroupData[{
Cell[731969, 15570, 336, 8, 64, "Input",ExpressionUUID->"d05fa0df-78f5-4e52-971f-dd34b1889486"],
Cell[732308, 15580, 447, 13, 52, "Output",ExpressionUUID->"0d5bbff4-1bce-4ed5-b624-ada20eae1e24"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[732804, 15599, 255, 5, 98, "Subsubsection",ExpressionUUID->"b9316f49-624a-4937-98f8-7b18be1f0bc4"],
Cell[733062, 15606, 342, 6, 55, "Text",ExpressionUUID->"253adfae-990e-4079-bc4b-e31d1e6e0859"],
Cell[CellGroupData[{
Cell[733429, 15616, 8623, 164, 79, "Input",ExpressionUUID->"6620406b-cbf9-40d4-bfbd-375ddc9019dd"],
Cell[742055, 15782, 153, 3, 52, "Output",ExpressionUUID->"bdd15253-3fd3-4a5d-89f7-8cca4f08b7b7"]
}, Open  ]],
Cell[742223, 15788, 581, 14, 95, "Text",ExpressionUUID->"57b796bb-2707-4b3b-9855-b9cdcb6a7a68"],
Cell[CellGroupData[{
Cell[742829, 15806, 782, 24, 64, "Input",ExpressionUUID->"c271da09-9008-4afc-9a28-986e4610deac"],
Cell[743614, 15832, 198, 5, 52, "Output",ExpressionUUID->"cd133d0f-f153-4212-8e2f-ee266e8f76c8"]
}, Open  ]],
Cell[743827, 15840, 225, 3, 64, "Input",ExpressionUUID->"1d2029d4-058d-46e8-a985-d514a8336e38"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[744113, 15850, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"e12ae8a2-55dc-43d4-ad70-82d0a2dfa9bf",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[744260, 15856, 318, 5, 174, "Section",ExpressionUUID->"695c9be0-1d31-480e-885b-69ab6a528f6c"],
Cell[CellGroupData[{
Cell[744603, 15865, 225, 4, 98, "Subsubsection",ExpressionUUID->"b048543b-1502-4c4e-926e-dbadc99dce23"],
Cell[744831, 15871, 315, 8, 64, "Input",ExpressionUUID->"4d6d35c2-efd8-4e76-a5a2-6ab2ee4ec53d"],
Cell[745149, 15881, 591, 18, 57, "Text",ExpressionUUID->"28c6b294-5b4a-4b7e-a6de-ee5db584a2dd"],
Cell[CellGroupData[{
Cell[745765, 15903, 346, 8, 64, "Input",ExpressionUUID->"fd6cd8d0-79c5-4fbd-b3ee-6ee262fe9247"],
Cell[746114, 15913, 198, 5, 52, "Output",ExpressionUUID->"af328ce3-6371-4ef5-9f3e-79cfaa139129"]
}, Open  ]],
Cell[746327, 15921, 383, 6, 55, "Text",ExpressionUUID->"d50a252b-cf07-4a21-a4f3-34e00cff8d65"],
Cell[CellGroupData[{
Cell[746735, 15931, 360, 9, 64, "Input",ExpressionUUID->"f76e5ab0-ba08-4f96-b652-18a38f39967c"],
Cell[747098, 15942, 153, 3, 52, "Output",ExpressionUUID->"32cf4b2c-81af-43c7-8549-105186909317"]
}, Open  ]],
Cell[CellGroupData[{
Cell[747288, 15950, 363, 8, 64, "Input",ExpressionUUID->"a4e901d5-cadd-4985-b3b1-313bc18aa884"],
Cell[747654, 15960, 153, 3, 52, "Output",ExpressionUUID->"9660e1ce-32a0-49c7-ad30-faa4afb23d00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[747844, 15968, 598, 15, 145, "Input",ExpressionUUID->"8c6f8189-660f-46db-902f-d0f360404909"],
Cell[748445, 15985, 152, 3, 52, "Output",ExpressionUUID->"bbb178f1-5599-4553-bf53-48627cb92ae0"],
Cell[748600, 15990, 210, 5, 52, "Output",ExpressionUUID->"b723d1f0-96bd-46da-b849-697913d5b339"],
Cell[748813, 15997, 200, 5, 52, "Output",ExpressionUUID->"828a3a2e-46e4-48cf-accd-2dbf42d811de"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[749062, 16008, 256, 5, 98, "Subsubsection",ExpressionUUID->"8c90e850-75f6-449a-b2f8-393908a3ece7"],
Cell[749321, 16015, 315, 8, 64, "Input",ExpressionUUID->"9621743f-b3ba-4630-bd0f-322545afc1ee"],
Cell[749639, 16025, 293, 5, 55, "Text",ExpressionUUID->"f6971c42-0e3d-4e09-b26e-e0bb56aaac0f"],
Cell[CellGroupData[{
Cell[749957, 16034, 413, 10, 105, "Input",ExpressionUUID->"ef17beef-850e-48a3-be30-03d995c5657b"],
Cell[750373, 16046, 229, 5, 52, "Output",ExpressionUUID->"ebc6a570-7050-4ac5-bc46-89c9a4c779a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[750639, 16056, 415, 10, 105, "Input",ExpressionUUID->"1606a273-caae-41b5-81f4-b664afef7a07"],
Cell[751057, 16068, 232, 5, 52, "Output",ExpressionUUID->"d1852701-70d2-4478-9589-73706b6847ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[751326, 16078, 550, 12, 105, "Input",ExpressionUUID->"5f99c13f-5b1a-49bd-932c-7c2c2aaaf19b"],
Cell[751879, 16092, 244, 6, 52, "Output",ExpressionUUID->"fa43822b-df3c-463a-9832-5362ca1b3400"]
}, Open  ]],
Cell[CellGroupData[{
Cell[752160, 16103, 549, 12, 105, "Input",ExpressionUUID->"e0aebb74-2c7e-4ee7-8dc5-ed24fc8003d7"],
Cell[752712, 16117, 258, 7, 52, "Output",ExpressionUUID->"29cce0c3-c9ff-40c3-be2d-22e8e28ff8d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[753007, 16129, 487, 12, 105, "Input",ExpressionUUID->"90ec3a7e-858c-46ac-965e-506626830fb6"],
Cell[753497, 16143, 270, 7, 52, "Output",ExpressionUUID->"043fd53e-13f9-40df-b28a-432fbdb29555"],
Cell[753770, 16152, 258, 7, 52, "Output",ExpressionUUID->"71430fcb-2448-40c1-9cad-3533bdccceac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[754065, 16164, 448, 11, 105, "Input",ExpressionUUID->"274b9991-bba9-4b4e-94bc-21b6d48437e8"],
Cell[754516, 16177, 270, 7, 52, "Output",ExpressionUUID->"71ed2834-31ac-4e7c-bebd-883971237ed1"],
Cell[754789, 16186, 260, 7, 52, "Output",ExpressionUUID->"90ffe7f2-8f58-4e49-8cda-f9569481d4d1"]
}, Open  ]],
Cell[755064, 16196, 229, 4, 64, "Input",ExpressionUUID->"e6099bc0-7e05-4a61-bd05-24a68545010c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[755354, 16207, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"71b9bc26-144a-4051-9c72-f2ff0b60b204",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[755501, 16213, 206, 4, 174, "Section",ExpressionUUID->"09137054-7071-438f-b818-144aa5300101"],
Cell[755710, 16219, 311, 6, 55, "Text",ExpressionUUID->"34263e4e-5716-4e5f-a221-d9ecd145d9d7"],
Cell[756024, 16227, 729, 14, 95, "Text",ExpressionUUID->"571ebe18-8060-4fe9-b0c9-bacb977363be"],
Cell[CellGroupData[{
Cell[756778, 16245, 809, 15, 64, "Input",ExpressionUUID->"1b7f038f-8696-4f41-af8f-a9a260fd2703"],
Cell[757590, 16262, 293, 7, 52, "Output",ExpressionUUID->"9f59f1cf-00d1-4f1e-9304-923d7ddc44e2"]
}, Open  ]],
Cell[757898, 16272, 229, 4, 55, "Text",ExpressionUUID->"a01a48d8-69a4-4166-a0ba-e1112671110b"],
Cell[CellGroupData[{
Cell[758152, 16280, 354, 9, 64, "Input",ExpressionUUID->"0c474cc7-695f-48e0-8090-601ce2f2beb0"],
Cell[758509, 16291, 260, 7, 52, "Output",ExpressionUUID->"d671eeaa-b861-4a39-badd-b5b9156311b4"]
}, Open  ]],
Cell[758784, 16301, 467, 7, 55, "Text",ExpressionUUID->"21050ba2-1d38-4447-ba0e-aa38f3e8ad6b"],
Cell[CellGroupData[{
Cell[759276, 16312, 56637, 938, 69, "Input",ExpressionUUID->"b8373890-75c2-42dd-9c0d-95bf579ba402"],
Cell[815916, 17252, 56260, 933, 146, "Output",ExpressionUUID->"48e19721-5eae-4f18-a5e3-ca0ede3b0cf6"]
}, Open  ]],
Cell[872191, 18188, 827, 20, 55, "Text",ExpressionUUID->"87dddaa4-03b3-477d-8f32-6836ededbf22"],
Cell[CellGroupData[{
Cell[873043, 18212, 231, 5, 64, "Input",ExpressionUUID->"8b12300c-28d2-423d-826e-6106164bdf50",
 CellTags->"Keys"],
Cell[873277, 18219, 299, 9, 52, "Output",ExpressionUUID->"bfb43bb6-aebe-436f-a536-11c8ba35f47f",
 CellTags->"Keys"]
}, Open  ]],
Cell[CellGroupData[{
Cell[873613, 18233, 235, 5, 64, "Input",ExpressionUUID->"e9fcc75c-551c-4015-a203-afedb9a8471c",
 CellTags->"Values"],
Cell[873851, 18240, 56050, 927, 146, "Output",ExpressionUUID->"1e43c229-7854-40ee-875c-55fa72274e1e",
 CellTags->"Values"]
}, Open  ]],
Cell[929916, 19170, 547, 8, 55, "Text",ExpressionUUID->"9b049143-794d-484b-a73b-edc08d550a0a"],
Cell[CellGroupData[{
Cell[930488, 19182, 408, 10, 64, "Input",ExpressionUUID->"fa3a74db-57ef-4d47-90df-525689f68ab6"],
Cell[930899, 19194, 376, 9, 52, "Output",ExpressionUUID->"0d57b1e4-33a5-4d02-8355-d72640cd43e0"]
}, Open  ]],
Cell[931290, 19206, 229, 4, 64, "Input",ExpressionUUID->"9655ce08-8d0f-4d3f-a363-3363d44d7a2e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[931568, 19216, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"fbbb04b9-eb53-4461-8f37-c90351ac142b",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[931715, 19222, 319, 5, 174, "Section",ExpressionUUID->"cd1f43ac-79e1-4f37-a568-7456e7197c16"],
Cell[932037, 19229, 56363, 935, 69, "Input",ExpressionUUID->"2c1c6fb0-94b7-4971-85f9-a2a16470e306"],
Cell[988403, 20166, 825, 20, 55, "Text",ExpressionUUID->"9bcf100f-f6ff-48c5-8259-eee4705a2644"],
Cell[CellGroupData[{
Cell[989253, 20190, 231, 5, 64, "Input",ExpressionUUID->"6a4ef16a-e25c-429e-a3c8-95f30d50504e",
 CellTags->"Keys"],
Cell[989487, 20197, 299, 9, 52, "Output",ExpressionUUID->"279888fc-9a6f-4a63-86d3-bdb2602f0e9f",
 CellTags->"Keys"]
}, Open  ]],
Cell[CellGroupData[{
Cell[989823, 20211, 235, 5, 64, "Input",ExpressionUUID->"eb0c32a2-c643-465a-a3d4-f2e4a6401f3a",
 CellTags->"Values"],
Cell[990061, 20218, 56050, 927, 146, "Output",ExpressionUUID->"9ac57039-b749-4867-ac3b-7f28aa57d9ef",
 CellTags->"Values"]
}, Open  ]],
Cell[1046126, 21148, 253, 4, 55, "Text",ExpressionUUID->"a9950a02-7623-44cc-a7bc-4ebedf1a3ada"],
Cell[CellGroupData[{
Cell[1046404, 21156, 472, 11, 64, "Input",ExpressionUUID->"2aee0d83-afcc-4226-a99e-07d538b7cda5"],
Cell[1046879, 21169, 153, 3, 52, "Output",ExpressionUUID->"9ef0782f-15be-433b-a721-b4f5a456a9d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1047069, 21177, 219, 4, 64, "Input",ExpressionUUID->"22505cef-37ce-4820-8622-931006757dc7"],
Cell[1047291, 21183, 55930, 924, 144, "Output",ExpressionUUID->"010998a5-fd1c-4bc4-a183-9fb2fb23ee09"]
}, Open  ]],
Cell[1103236, 22110, 283, 4, 55, "Text",ExpressionUUID->"302c1b48-b4d8-4e97-873d-6388c49fcf3f"],
Cell[CellGroupData[{
Cell[1103544, 22118, 230, 5, 64, "Input",ExpressionUUID->"12c14821-bb2a-4398-a10a-476d0fae2188"],
Cell[1103777, 22125, 153, 3, 52, "Output",ExpressionUUID->"6c9bfc75-c1b2-4165-a586-cec9f8d62b95"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1103967, 22133, 234, 5, 64, "Input",ExpressionUUID->"d9606828-1db3-4605-ba59-ed9c050faeff"],
Cell[1104204, 22140, 55929, 924, 144, "Output",ExpressionUUID->"e67f0881-c08e-4eb8-aed5-3e67ab8f0895"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1160170, 23069, 154, 3, 114, "Subsection",ExpressionUUID->"f4cf70dd-97f1-44ad-aa72-5581e57c405e"],
Cell[1160327, 23074, 615, 14, 55, "Text",ExpressionUUID->"70d404fc-150c-40fe-b8e8-ca93c5bcaa42"],
Cell[1160945, 23090, 56412, 935, 69, "Input",ExpressionUUID->"cd60745e-92e0-4138-be62-af898802720b"],
Cell[CellGroupData[{
Cell[1217382, 24029, 239, 5, 64, "Input",ExpressionUUID->"1a362dd4-d6e1-4294-a166-0d6eaa267854"],
Cell[1217624, 24036, 153, 3, 52, "Output",ExpressionUUID->"4be24176-9c61-4614-969a-e05b40225678"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1217814, 24044, 296, 7, 64, "Input",ExpressionUUID->"828acd58-3603-4ac6-b829-f8eedc8df79c"],
Cell[1218113, 24053, 56002, 926, 146, "Output",ExpressionUUID->"04f88ab1-fc7c-49db-8109-677ebb073838"]
}, Open  ]],
Cell[1274130, 24982, 280, 4, 55, "Text",ExpressionUUID->"0921f085-e9c5-4218-9243-c85db71ca6ac"],
Cell[1274413, 24988, 697, 19, 225, "Input",ExpressionUUID->"dea8cf71-d412-4903-94f5-0d2dca54a87b",
 CellID->1621510191],
Cell[CellGroupData[{
Cell[1275135, 25011, 186, 4, 64, "Input",ExpressionUUID->"9b51b805-516d-40d3-be44-d76c7634eddd",
 CellID->296193337],
Cell[1275324, 25017, 208, 5, 52, "Output",ExpressionUUID->"6e5a7ac6-7d6c-4d1b-8e56-d87f579c64e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1275569, 25027, 237, 5, 64, "Input",ExpressionUUID->"68532f91-da2f-4c61-b9bf-d54c2aaeb726"],
Cell[1275809, 25034, 208, 5, 52, "Output",ExpressionUUID->"5cdccee9-ddf5-4c88-a76e-aa28662057e8"]
}, Open  ]],
Cell[1276032, 25042, 229, 4, 64, "Input",ExpressionUUID->"38032ba6-83c6-409a-92df-46d83b5c4f28"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1276322, 25053, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"52572e46-8bc8-4c6d-a1ea-4057fe37a298",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1276469, 25059, 384, 6, 174, "Section",ExpressionUUID->"0b953d0d-da36-4e86-87b5-1dfb2046bff6"],
Cell[CellGroupData[{
Cell[1276878, 25069, 254, 4, 98, "Subsubsection",ExpressionUUID->"b1855f51-8049-44ab-bf4c-318e48d02285"],
Cell[CellGroupData[{
Cell[1277157, 25077, 555, 13, 145, "Input",ExpressionUUID->"b70d92a3-8b12-4c8d-a7aa-cf0ecbbb8371"],
Cell[1277715, 25092, 375, 9, 52, "Output",ExpressionUUID->"05224555-da33-480a-968b-d3452b0ccbd3"],
Cell[1278093, 25103, 373, 9, 52, "Output",ExpressionUUID->"e3c58747-4bc5-4556-90fc-68a5a2dc7f91"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1278515, 25118, 260, 4, 98, "Subsubsection",ExpressionUUID->"fa8e1d19-da05-4297-a48a-9339ee2a2179"],
Cell[1278778, 25124, 441, 12, 105, "Input",ExpressionUUID->"90eec06e-f162-41f3-9585-4d21db43e438"],
Cell[CellGroupData[{
Cell[1279244, 25140, 254, 5, 64, "Input",ExpressionUUID->"116059ca-60be-4bb5-bf33-ed5fd24b74ca"],
Cell[1279501, 25147, 373, 9, 52, "Output",ExpressionUUID->"8828adf2-b2f4-44ee-b538-6febae5603bc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1279923, 25162, 284, 4, 98, "Subsubsection",ExpressionUUID->"ed42fe97-9038-48ee-bb14-f0ab2dc519a6"],
Cell[CellGroupData[{
Cell[1280232, 25170, 308, 7, 64, "Input",ExpressionUUID->"35609803-2466-4ebb-9bd0-8aeefd474806"],
Cell[1280543, 25179, 493, 13, 52, "Output",ExpressionUUID->"ed18fe19-da76-41a8-8bdb-a2454c284326"]
}, Open  ]],
Cell[1281051, 25195, 294, 7, 64, "Input",ExpressionUUID->"aa28154d-b98e-475c-bda8-4d90b666a119"],
Cell[CellGroupData[{
Cell[1281370, 25206, 288, 7, 64, "Input",ExpressionUUID->"f1cefe05-ab90-4013-a9cd-d10f16333a83"],
Cell[1281661, 25215, 376, 9, 52, "Output",ExpressionUUID->"bde16d93-0712-4087-b3ad-f70aba7c08c3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1282086, 25230, 323, 5, 98, "Subsubsection",ExpressionUUID->"6eddd499-f092-4179-9468-a0ddafc78427"],
Cell[CellGroupData[{
Cell[1282434, 25239, 627, 17, 145, "Input",ExpressionUUID->"d88f861b-cac9-43ed-9755-8b2469575e5d"],
Cell[1283064, 25258, 372, 9, 52, "Output",ExpressionUUID->"0e434c7b-fe99-4c45-9e61-bc54e87a0dce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1283473, 25272, 306, 7, 64, "Input",ExpressionUUID->"55d8cf0c-7200-449d-99e4-2bbcc175b462"],
Cell[1283782, 25281, 415, 10, 52, "Output",ExpressionUUID->"5928ad68-da29-4d1d-86a9-92a5a0878b16"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1284246, 25297, 261, 4, 98, "Subsubsection",ExpressionUUID->"877471b8-ba73-464a-9be2-d8cdcff313f9"],
Cell[CellGroupData[{
Cell[1284532, 25305, 215, 4, 64, "Input",ExpressionUUID->"602b2f1c-5f4c-43be-99f0-f19c18dc993f"],
Cell[1284750, 25311, 413, 10, 52, "Output",ExpressionUUID->"9c031c32-d235-4f92-ab2e-56ae80e03fab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1285200, 25326, 247, 5, 64, "Input",ExpressionUUID->"bdc0e934-68f0-4537-a43a-af2f1a2f31fb"],
Cell[1285450, 25333, 373, 9, 52, "Output",ExpressionUUID->"cb1c1a8b-5d06-4974-aa1d-70b18b3dfbf1"]
}, Open  ]],
Cell[1285838, 25345, 229, 4, 64, "Input",ExpressionUUID->"dddee3f3-9ee4-4fe4-9c44-1d5e23660c2b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1286128, 25356, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"85cc6e0b-7b04-477d-a164-f1b1a3cb95f1",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1286275, 25362, 464, 7, 174, "Section",ExpressionUUID->"cf4bb002-d953-499e-8f14-b3c9dfb19a40"],
Cell[CellGroupData[{
Cell[1286764, 25373, 156, 3, 98, "Subsubsection",ExpressionUUID->"194f8246-2d3c-4f33-ac2d-e1de8dcfcb10"],
Cell[1286923, 25378, 732, 18, 55, "Text",ExpressionUUID->"a50aca2c-08aa-43eb-b241-12d2a387d9af"],
Cell[CellGroupData[{
Cell[1287680, 25400, 230, 6, 64, "Input",ExpressionUUID->"8e1fbae9-a9af-4f70-9bb3-8062f1ee953e"],
Cell[1287913, 25408, 10830, 142, 1413, "Output",ExpressionUUID->"e8d28148-8a6e-4fdd-93b3-29aa46199dae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1298780, 25555, 401, 10, 105, "Input",ExpressionUUID->"91b30b9a-e346-486d-9391-b08267f0d7ec"],
Cell[1299184, 25567, 629, 15, 52, "Output",ExpressionUUID->"23f88994-3755-45af-b6b8-9d669cfa6c13"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1299862, 25588, 166, 3, 98, "Subsubsection",ExpressionUUID->"464f7114-031e-474f-8a09-2e702db74a73"],
Cell[1300031, 25593, 641, 13, 55, "Text",ExpressionUUID->"f7be6e55-cf50-431c-8547-4681a64f0e30"],
Cell[CellGroupData[{
Cell[1300697, 25610, 288, 5, 64, "Input",ExpressionUUID->"39a53444-ebae-4444-98c1-886b6043ef4a"],
Cell[1300988, 25617, 481, 9, 52, "Output",ExpressionUUID->"f212b9c6-1ce0-4316-996f-5cb1d4f25f33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1301506, 25631, 280, 6, 64, "Input",ExpressionUUID->"890f9657-b01b-496e-a447-842ed98ebad6"],
Cell[1301789, 25639, 1060, 28, 93, "Output",ExpressionUUID->"000342ba-30dd-437a-876f-7b222088edbd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1302898, 25673, 160, 3, 98, "Subsubsection",ExpressionUUID->"ac40c9db-b9df-4a95-94fe-e3d2f03ac297"],
Cell[1303061, 25678, 835, 18, 56, "Text",ExpressionUUID->"f17b18e8-794a-44fe-a4be-7e5c25676584"],
Cell[CellGroupData[{
Cell[1303921, 25700, 438, 8, 225, "Input",ExpressionUUID->"145392ce-4700-438c-88a7-995f00744b68"],
Cell[1304362, 25710, 1269, 26, 133, "Output",ExpressionUUID->"2136d2db-60d4-44e9-a828-f74ef5239d45"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1305680, 25742, 160, 3, 98, "Subsubsection",ExpressionUUID->"0d731106-9476-42bc-937f-bdc2d6e5b54f"],
Cell[1305843, 25747, 756, 11, 95, "Text",ExpressionUUID->"f80cd209-da40-424b-b77e-00e8bb69ce68"],
Cell[1306602, 25760, 606, 9, 55, "Text",ExpressionUUID->"c84f4469-a710-4551-b0ab-17d9237215b2"],
Cell[CellGroupData[{
Cell[1307233, 25773, 490, 14, 64, "Input",ExpressionUUID->"ad9908d6-3dcc-4943-9577-f93ce5bee7b7"],
Cell[1307726, 25789, 396, 10, 52, "Output",ExpressionUUID->"7d319173-9316-4c98-8210-85b4569bfc11"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1308171, 25805, 187, 3, 98, "Subsubsection",ExpressionUUID->"927b7a3c-41ed-49a9-8d28-0c39a27b0e53"],
Cell[1308361, 25810, 527, 12, 55, "Text",ExpressionUUID->"dd4988ef-969a-4d31-adb5-64f4c8f2c46b"],
Cell[1308891, 25824, 321, 9, 55, "Text",ExpressionUUID->"6ebe7516-9910-402e-bdac-30ee6257edd4"],
Cell[CellGroupData[{
Cell[1309237, 25837, 618, 12, 225, "Input",ExpressionUUID->"be6fba03-b1ff-410b-b111-31a7ede9be23"],
Cell[1309858, 25851, 10117, 245, 591, "Output",ExpressionUUID->"ced16db0-149e-4cab-ac89-cdd4dac376aa"]
}, Open  ]],
Cell[1319990, 26099, 280, 5, 64, "Input",ExpressionUUID->"3a9fcd7c-33e4-4e2f-93ef-739ac53defec"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1320331, 26111, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"ebda8189-4da7-451d-aef7-74a6cf367e90",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1320478, 26117, 156, 3, 174, "Section",ExpressionUUID->"43287ad0-8912-4ae2-a604-2d78044d8381"],
Cell[1320637, 26122, 367, 5, 55, "Text",ExpressionUUID->"ff25d2a9-e328-4065-8438-056c331cbba4"],
Cell[CellGroupData[{
Cell[1321029, 26131, 791, 21, 105, "Input",ExpressionUUID->"8e712a25-282a-42f7-9ca2-5e830014ef90"],
Cell[1321823, 26154, 33032, 615, 159, "Output",ExpressionUUID->"f93b3fdd-977a-4db1-8a59-93e489591a82"]
}, Open  ]],
Cell[1354870, 26772, 523, 9, 55, "Text",ExpressionUUID->"09381107-8b0e-4e53-b14b-fe229c55d7ef"],
Cell[CellGroupData[{
Cell[1355418, 26785, 265, 5, 64, "Input",ExpressionUUID->"ec1d37e8-d11b-4a9b-b7c9-afe84a213143"],
Cell[1355686, 26792, 26104, 470, 159, "Output",ExpressionUUID->"eca89990-355f-4e0c-a143-129b103e65ef"]
}, Open  ]],
Cell[1381805, 27265, 396, 6, 55, "Text",ExpressionUUID->"7034e087-c1ff-4d79-b23f-d9c37e0021ef"],
Cell[CellGroupData[{
Cell[1382226, 27275, 257, 7, 64, "Input",ExpressionUUID->"f0356768-2659-4f0e-a95f-d9f0d2a5c7c5"],
Cell[1382486, 27284, 149701, 2989, 657, "Output",ExpressionUUID->"f3ef3b89-bd67-4fad-ad48-f4253c3ce7d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1532224, 30278, 322, 7, 64, "Input",ExpressionUUID->"fbac7e13-fad1-45a8-9944-32b51fee531c"],
Cell[1532549, 30287, 234, 5, 52, "Output",ExpressionUUID->"4a222249-926d-4d7c-a054-924ac8435056"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1532820, 30297, 571, 13, 64, "Input",ExpressionUUID->"8b9500b9-7f52-42d2-80f9-79f788ab7ce1"],
Cell[1533394, 30312, 139091, 2827, 837, "Output",ExpressionUUID->"f8c0c586-d46f-401d-abe6-c93834d3f31b"]
}, Open  ]],
Cell[1672500, 33142, 229, 4, 64, "Input",ExpressionUUID->"67a28b4d-14a5-4f6b-9ec5-616cf7e4da12"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1672778, 33152, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"8ce0bfef-5305-4bbb-9aba-b02bdc90e948",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1672925, 33158, 291, 5, 174, "Section",ExpressionUUID->"e9f252ae-5311-49fa-bf59-152bc4939ea0"],
Cell[CellGroupData[{
Cell[1673241, 33167, 642, 11, 93, "Item",ExpressionUUID->"8c1d4303-030f-4860-a362-429ae4b71181"],
Cell[1673886, 33180, 982, 21, 93, "Item",ExpressionUUID->"9cf5a9d1-aafb-45d4-9015-c9c39a2c6505"],
Cell[1674871, 33203, 488, 7, 56, "Item",ExpressionUUID->"238018a5-9ecd-49e2-a58f-5cd5ddcecc66"],
Cell[1675362, 33212, 337, 5, 56, "Item",ExpressionUUID->"be73bbbe-cdc7-4648-bbe9-738e976f9100"],
Cell[1675702, 33219, 533, 12, 56, "Item",ExpressionUUID->"1435d81f-1458-4a77-857e-6cc09f5b5ef9"],
Cell[1676238, 33233, 409, 6, 56, "Item",ExpressionUUID->"d835faaf-ff53-4f37-bd5f-0fac265f8475"],
Cell[1676650, 33241, 388, 6, 56, "Item",ExpressionUUID->"9e27967e-a7bc-44ce-87bd-ae80add7d814"],
Cell[1677041, 33249, 398, 6, 56, "Item",ExpressionUUID->"e35bbb43-dd6f-410b-993a-6724e99acef6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

